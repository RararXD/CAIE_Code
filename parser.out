Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GETRECORD
    INHERITS
    LEFT_BRACE
    NEWLINE
    PRIVATE
    PUBLIC
    PUTRECORD
    RIGHT_BRACE
    SELF
    SUPER

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     statement -> DELETE ID
Rule 4     statement -> DECLARE ID COLON ID
Rule 5     statement -> CONSTANT ID EQUAL expression
Rule 6     statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
Rule 7     dimensions -> dimensions COMMA dimension
Rule 8     dimensions -> dimension
Rule 9     dimension -> expression COLON expression
Rule 10    indexes -> indexes COMMA expression
Rule 11    indexes -> expression
Rule 12    expression -> LEFT_SQUARE array_items RIGHT_SQUARE
Rule 13    expression -> LEFT_SQUARE RIGHT_SQUARE
Rule 14    array_items -> array_items COMMA expression
Rule 15    array_items -> expression
Rule 16    statement -> INPUT ID
Rule 17    statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 18    statement -> OUTPUT output_expression
Rule 19    output_expression -> output_expression COMMA expression
Rule 20    output_expression -> expression
Rule 21    statement -> IF expression THEN statements ELSE statements ENDIF
Rule 22    statement -> IF expression THEN statements ENDIF
Rule 23    statement -> CASE OF ID cases ENDCASE
Rule 24    statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
Rule 25    cases -> cases case
Rule 26    cases -> case
Rule 27    case -> case_expression COLON statements SEMICOLON
Rule 28    case -> otherwise_statement SEMICOLON
Rule 29    case_expression -> expression TO expression
Rule 30    case_expression -> expression
Rule 31    otherwise_statement -> OTHERWISE COLON statements
Rule 32    statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
Rule 33    statement -> FOR ID ASSIGN expression TO expression statements NEXT ID
Rule 34    statement -> REPEAT statements UNTIL expression
Rule 35    statement -> WHILE expression DO statements ENDWHILE
Rule 36    statement -> WHILE expression statements ENDWHILE
Rule 37    statement -> expression
Rule 38    expression -> ID
Rule 39    expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 40    expression -> expression OR expression
Rule 41    expression -> expression AND expression
Rule 42    expression -> NOT expression
Rule 43    expression -> expression EQUAL expression
Rule 44    expression -> expression NOT_EQUAL expression
Rule 45    expression -> expression LESS expression
Rule 46    expression -> expression GREATER expression
Rule 47    expression -> expression LESS_EQUAL expression
Rule 48    expression -> expression GREATER_EQUAL expression
Rule 49    expression -> expression MOD expression
Rule 50    expression -> expression DIV expression
Rule 51    expression -> expression MUL expression
Rule 52    expression -> expression N_DIV expression
Rule 53    expression -> MINUS expression
Rule 54    expression -> PLUS expression
Rule 55    expression -> expression PLUS expression
Rule 56    expression -> expression MINUS expression
Rule 57    expression -> expression CONNECT expression
Rule 58    expression -> LEFT_PAREN expression RIGHT_PAREN
Rule 59    expression -> DATE
Rule 60    expression -> BOOLEAN
Rule 61    expression -> CHAR
Rule 62    expression -> STRING
Rule 63    expression -> REAL
Rule 64    expression -> INTEGER
Rule 65    declare_parameters -> declare_parameters COMMA declare_parameter
Rule 66    declare_parameters -> declare_parameter
Rule 67    declare_parameter -> ID COLON ID
Rule 68    declare_parameter -> ID COLON ARRAY
Rule 69    declare_parameter -> BYREF ID COLON ID
Rule 70    declare_parameter -> BYREF ID COLON ARRAY
Rule 71    declare_parameter -> BYVAL ID COLON ID
Rule 72    declare_parameter -> BYVAL ID COLON ARRAY
Rule 73    declare_parameter -> ID COLON ARRAY OF ID
Rule 74    declare_parameter -> BYREF ID COLON ARRAY OF ID
Rule 75    declare_parameter -> BYVAL ID COLON ARRAY OF ID
Rule 76    parameters -> parameters COMMA expression
Rule 77    parameters -> expression
Rule 78    statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 79    statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
Rule 80    statement -> PROCEDURE ID statements ENDPROCEDURE
Rule 81    statement -> PROCEDURE NEW statements ENDPROCEDURE
Rule 82    statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN
Rule 83    statement -> CALL ID
Rule 84    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
Rule 85    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
Rule 86    statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION
Rule 87    statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
Rule 88    statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 89    statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
Rule 90    expression -> ID LEFT_PAREN parameters RIGHT_PAREN
Rule 91    expression -> ID LEFT_PAREN RIGHT_PAREN
Rule 92    statement -> RETURN expression
Rule 93    statement -> OPENFILE expression FOR READ
Rule 94    statement -> OPENFILE expression FOR WRITE
Rule 95    statement -> OPENFILE expression FOR APPEND
Rule 96    statement -> OPENFILE expression FOR RANDOM
Rule 97    statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
Rule 98    statement -> READFILE expression COMMA ID
Rule 99    statement -> WRITEFILE expression COMMA expression
Rule 100   statement -> CLOSEFILE expression
Rule 101   statement -> SEEK expression COMMA expression
Rule 102   statement -> TYPE ID statements ENDTYPE
Rule 103   expression -> expression DOT expression
Rule 104   statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
Rule 105   enumerate_items -> enumerate_items COMMA ID
Rule 106   enumerate_items -> ID
Rule 107   expression -> POINTER expression
Rule 108   statement -> TYPE ID EQUAL POINTER ID
Rule 109   statement -> PASS
Rule 110   statement -> IMPORT expression
Rule 111   statement -> expression ASSIGN expression
Rule 112   statement -> CLASS ID statements ENDCLASS
Rule 113   expression -> NEW ID
Rule 114   expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN

Terminals, with rules where they appear

AND                  : 41
APPEND               : 95
ARRAY                : 6 68 70 72 73 74 75 85 87 88 89
ASSIGN               : 32 33 111
BOOLEAN              : 60
BYREF                : 69 70 74
BYVAL                : 71 72 75
CALL                 : 82 83
CASE                 : 23 24
CHAR                 : 61
CLASS                : 112
CLOSEFILE            : 100
COLON                : 4 6 9 27 31 67 68 69 70 71 72 73 74 75
COMMA                : 7 10 14 19 65 76 97 98 99 101 105
CONNECT              : 57
CONSTANT             : 5
DATE                 : 59
DECLARE              : 4 6
DELETE               : 3
DIV                  : 50
DO                   : 35
DOT                  : 103
ELSE                 : 21
ENDCASE              : 23 24
ENDCLASS             : 112
ENDFUNCTION          : 84 85 86 87 88 89
ENDIF                : 21 22
ENDPROCEDURE         : 78 79 80 81
ENDTYPE              : 102
ENDWHILE             : 35 36
EQUAL                : 5 43 104 108
FOR                  : 32 33 93 94 95 96
FUNCTION             : 84 85 86 87 88 89
GETRECORD            : 
GREATER              : 46
GREATER_EQUAL        : 48
ID                   : 3 4 4 5 6 6 16 17 23 24 32 32 33 33 38 39 67 67 68 69 69 70 71 71 72 73 73 74 74 75 75 78 80 82 83 84 84 85 86 86 87 88 88 89 89 90 91 97 98 102 104 105 106 108 108 112 113 114
IF                   : 21 22
IMPORT               : 110
INHERITS             : 
INPUT                : 16 17
INTEGER              : 64
LEFT_BRACE           : 
LEFT_PAREN           : 58 78 79 82 84 85 88 90 91 104 114
LEFT_SQUARE          : 6 12 13 17 24 39 97
LESS                 : 45
LESS_EQUAL           : 47
MINUS                : 53 56
MOD                  : 49
MUL                  : 51
NEW                  : 79 81 113 114
NEWLINE              : 
NEXT                 : 32 33
NOT                  : 42
NOT_EQUAL            : 44
N_DIV                : 52
OF                   : 6 23 24 73 74 75 88 89
OPENFILE             : 93 94 95 96
OR                   : 40
OTHERWISE            : 31
OUTPUT               : 18
PASS                 : 109
PLUS                 : 54 55
POINTER              : 107 108
PRIVATE              : 
PROCEDURE            : 78 79 80 81
PUBLIC               : 
PUTRECORD            : 
RANDOM               : 96
READ                 : 93
READFILE             : 97 98
REAL                 : 63
REPEAT               : 34
RETURN               : 92
RETURNS              : 84 85 86 87 88 89
RIGHT_BRACE          : 
RIGHT_PAREN          : 58 78 79 82 84 85 88 90 91 104 114
RIGHT_SQUARE         : 6 12 13 17 24 39 97
SEEK                 : 101
SELF                 : 
SEMICOLON            : 27 28
STEP                 : 32
STRING               : 62
SUPER                : 
THEN                 : 21 22
TO                   : 29 32 33
TYPE                 : 102 104 108
UNTIL                : 34
WHILE                : 35 36
WRITE                : 94
WRITEFILE            : 99
error                : 

Nonterminals, with rules where they appear

array_items          : 12 14
case                 : 25 26
case_expression      : 27
cases                : 23 24 25
declare_parameter    : 65 66
declare_parameters   : 65 78 79 84 85 88
dimension            : 7 8
dimensions           : 6 7
enumerate_items      : 104 105
expression           : 5 9 9 10 11 14 15 19 20 21 22 29 29 30 32 32 32 33 33 34 35 36 37 40 40 41 41 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 54 55 55 56 56 57 57 58 76 77 92 93 94 95 96 97 98 99 99 100 101 101 103 103 107 110 111 111
indexes              : 10 17 24 39 97
otherwise_statement  : 28
output_expression    : 18 19
parameters           : 76 82 90 114
statement            : 1 2
statements           : 1 21 21 22 27 31 32 33 34 35 36 78 79 80 81 84 85 86 87 88 89 102 112 0

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 2

    (2) statements -> statement .

    DELETE          reduce using rule 2 (statements -> statement .)
    DECLARE         reduce using rule 2 (statements -> statement .)
    CONSTANT        reduce using rule 2 (statements -> statement .)
    INPUT           reduce using rule 2 (statements -> statement .)
    OUTPUT          reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CASE            reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    REPEAT          reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    PROCEDURE       reduce using rule 2 (statements -> statement .)
    CALL            reduce using rule 2 (statements -> statement .)
    FUNCTION        reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    OPENFILE        reduce using rule 2 (statements -> statement .)
    READFILE        reduce using rule 2 (statements -> statement .)
    WRITEFILE       reduce using rule 2 (statements -> statement .)
    CLOSEFILE       reduce using rule 2 (statements -> statement .)
    SEEK            reduce using rule 2 (statements -> statement .)
    TYPE            reduce using rule 2 (statements -> statement .)
    PASS            reduce using rule 2 (statements -> statement .)
    IMPORT          reduce using rule 2 (statements -> statement .)
    CLASS           reduce using rule 2 (statements -> statement .)
    LEFT_SQUARE     reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    NOT             reduce using rule 2 (statements -> statement .)
    MINUS           reduce using rule 2 (statements -> statement .)
    PLUS            reduce using rule 2 (statements -> statement .)
    LEFT_PAREN      reduce using rule 2 (statements -> statement .)
    DATE            reduce using rule 2 (statements -> statement .)
    BOOLEAN         reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    STRING          reduce using rule 2 (statements -> statement .)
    REAL            reduce using rule 2 (statements -> statement .)
    INTEGER         reduce using rule 2 (statements -> statement .)
    POINTER         reduce using rule 2 (statements -> statement .)
    NEW             reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    UNTIL           reduce using rule 2 (statements -> statement .)
    ENDWHILE        reduce using rule 2 (statements -> statement .)
    ENDPROCEDURE    reduce using rule 2 (statements -> statement .)
    ENDTYPE         reduce using rule 2 (statements -> statement .)
    ENDCLASS        reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ENDIF           reduce using rule 2 (statements -> statement .)
    ENDFUNCTION     reduce using rule 2 (statements -> statement .)
    SEMICOLON       reduce using rule 2 (statements -> statement .)
    NEXT            reduce using rule 2 (statements -> statement .)


state 3

    (3) statement -> DELETE . ID

    ID              shift and go to state 42


state 4

    (38) expression -> ID .
    (39) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (90) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> ID . LEFT_PAREN RIGHT_PAREN

  ! shift/reduce conflict for LEFT_SQUARE resolved as shift
  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    ASSIGN          reduce using rule 38 (expression -> ID .)
    OR              reduce using rule 38 (expression -> ID .)
    AND             reduce using rule 38 (expression -> ID .)
    EQUAL           reduce using rule 38 (expression -> ID .)
    NOT_EQUAL       reduce using rule 38 (expression -> ID .)
    LESS            reduce using rule 38 (expression -> ID .)
    GREATER         reduce using rule 38 (expression -> ID .)
    LESS_EQUAL      reduce using rule 38 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 38 (expression -> ID .)
    MOD             reduce using rule 38 (expression -> ID .)
    DIV             reduce using rule 38 (expression -> ID .)
    MUL             reduce using rule 38 (expression -> ID .)
    N_DIV           reduce using rule 38 (expression -> ID .)
    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    CONNECT         reduce using rule 38 (expression -> ID .)
    DOT             reduce using rule 38 (expression -> ID .)
    DELETE          reduce using rule 38 (expression -> ID .)
    DECLARE         reduce using rule 38 (expression -> ID .)
    CONSTANT        reduce using rule 38 (expression -> ID .)
    INPUT           reduce using rule 38 (expression -> ID .)
    OUTPUT          reduce using rule 38 (expression -> ID .)
    IF              reduce using rule 38 (expression -> ID .)
    CASE            reduce using rule 38 (expression -> ID .)
    FOR             reduce using rule 38 (expression -> ID .)
    REPEAT          reduce using rule 38 (expression -> ID .)
    WHILE           reduce using rule 38 (expression -> ID .)
    PROCEDURE       reduce using rule 38 (expression -> ID .)
    CALL            reduce using rule 38 (expression -> ID .)
    FUNCTION        reduce using rule 38 (expression -> ID .)
    RETURN          reduce using rule 38 (expression -> ID .)
    OPENFILE        reduce using rule 38 (expression -> ID .)
    READFILE        reduce using rule 38 (expression -> ID .)
    WRITEFILE       reduce using rule 38 (expression -> ID .)
    CLOSEFILE       reduce using rule 38 (expression -> ID .)
    SEEK            reduce using rule 38 (expression -> ID .)
    TYPE            reduce using rule 38 (expression -> ID .)
    PASS            reduce using rule 38 (expression -> ID .)
    IMPORT          reduce using rule 38 (expression -> ID .)
    CLASS           reduce using rule 38 (expression -> ID .)
    ID              reduce using rule 38 (expression -> ID .)
    NOT             reduce using rule 38 (expression -> ID .)
    DATE            reduce using rule 38 (expression -> ID .)
    BOOLEAN         reduce using rule 38 (expression -> ID .)
    CHAR            reduce using rule 38 (expression -> ID .)
    STRING          reduce using rule 38 (expression -> ID .)
    REAL            reduce using rule 38 (expression -> ID .)
    INTEGER         reduce using rule 38 (expression -> ID .)
    POINTER         reduce using rule 38 (expression -> ID .)
    NEW             reduce using rule 38 (expression -> ID .)
    $end            reduce using rule 38 (expression -> ID .)
    RIGHT_SQUARE    reduce using rule 38 (expression -> ID .)
    COMMA           reduce using rule 38 (expression -> ID .)
    UNTIL           reduce using rule 38 (expression -> ID .)
    ENDWHILE        reduce using rule 38 (expression -> ID .)
    ENDPROCEDURE    reduce using rule 38 (expression -> ID .)
    ENDTYPE         reduce using rule 38 (expression -> ID .)
    ENDCLASS        reduce using rule 38 (expression -> ID .)
    ELSE            reduce using rule 38 (expression -> ID .)
    ENDIF           reduce using rule 38 (expression -> ID .)
    ENDFUNCTION     reduce using rule 38 (expression -> ID .)
    SEMICOLON       reduce using rule 38 (expression -> ID .)
    NEXT            reduce using rule 38 (expression -> ID .)
    THEN            reduce using rule 38 (expression -> ID .)
    DO              reduce using rule 38 (expression -> ID .)
    RIGHT_PAREN     reduce using rule 38 (expression -> ID .)
    TO              reduce using rule 38 (expression -> ID .)
    COLON           reduce using rule 38 (expression -> ID .)
    STEP            reduce using rule 38 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 43
    LEFT_PAREN      shift and go to state 44

  ! LEFT_SQUARE     [ reduce using rule 38 (expression -> ID .) ]
  ! LEFT_PAREN      [ reduce using rule 38 (expression -> ID .) ]


state 5

    (4) statement -> DECLARE . ID COLON ID
    (6) statement -> DECLARE . ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 45


state 6

    (5) statement -> CONSTANT . ID EQUAL expression

    ID              shift and go to state 46


state 7

    (37) statement -> expression .
    (111) statement -> expression . ASSIGN expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 37 (statement -> expression .)
    DECLARE         reduce using rule 37 (statement -> expression .)
    CONSTANT        reduce using rule 37 (statement -> expression .)
    INPUT           reduce using rule 37 (statement -> expression .)
    OUTPUT          reduce using rule 37 (statement -> expression .)
    IF              reduce using rule 37 (statement -> expression .)
    CASE            reduce using rule 37 (statement -> expression .)
    FOR             reduce using rule 37 (statement -> expression .)
    REPEAT          reduce using rule 37 (statement -> expression .)
    WHILE           reduce using rule 37 (statement -> expression .)
    PROCEDURE       reduce using rule 37 (statement -> expression .)
    CALL            reduce using rule 37 (statement -> expression .)
    FUNCTION        reduce using rule 37 (statement -> expression .)
    RETURN          reduce using rule 37 (statement -> expression .)
    OPENFILE        reduce using rule 37 (statement -> expression .)
    READFILE        reduce using rule 37 (statement -> expression .)
    WRITEFILE       reduce using rule 37 (statement -> expression .)
    CLOSEFILE       reduce using rule 37 (statement -> expression .)
    SEEK            reduce using rule 37 (statement -> expression .)
    TYPE            reduce using rule 37 (statement -> expression .)
    PASS            reduce using rule 37 (statement -> expression .)
    IMPORT          reduce using rule 37 (statement -> expression .)
    CLASS           reduce using rule 37 (statement -> expression .)
    LEFT_SQUARE     reduce using rule 37 (statement -> expression .)
    ID              reduce using rule 37 (statement -> expression .)
    NOT             reduce using rule 37 (statement -> expression .)
    LEFT_PAREN      reduce using rule 37 (statement -> expression .)
    DATE            reduce using rule 37 (statement -> expression .)
    BOOLEAN         reduce using rule 37 (statement -> expression .)
    CHAR            reduce using rule 37 (statement -> expression .)
    STRING          reduce using rule 37 (statement -> expression .)
    REAL            reduce using rule 37 (statement -> expression .)
    INTEGER         reduce using rule 37 (statement -> expression .)
    POINTER         reduce using rule 37 (statement -> expression .)
    NEW             reduce using rule 37 (statement -> expression .)
    $end            reduce using rule 37 (statement -> expression .)
    UNTIL           reduce using rule 37 (statement -> expression .)
    ENDWHILE        reduce using rule 37 (statement -> expression .)
    ENDPROCEDURE    reduce using rule 37 (statement -> expression .)
    ENDTYPE         reduce using rule 37 (statement -> expression .)
    ENDCLASS        reduce using rule 37 (statement -> expression .)
    ELSE            reduce using rule 37 (statement -> expression .)
    ENDIF           reduce using rule 37 (statement -> expression .)
    ENDFUNCTION     reduce using rule 37 (statement -> expression .)
    SEMICOLON       reduce using rule 37 (statement -> expression .)
    NEXT            reduce using rule 37 (statement -> expression .)
    ASSIGN          shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 37 (statement -> expression .) ]
  ! PLUS            [ reduce using rule 37 (statement -> expression .) ]


state 8

    (12) expression -> LEFT_SQUARE . array_items RIGHT_SQUARE
    (13) expression -> LEFT_SQUARE . RIGHT_SQUARE
    (14) array_items -> . array_items COMMA expression
    (15) array_items -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    RIGHT_SQUARE    shift and go to state 65
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    array_items                    shift and go to state 64
    expression                     shift and go to state 66

state 9

    (16) statement -> INPUT . ID
    (17) statement -> INPUT . ID LEFT_SQUARE indexes RIGHT_SQUARE

    ID              shift and go to state 67


state 10

    (18) statement -> OUTPUT . output_expression
    (19) output_expression -> . output_expression COMMA expression
    (20) output_expression -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    output_expression              shift and go to state 68
    expression                     shift and go to state 69

state 11

    (21) statement -> IF . expression THEN statements ELSE statements ENDIF
    (22) statement -> IF . expression THEN statements ENDIF
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 70

state 12

    (23) statement -> CASE . OF ID cases ENDCASE
    (24) statement -> CASE . OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE

    OF              shift and go to state 71


state 13

    (32) statement -> FOR . ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> FOR . ID ASSIGN expression TO expression statements NEXT ID

    ID              shift and go to state 72


state 14

    (34) statement -> REPEAT . statements UNTIL expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 73
    expression                     shift and go to state 7
    statement                      shift and go to state 2

state 15

    (35) statement -> WHILE . expression DO statements ENDWHILE
    (36) statement -> WHILE . expression statements ENDWHILE
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 74

state 16

    (78) statement -> PROCEDURE . ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> PROCEDURE . NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> PROCEDURE . ID statements ENDPROCEDURE
    (81) statement -> PROCEDURE . NEW statements ENDPROCEDURE

    ID              shift and go to state 75
    NEW             shift and go to state 76


state 17

    (58) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 77

state 18

    (113) expression -> NEW . ID
    (114) expression -> NEW . ID LEFT_PAREN parameters RIGHT_PAREN

    ID              shift and go to state 78


state 19

    (82) statement -> CALL . ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> CALL . ID

    ID              shift and go to state 79


state 20

    (84) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> FUNCTION . ID RETURNS ID statements ENDFUNCTION
    (87) statement -> FUNCTION . ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> FUNCTION . ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> FUNCTION . ID RETURNS ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 80


state 21

    (92) statement -> RETURN . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 81

state 22

    (93) statement -> OPENFILE . expression FOR READ
    (94) statement -> OPENFILE . expression FOR WRITE
    (95) statement -> OPENFILE . expression FOR APPEND
    (96) statement -> OPENFILE . expression FOR RANDOM
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 82

state 23

    (97) statement -> READFILE . expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> READFILE . expression COMMA ID
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 83

state 24

    (99) statement -> WRITEFILE . expression COMMA expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 84

state 25

    (100) statement -> CLOSEFILE . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 85

state 26

    (101) statement -> SEEK . expression COMMA expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 86

state 27

    (102) statement -> TYPE . ID statements ENDTYPE
    (104) statement -> TYPE . ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> TYPE . ID EQUAL POINTER ID

    ID              shift and go to state 87


state 28

    (107) expression -> POINTER . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 88

state 29

    (109) statement -> PASS .

    DELETE          reduce using rule 109 (statement -> PASS .)
    DECLARE         reduce using rule 109 (statement -> PASS .)
    CONSTANT        reduce using rule 109 (statement -> PASS .)
    INPUT           reduce using rule 109 (statement -> PASS .)
    OUTPUT          reduce using rule 109 (statement -> PASS .)
    IF              reduce using rule 109 (statement -> PASS .)
    CASE            reduce using rule 109 (statement -> PASS .)
    FOR             reduce using rule 109 (statement -> PASS .)
    REPEAT          reduce using rule 109 (statement -> PASS .)
    WHILE           reduce using rule 109 (statement -> PASS .)
    PROCEDURE       reduce using rule 109 (statement -> PASS .)
    CALL            reduce using rule 109 (statement -> PASS .)
    FUNCTION        reduce using rule 109 (statement -> PASS .)
    RETURN          reduce using rule 109 (statement -> PASS .)
    OPENFILE        reduce using rule 109 (statement -> PASS .)
    READFILE        reduce using rule 109 (statement -> PASS .)
    WRITEFILE       reduce using rule 109 (statement -> PASS .)
    CLOSEFILE       reduce using rule 109 (statement -> PASS .)
    SEEK            reduce using rule 109 (statement -> PASS .)
    TYPE            reduce using rule 109 (statement -> PASS .)
    PASS            reduce using rule 109 (statement -> PASS .)
    IMPORT          reduce using rule 109 (statement -> PASS .)
    CLASS           reduce using rule 109 (statement -> PASS .)
    LEFT_SQUARE     reduce using rule 109 (statement -> PASS .)
    ID              reduce using rule 109 (statement -> PASS .)
    NOT             reduce using rule 109 (statement -> PASS .)
    MINUS           reduce using rule 109 (statement -> PASS .)
    PLUS            reduce using rule 109 (statement -> PASS .)
    LEFT_PAREN      reduce using rule 109 (statement -> PASS .)
    DATE            reduce using rule 109 (statement -> PASS .)
    BOOLEAN         reduce using rule 109 (statement -> PASS .)
    CHAR            reduce using rule 109 (statement -> PASS .)
    STRING          reduce using rule 109 (statement -> PASS .)
    REAL            reduce using rule 109 (statement -> PASS .)
    INTEGER         reduce using rule 109 (statement -> PASS .)
    POINTER         reduce using rule 109 (statement -> PASS .)
    NEW             reduce using rule 109 (statement -> PASS .)
    $end            reduce using rule 109 (statement -> PASS .)
    UNTIL           reduce using rule 109 (statement -> PASS .)
    ENDWHILE        reduce using rule 109 (statement -> PASS .)
    ENDPROCEDURE    reduce using rule 109 (statement -> PASS .)
    ENDTYPE         reduce using rule 109 (statement -> PASS .)
    ENDCLASS        reduce using rule 109 (statement -> PASS .)
    ELSE            reduce using rule 109 (statement -> PASS .)
    ENDIF           reduce using rule 109 (statement -> PASS .)
    ENDFUNCTION     reduce using rule 109 (statement -> PASS .)
    SEMICOLON       reduce using rule 109 (statement -> PASS .)
    NEXT            reduce using rule 109 (statement -> PASS .)


state 30

    (110) statement -> IMPORT . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 89

state 31

    (112) statement -> CLASS . ID statements ENDCLASS

    ID              shift and go to state 90


state 32

    (42) expression -> NOT . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 91

state 33

    (53) expression -> MINUS . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 92

state 34

    (54) expression -> PLUS . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 93

state 35

    (59) expression -> DATE .

    ASSIGN          reduce using rule 59 (expression -> DATE .)
    OR              reduce using rule 59 (expression -> DATE .)
    AND             reduce using rule 59 (expression -> DATE .)
    EQUAL           reduce using rule 59 (expression -> DATE .)
    NOT_EQUAL       reduce using rule 59 (expression -> DATE .)
    LESS            reduce using rule 59 (expression -> DATE .)
    GREATER         reduce using rule 59 (expression -> DATE .)
    LESS_EQUAL      reduce using rule 59 (expression -> DATE .)
    GREATER_EQUAL   reduce using rule 59 (expression -> DATE .)
    MOD             reduce using rule 59 (expression -> DATE .)
    DIV             reduce using rule 59 (expression -> DATE .)
    MUL             reduce using rule 59 (expression -> DATE .)
    N_DIV           reduce using rule 59 (expression -> DATE .)
    PLUS            reduce using rule 59 (expression -> DATE .)
    MINUS           reduce using rule 59 (expression -> DATE .)
    CONNECT         reduce using rule 59 (expression -> DATE .)
    DOT             reduce using rule 59 (expression -> DATE .)
    DELETE          reduce using rule 59 (expression -> DATE .)
    DECLARE         reduce using rule 59 (expression -> DATE .)
    CONSTANT        reduce using rule 59 (expression -> DATE .)
    INPUT           reduce using rule 59 (expression -> DATE .)
    OUTPUT          reduce using rule 59 (expression -> DATE .)
    IF              reduce using rule 59 (expression -> DATE .)
    CASE            reduce using rule 59 (expression -> DATE .)
    FOR             reduce using rule 59 (expression -> DATE .)
    REPEAT          reduce using rule 59 (expression -> DATE .)
    WHILE           reduce using rule 59 (expression -> DATE .)
    PROCEDURE       reduce using rule 59 (expression -> DATE .)
    CALL            reduce using rule 59 (expression -> DATE .)
    FUNCTION        reduce using rule 59 (expression -> DATE .)
    RETURN          reduce using rule 59 (expression -> DATE .)
    OPENFILE        reduce using rule 59 (expression -> DATE .)
    READFILE        reduce using rule 59 (expression -> DATE .)
    WRITEFILE       reduce using rule 59 (expression -> DATE .)
    CLOSEFILE       reduce using rule 59 (expression -> DATE .)
    SEEK            reduce using rule 59 (expression -> DATE .)
    TYPE            reduce using rule 59 (expression -> DATE .)
    PASS            reduce using rule 59 (expression -> DATE .)
    IMPORT          reduce using rule 59 (expression -> DATE .)
    CLASS           reduce using rule 59 (expression -> DATE .)
    LEFT_SQUARE     reduce using rule 59 (expression -> DATE .)
    ID              reduce using rule 59 (expression -> DATE .)
    NOT             reduce using rule 59 (expression -> DATE .)
    LEFT_PAREN      reduce using rule 59 (expression -> DATE .)
    DATE            reduce using rule 59 (expression -> DATE .)
    BOOLEAN         reduce using rule 59 (expression -> DATE .)
    CHAR            reduce using rule 59 (expression -> DATE .)
    STRING          reduce using rule 59 (expression -> DATE .)
    REAL            reduce using rule 59 (expression -> DATE .)
    INTEGER         reduce using rule 59 (expression -> DATE .)
    POINTER         reduce using rule 59 (expression -> DATE .)
    NEW             reduce using rule 59 (expression -> DATE .)
    $end            reduce using rule 59 (expression -> DATE .)
    RIGHT_SQUARE    reduce using rule 59 (expression -> DATE .)
    COMMA           reduce using rule 59 (expression -> DATE .)
    UNTIL           reduce using rule 59 (expression -> DATE .)
    ENDWHILE        reduce using rule 59 (expression -> DATE .)
    ENDPROCEDURE    reduce using rule 59 (expression -> DATE .)
    ENDTYPE         reduce using rule 59 (expression -> DATE .)
    ENDCLASS        reduce using rule 59 (expression -> DATE .)
    ELSE            reduce using rule 59 (expression -> DATE .)
    ENDIF           reduce using rule 59 (expression -> DATE .)
    ENDFUNCTION     reduce using rule 59 (expression -> DATE .)
    SEMICOLON       reduce using rule 59 (expression -> DATE .)
    NEXT            reduce using rule 59 (expression -> DATE .)
    THEN            reduce using rule 59 (expression -> DATE .)
    DO              reduce using rule 59 (expression -> DATE .)
    RIGHT_PAREN     reduce using rule 59 (expression -> DATE .)
    TO              reduce using rule 59 (expression -> DATE .)
    COLON           reduce using rule 59 (expression -> DATE .)
    STEP            reduce using rule 59 (expression -> DATE .)


state 36

    (60) expression -> BOOLEAN .

    ASSIGN          reduce using rule 60 (expression -> BOOLEAN .)
    OR              reduce using rule 60 (expression -> BOOLEAN .)
    AND             reduce using rule 60 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 60 (expression -> BOOLEAN .)
    NOT_EQUAL       reduce using rule 60 (expression -> BOOLEAN .)
    LESS            reduce using rule 60 (expression -> BOOLEAN .)
    GREATER         reduce using rule 60 (expression -> BOOLEAN .)
    LESS_EQUAL      reduce using rule 60 (expression -> BOOLEAN .)
    GREATER_EQUAL   reduce using rule 60 (expression -> BOOLEAN .)
    MOD             reduce using rule 60 (expression -> BOOLEAN .)
    DIV             reduce using rule 60 (expression -> BOOLEAN .)
    MUL             reduce using rule 60 (expression -> BOOLEAN .)
    N_DIV           reduce using rule 60 (expression -> BOOLEAN .)
    PLUS            reduce using rule 60 (expression -> BOOLEAN .)
    MINUS           reduce using rule 60 (expression -> BOOLEAN .)
    CONNECT         reduce using rule 60 (expression -> BOOLEAN .)
    DOT             reduce using rule 60 (expression -> BOOLEAN .)
    DELETE          reduce using rule 60 (expression -> BOOLEAN .)
    DECLARE         reduce using rule 60 (expression -> BOOLEAN .)
    CONSTANT        reduce using rule 60 (expression -> BOOLEAN .)
    INPUT           reduce using rule 60 (expression -> BOOLEAN .)
    OUTPUT          reduce using rule 60 (expression -> BOOLEAN .)
    IF              reduce using rule 60 (expression -> BOOLEAN .)
    CASE            reduce using rule 60 (expression -> BOOLEAN .)
    FOR             reduce using rule 60 (expression -> BOOLEAN .)
    REPEAT          reduce using rule 60 (expression -> BOOLEAN .)
    WHILE           reduce using rule 60 (expression -> BOOLEAN .)
    PROCEDURE       reduce using rule 60 (expression -> BOOLEAN .)
    CALL            reduce using rule 60 (expression -> BOOLEAN .)
    FUNCTION        reduce using rule 60 (expression -> BOOLEAN .)
    RETURN          reduce using rule 60 (expression -> BOOLEAN .)
    OPENFILE        reduce using rule 60 (expression -> BOOLEAN .)
    READFILE        reduce using rule 60 (expression -> BOOLEAN .)
    WRITEFILE       reduce using rule 60 (expression -> BOOLEAN .)
    CLOSEFILE       reduce using rule 60 (expression -> BOOLEAN .)
    SEEK            reduce using rule 60 (expression -> BOOLEAN .)
    TYPE            reduce using rule 60 (expression -> BOOLEAN .)
    PASS            reduce using rule 60 (expression -> BOOLEAN .)
    IMPORT          reduce using rule 60 (expression -> BOOLEAN .)
    CLASS           reduce using rule 60 (expression -> BOOLEAN .)
    LEFT_SQUARE     reduce using rule 60 (expression -> BOOLEAN .)
    ID              reduce using rule 60 (expression -> BOOLEAN .)
    NOT             reduce using rule 60 (expression -> BOOLEAN .)
    LEFT_PAREN      reduce using rule 60 (expression -> BOOLEAN .)
    DATE            reduce using rule 60 (expression -> BOOLEAN .)
    BOOLEAN         reduce using rule 60 (expression -> BOOLEAN .)
    CHAR            reduce using rule 60 (expression -> BOOLEAN .)
    STRING          reduce using rule 60 (expression -> BOOLEAN .)
    REAL            reduce using rule 60 (expression -> BOOLEAN .)
    INTEGER         reduce using rule 60 (expression -> BOOLEAN .)
    POINTER         reduce using rule 60 (expression -> BOOLEAN .)
    NEW             reduce using rule 60 (expression -> BOOLEAN .)
    $end            reduce using rule 60 (expression -> BOOLEAN .)
    RIGHT_SQUARE    reduce using rule 60 (expression -> BOOLEAN .)
    COMMA           reduce using rule 60 (expression -> BOOLEAN .)
    UNTIL           reduce using rule 60 (expression -> BOOLEAN .)
    ENDWHILE        reduce using rule 60 (expression -> BOOLEAN .)
    ENDPROCEDURE    reduce using rule 60 (expression -> BOOLEAN .)
    ENDTYPE         reduce using rule 60 (expression -> BOOLEAN .)
    ENDCLASS        reduce using rule 60 (expression -> BOOLEAN .)
    ELSE            reduce using rule 60 (expression -> BOOLEAN .)
    ENDIF           reduce using rule 60 (expression -> BOOLEAN .)
    ENDFUNCTION     reduce using rule 60 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 60 (expression -> BOOLEAN .)
    NEXT            reduce using rule 60 (expression -> BOOLEAN .)
    THEN            reduce using rule 60 (expression -> BOOLEAN .)
    DO              reduce using rule 60 (expression -> BOOLEAN .)
    RIGHT_PAREN     reduce using rule 60 (expression -> BOOLEAN .)
    TO              reduce using rule 60 (expression -> BOOLEAN .)
    COLON           reduce using rule 60 (expression -> BOOLEAN .)
    STEP            reduce using rule 60 (expression -> BOOLEAN .)


state 37

    (61) expression -> CHAR .

    ASSIGN          reduce using rule 61 (expression -> CHAR .)
    OR              reduce using rule 61 (expression -> CHAR .)
    AND             reduce using rule 61 (expression -> CHAR .)
    EQUAL           reduce using rule 61 (expression -> CHAR .)
    NOT_EQUAL       reduce using rule 61 (expression -> CHAR .)
    LESS            reduce using rule 61 (expression -> CHAR .)
    GREATER         reduce using rule 61 (expression -> CHAR .)
    LESS_EQUAL      reduce using rule 61 (expression -> CHAR .)
    GREATER_EQUAL   reduce using rule 61 (expression -> CHAR .)
    MOD             reduce using rule 61 (expression -> CHAR .)
    DIV             reduce using rule 61 (expression -> CHAR .)
    MUL             reduce using rule 61 (expression -> CHAR .)
    N_DIV           reduce using rule 61 (expression -> CHAR .)
    PLUS            reduce using rule 61 (expression -> CHAR .)
    MINUS           reduce using rule 61 (expression -> CHAR .)
    CONNECT         reduce using rule 61 (expression -> CHAR .)
    DOT             reduce using rule 61 (expression -> CHAR .)
    DELETE          reduce using rule 61 (expression -> CHAR .)
    DECLARE         reduce using rule 61 (expression -> CHAR .)
    CONSTANT        reduce using rule 61 (expression -> CHAR .)
    INPUT           reduce using rule 61 (expression -> CHAR .)
    OUTPUT          reduce using rule 61 (expression -> CHAR .)
    IF              reduce using rule 61 (expression -> CHAR .)
    CASE            reduce using rule 61 (expression -> CHAR .)
    FOR             reduce using rule 61 (expression -> CHAR .)
    REPEAT          reduce using rule 61 (expression -> CHAR .)
    WHILE           reduce using rule 61 (expression -> CHAR .)
    PROCEDURE       reduce using rule 61 (expression -> CHAR .)
    CALL            reduce using rule 61 (expression -> CHAR .)
    FUNCTION        reduce using rule 61 (expression -> CHAR .)
    RETURN          reduce using rule 61 (expression -> CHAR .)
    OPENFILE        reduce using rule 61 (expression -> CHAR .)
    READFILE        reduce using rule 61 (expression -> CHAR .)
    WRITEFILE       reduce using rule 61 (expression -> CHAR .)
    CLOSEFILE       reduce using rule 61 (expression -> CHAR .)
    SEEK            reduce using rule 61 (expression -> CHAR .)
    TYPE            reduce using rule 61 (expression -> CHAR .)
    PASS            reduce using rule 61 (expression -> CHAR .)
    IMPORT          reduce using rule 61 (expression -> CHAR .)
    CLASS           reduce using rule 61 (expression -> CHAR .)
    LEFT_SQUARE     reduce using rule 61 (expression -> CHAR .)
    ID              reduce using rule 61 (expression -> CHAR .)
    NOT             reduce using rule 61 (expression -> CHAR .)
    LEFT_PAREN      reduce using rule 61 (expression -> CHAR .)
    DATE            reduce using rule 61 (expression -> CHAR .)
    BOOLEAN         reduce using rule 61 (expression -> CHAR .)
    CHAR            reduce using rule 61 (expression -> CHAR .)
    STRING          reduce using rule 61 (expression -> CHAR .)
    REAL            reduce using rule 61 (expression -> CHAR .)
    INTEGER         reduce using rule 61 (expression -> CHAR .)
    POINTER         reduce using rule 61 (expression -> CHAR .)
    NEW             reduce using rule 61 (expression -> CHAR .)
    $end            reduce using rule 61 (expression -> CHAR .)
    RIGHT_SQUARE    reduce using rule 61 (expression -> CHAR .)
    COMMA           reduce using rule 61 (expression -> CHAR .)
    UNTIL           reduce using rule 61 (expression -> CHAR .)
    ENDWHILE        reduce using rule 61 (expression -> CHAR .)
    ENDPROCEDURE    reduce using rule 61 (expression -> CHAR .)
    ENDTYPE         reduce using rule 61 (expression -> CHAR .)
    ENDCLASS        reduce using rule 61 (expression -> CHAR .)
    ELSE            reduce using rule 61 (expression -> CHAR .)
    ENDIF           reduce using rule 61 (expression -> CHAR .)
    ENDFUNCTION     reduce using rule 61 (expression -> CHAR .)
    SEMICOLON       reduce using rule 61 (expression -> CHAR .)
    NEXT            reduce using rule 61 (expression -> CHAR .)
    THEN            reduce using rule 61 (expression -> CHAR .)
    DO              reduce using rule 61 (expression -> CHAR .)
    RIGHT_PAREN     reduce using rule 61 (expression -> CHAR .)
    TO              reduce using rule 61 (expression -> CHAR .)
    COLON           reduce using rule 61 (expression -> CHAR .)
    STEP            reduce using rule 61 (expression -> CHAR .)


state 38

    (62) expression -> STRING .

    ASSIGN          reduce using rule 62 (expression -> STRING .)
    OR              reduce using rule 62 (expression -> STRING .)
    AND             reduce using rule 62 (expression -> STRING .)
    EQUAL           reduce using rule 62 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 62 (expression -> STRING .)
    LESS            reduce using rule 62 (expression -> STRING .)
    GREATER         reduce using rule 62 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 62 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 62 (expression -> STRING .)
    MOD             reduce using rule 62 (expression -> STRING .)
    DIV             reduce using rule 62 (expression -> STRING .)
    MUL             reduce using rule 62 (expression -> STRING .)
    N_DIV           reduce using rule 62 (expression -> STRING .)
    PLUS            reduce using rule 62 (expression -> STRING .)
    MINUS           reduce using rule 62 (expression -> STRING .)
    CONNECT         reduce using rule 62 (expression -> STRING .)
    DOT             reduce using rule 62 (expression -> STRING .)
    DELETE          reduce using rule 62 (expression -> STRING .)
    DECLARE         reduce using rule 62 (expression -> STRING .)
    CONSTANT        reduce using rule 62 (expression -> STRING .)
    INPUT           reduce using rule 62 (expression -> STRING .)
    OUTPUT          reduce using rule 62 (expression -> STRING .)
    IF              reduce using rule 62 (expression -> STRING .)
    CASE            reduce using rule 62 (expression -> STRING .)
    FOR             reduce using rule 62 (expression -> STRING .)
    REPEAT          reduce using rule 62 (expression -> STRING .)
    WHILE           reduce using rule 62 (expression -> STRING .)
    PROCEDURE       reduce using rule 62 (expression -> STRING .)
    CALL            reduce using rule 62 (expression -> STRING .)
    FUNCTION        reduce using rule 62 (expression -> STRING .)
    RETURN          reduce using rule 62 (expression -> STRING .)
    OPENFILE        reduce using rule 62 (expression -> STRING .)
    READFILE        reduce using rule 62 (expression -> STRING .)
    WRITEFILE       reduce using rule 62 (expression -> STRING .)
    CLOSEFILE       reduce using rule 62 (expression -> STRING .)
    SEEK            reduce using rule 62 (expression -> STRING .)
    TYPE            reduce using rule 62 (expression -> STRING .)
    PASS            reduce using rule 62 (expression -> STRING .)
    IMPORT          reduce using rule 62 (expression -> STRING .)
    CLASS           reduce using rule 62 (expression -> STRING .)
    LEFT_SQUARE     reduce using rule 62 (expression -> STRING .)
    ID              reduce using rule 62 (expression -> STRING .)
    NOT             reduce using rule 62 (expression -> STRING .)
    LEFT_PAREN      reduce using rule 62 (expression -> STRING .)
    DATE            reduce using rule 62 (expression -> STRING .)
    BOOLEAN         reduce using rule 62 (expression -> STRING .)
    CHAR            reduce using rule 62 (expression -> STRING .)
    STRING          reduce using rule 62 (expression -> STRING .)
    REAL            reduce using rule 62 (expression -> STRING .)
    INTEGER         reduce using rule 62 (expression -> STRING .)
    POINTER         reduce using rule 62 (expression -> STRING .)
    NEW             reduce using rule 62 (expression -> STRING .)
    $end            reduce using rule 62 (expression -> STRING .)
    RIGHT_SQUARE    reduce using rule 62 (expression -> STRING .)
    COMMA           reduce using rule 62 (expression -> STRING .)
    UNTIL           reduce using rule 62 (expression -> STRING .)
    ENDWHILE        reduce using rule 62 (expression -> STRING .)
    ENDPROCEDURE    reduce using rule 62 (expression -> STRING .)
    ENDTYPE         reduce using rule 62 (expression -> STRING .)
    ENDCLASS        reduce using rule 62 (expression -> STRING .)
    ELSE            reduce using rule 62 (expression -> STRING .)
    ENDIF           reduce using rule 62 (expression -> STRING .)
    ENDFUNCTION     reduce using rule 62 (expression -> STRING .)
    SEMICOLON       reduce using rule 62 (expression -> STRING .)
    NEXT            reduce using rule 62 (expression -> STRING .)
    THEN            reduce using rule 62 (expression -> STRING .)
    DO              reduce using rule 62 (expression -> STRING .)
    RIGHT_PAREN     reduce using rule 62 (expression -> STRING .)
    TO              reduce using rule 62 (expression -> STRING .)
    COLON           reduce using rule 62 (expression -> STRING .)
    STEP            reduce using rule 62 (expression -> STRING .)


state 39

    (63) expression -> REAL .

    ASSIGN          reduce using rule 63 (expression -> REAL .)
    OR              reduce using rule 63 (expression -> REAL .)
    AND             reduce using rule 63 (expression -> REAL .)
    EQUAL           reduce using rule 63 (expression -> REAL .)
    NOT_EQUAL       reduce using rule 63 (expression -> REAL .)
    LESS            reduce using rule 63 (expression -> REAL .)
    GREATER         reduce using rule 63 (expression -> REAL .)
    LESS_EQUAL      reduce using rule 63 (expression -> REAL .)
    GREATER_EQUAL   reduce using rule 63 (expression -> REAL .)
    MOD             reduce using rule 63 (expression -> REAL .)
    DIV             reduce using rule 63 (expression -> REAL .)
    MUL             reduce using rule 63 (expression -> REAL .)
    N_DIV           reduce using rule 63 (expression -> REAL .)
    PLUS            reduce using rule 63 (expression -> REAL .)
    MINUS           reduce using rule 63 (expression -> REAL .)
    CONNECT         reduce using rule 63 (expression -> REAL .)
    DOT             reduce using rule 63 (expression -> REAL .)
    DELETE          reduce using rule 63 (expression -> REAL .)
    DECLARE         reduce using rule 63 (expression -> REAL .)
    CONSTANT        reduce using rule 63 (expression -> REAL .)
    INPUT           reduce using rule 63 (expression -> REAL .)
    OUTPUT          reduce using rule 63 (expression -> REAL .)
    IF              reduce using rule 63 (expression -> REAL .)
    CASE            reduce using rule 63 (expression -> REAL .)
    FOR             reduce using rule 63 (expression -> REAL .)
    REPEAT          reduce using rule 63 (expression -> REAL .)
    WHILE           reduce using rule 63 (expression -> REAL .)
    PROCEDURE       reduce using rule 63 (expression -> REAL .)
    CALL            reduce using rule 63 (expression -> REAL .)
    FUNCTION        reduce using rule 63 (expression -> REAL .)
    RETURN          reduce using rule 63 (expression -> REAL .)
    OPENFILE        reduce using rule 63 (expression -> REAL .)
    READFILE        reduce using rule 63 (expression -> REAL .)
    WRITEFILE       reduce using rule 63 (expression -> REAL .)
    CLOSEFILE       reduce using rule 63 (expression -> REAL .)
    SEEK            reduce using rule 63 (expression -> REAL .)
    TYPE            reduce using rule 63 (expression -> REAL .)
    PASS            reduce using rule 63 (expression -> REAL .)
    IMPORT          reduce using rule 63 (expression -> REAL .)
    CLASS           reduce using rule 63 (expression -> REAL .)
    LEFT_SQUARE     reduce using rule 63 (expression -> REAL .)
    ID              reduce using rule 63 (expression -> REAL .)
    NOT             reduce using rule 63 (expression -> REAL .)
    LEFT_PAREN      reduce using rule 63 (expression -> REAL .)
    DATE            reduce using rule 63 (expression -> REAL .)
    BOOLEAN         reduce using rule 63 (expression -> REAL .)
    CHAR            reduce using rule 63 (expression -> REAL .)
    STRING          reduce using rule 63 (expression -> REAL .)
    REAL            reduce using rule 63 (expression -> REAL .)
    INTEGER         reduce using rule 63 (expression -> REAL .)
    POINTER         reduce using rule 63 (expression -> REAL .)
    NEW             reduce using rule 63 (expression -> REAL .)
    $end            reduce using rule 63 (expression -> REAL .)
    RIGHT_SQUARE    reduce using rule 63 (expression -> REAL .)
    COMMA           reduce using rule 63 (expression -> REAL .)
    UNTIL           reduce using rule 63 (expression -> REAL .)
    ENDWHILE        reduce using rule 63 (expression -> REAL .)
    ENDPROCEDURE    reduce using rule 63 (expression -> REAL .)
    ENDTYPE         reduce using rule 63 (expression -> REAL .)
    ENDCLASS        reduce using rule 63 (expression -> REAL .)
    ELSE            reduce using rule 63 (expression -> REAL .)
    ENDIF           reduce using rule 63 (expression -> REAL .)
    ENDFUNCTION     reduce using rule 63 (expression -> REAL .)
    SEMICOLON       reduce using rule 63 (expression -> REAL .)
    NEXT            reduce using rule 63 (expression -> REAL .)
    THEN            reduce using rule 63 (expression -> REAL .)
    DO              reduce using rule 63 (expression -> REAL .)
    RIGHT_PAREN     reduce using rule 63 (expression -> REAL .)
    TO              reduce using rule 63 (expression -> REAL .)
    COLON           reduce using rule 63 (expression -> REAL .)
    STEP            reduce using rule 63 (expression -> REAL .)


state 40

    (64) expression -> INTEGER .

    ASSIGN          reduce using rule 64 (expression -> INTEGER .)
    OR              reduce using rule 64 (expression -> INTEGER .)
    AND             reduce using rule 64 (expression -> INTEGER .)
    EQUAL           reduce using rule 64 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 64 (expression -> INTEGER .)
    LESS            reduce using rule 64 (expression -> INTEGER .)
    GREATER         reduce using rule 64 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 64 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 64 (expression -> INTEGER .)
    MOD             reduce using rule 64 (expression -> INTEGER .)
    DIV             reduce using rule 64 (expression -> INTEGER .)
    MUL             reduce using rule 64 (expression -> INTEGER .)
    N_DIV           reduce using rule 64 (expression -> INTEGER .)
    PLUS            reduce using rule 64 (expression -> INTEGER .)
    MINUS           reduce using rule 64 (expression -> INTEGER .)
    CONNECT         reduce using rule 64 (expression -> INTEGER .)
    DOT             reduce using rule 64 (expression -> INTEGER .)
    DELETE          reduce using rule 64 (expression -> INTEGER .)
    DECLARE         reduce using rule 64 (expression -> INTEGER .)
    CONSTANT        reduce using rule 64 (expression -> INTEGER .)
    INPUT           reduce using rule 64 (expression -> INTEGER .)
    OUTPUT          reduce using rule 64 (expression -> INTEGER .)
    IF              reduce using rule 64 (expression -> INTEGER .)
    CASE            reduce using rule 64 (expression -> INTEGER .)
    FOR             reduce using rule 64 (expression -> INTEGER .)
    REPEAT          reduce using rule 64 (expression -> INTEGER .)
    WHILE           reduce using rule 64 (expression -> INTEGER .)
    PROCEDURE       reduce using rule 64 (expression -> INTEGER .)
    CALL            reduce using rule 64 (expression -> INTEGER .)
    FUNCTION        reduce using rule 64 (expression -> INTEGER .)
    RETURN          reduce using rule 64 (expression -> INTEGER .)
    OPENFILE        reduce using rule 64 (expression -> INTEGER .)
    READFILE        reduce using rule 64 (expression -> INTEGER .)
    WRITEFILE       reduce using rule 64 (expression -> INTEGER .)
    CLOSEFILE       reduce using rule 64 (expression -> INTEGER .)
    SEEK            reduce using rule 64 (expression -> INTEGER .)
    TYPE            reduce using rule 64 (expression -> INTEGER .)
    PASS            reduce using rule 64 (expression -> INTEGER .)
    IMPORT          reduce using rule 64 (expression -> INTEGER .)
    CLASS           reduce using rule 64 (expression -> INTEGER .)
    LEFT_SQUARE     reduce using rule 64 (expression -> INTEGER .)
    ID              reduce using rule 64 (expression -> INTEGER .)
    NOT             reduce using rule 64 (expression -> INTEGER .)
    LEFT_PAREN      reduce using rule 64 (expression -> INTEGER .)
    DATE            reduce using rule 64 (expression -> INTEGER .)
    BOOLEAN         reduce using rule 64 (expression -> INTEGER .)
    CHAR            reduce using rule 64 (expression -> INTEGER .)
    STRING          reduce using rule 64 (expression -> INTEGER .)
    REAL            reduce using rule 64 (expression -> INTEGER .)
    INTEGER         reduce using rule 64 (expression -> INTEGER .)
    POINTER         reduce using rule 64 (expression -> INTEGER .)
    NEW             reduce using rule 64 (expression -> INTEGER .)
    $end            reduce using rule 64 (expression -> INTEGER .)
    RIGHT_SQUARE    reduce using rule 64 (expression -> INTEGER .)
    COMMA           reduce using rule 64 (expression -> INTEGER .)
    UNTIL           reduce using rule 64 (expression -> INTEGER .)
    ENDWHILE        reduce using rule 64 (expression -> INTEGER .)
    ENDPROCEDURE    reduce using rule 64 (expression -> INTEGER .)
    ENDTYPE         reduce using rule 64 (expression -> INTEGER .)
    ENDCLASS        reduce using rule 64 (expression -> INTEGER .)
    ELSE            reduce using rule 64 (expression -> INTEGER .)
    ENDIF           reduce using rule 64 (expression -> INTEGER .)
    ENDFUNCTION     reduce using rule 64 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 64 (expression -> INTEGER .)
    NEXT            reduce using rule 64 (expression -> INTEGER .)
    THEN            reduce using rule 64 (expression -> INTEGER .)
    DO              reduce using rule 64 (expression -> INTEGER .)
    RIGHT_PAREN     reduce using rule 64 (expression -> INTEGER .)
    TO              reduce using rule 64 (expression -> INTEGER .)
    COLON           reduce using rule 64 (expression -> INTEGER .)
    STEP            reduce using rule 64 (expression -> INTEGER .)


state 41

    (1) statements -> statements statement .

    DELETE          reduce using rule 1 (statements -> statements statement .)
    DECLARE         reduce using rule 1 (statements -> statements statement .)
    CONSTANT        reduce using rule 1 (statements -> statements statement .)
    INPUT           reduce using rule 1 (statements -> statements statement .)
    OUTPUT          reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CASE            reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    REPEAT          reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    PROCEDURE       reduce using rule 1 (statements -> statements statement .)
    CALL            reduce using rule 1 (statements -> statements statement .)
    FUNCTION        reduce using rule 1 (statements -> statements statement .)
    RETURN          reduce using rule 1 (statements -> statements statement .)
    OPENFILE        reduce using rule 1 (statements -> statements statement .)
    READFILE        reduce using rule 1 (statements -> statements statement .)
    WRITEFILE       reduce using rule 1 (statements -> statements statement .)
    CLOSEFILE       reduce using rule 1 (statements -> statements statement .)
    SEEK            reduce using rule 1 (statements -> statements statement .)
    TYPE            reduce using rule 1 (statements -> statements statement .)
    PASS            reduce using rule 1 (statements -> statements statement .)
    IMPORT          reduce using rule 1 (statements -> statements statement .)
    CLASS           reduce using rule 1 (statements -> statements statement .)
    LEFT_SQUARE     reduce using rule 1 (statements -> statements statement .)
    ID              reduce using rule 1 (statements -> statements statement .)
    NOT             reduce using rule 1 (statements -> statements statement .)
    MINUS           reduce using rule 1 (statements -> statements statement .)
    PLUS            reduce using rule 1 (statements -> statements statement .)
    LEFT_PAREN      reduce using rule 1 (statements -> statements statement .)
    DATE            reduce using rule 1 (statements -> statements statement .)
    BOOLEAN         reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    STRING          reduce using rule 1 (statements -> statements statement .)
    REAL            reduce using rule 1 (statements -> statements statement .)
    INTEGER         reduce using rule 1 (statements -> statements statement .)
    POINTER         reduce using rule 1 (statements -> statements statement .)
    NEW             reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    UNTIL           reduce using rule 1 (statements -> statements statement .)
    ENDWHILE        reduce using rule 1 (statements -> statements statement .)
    ENDPROCEDURE    reduce using rule 1 (statements -> statements statement .)
    ENDTYPE         reduce using rule 1 (statements -> statements statement .)
    ENDCLASS        reduce using rule 1 (statements -> statements statement .)
    ELSE            reduce using rule 1 (statements -> statements statement .)
    ENDIF           reduce using rule 1 (statements -> statements statement .)
    ENDFUNCTION     reduce using rule 1 (statements -> statements statement .)
    SEMICOLON       reduce using rule 1 (statements -> statements statement .)
    NEXT            reduce using rule 1 (statements -> statements statement .)


state 42

    (3) statement -> DELETE ID .

    DELETE          reduce using rule 3 (statement -> DELETE ID .)
    DECLARE         reduce using rule 3 (statement -> DELETE ID .)
    CONSTANT        reduce using rule 3 (statement -> DELETE ID .)
    INPUT           reduce using rule 3 (statement -> DELETE ID .)
    OUTPUT          reduce using rule 3 (statement -> DELETE ID .)
    IF              reduce using rule 3 (statement -> DELETE ID .)
    CASE            reduce using rule 3 (statement -> DELETE ID .)
    FOR             reduce using rule 3 (statement -> DELETE ID .)
    REPEAT          reduce using rule 3 (statement -> DELETE ID .)
    WHILE           reduce using rule 3 (statement -> DELETE ID .)
    PROCEDURE       reduce using rule 3 (statement -> DELETE ID .)
    CALL            reduce using rule 3 (statement -> DELETE ID .)
    FUNCTION        reduce using rule 3 (statement -> DELETE ID .)
    RETURN          reduce using rule 3 (statement -> DELETE ID .)
    OPENFILE        reduce using rule 3 (statement -> DELETE ID .)
    READFILE        reduce using rule 3 (statement -> DELETE ID .)
    WRITEFILE       reduce using rule 3 (statement -> DELETE ID .)
    CLOSEFILE       reduce using rule 3 (statement -> DELETE ID .)
    SEEK            reduce using rule 3 (statement -> DELETE ID .)
    TYPE            reduce using rule 3 (statement -> DELETE ID .)
    PASS            reduce using rule 3 (statement -> DELETE ID .)
    IMPORT          reduce using rule 3 (statement -> DELETE ID .)
    CLASS           reduce using rule 3 (statement -> DELETE ID .)
    LEFT_SQUARE     reduce using rule 3 (statement -> DELETE ID .)
    ID              reduce using rule 3 (statement -> DELETE ID .)
    NOT             reduce using rule 3 (statement -> DELETE ID .)
    MINUS           reduce using rule 3 (statement -> DELETE ID .)
    PLUS            reduce using rule 3 (statement -> DELETE ID .)
    LEFT_PAREN      reduce using rule 3 (statement -> DELETE ID .)
    DATE            reduce using rule 3 (statement -> DELETE ID .)
    BOOLEAN         reduce using rule 3 (statement -> DELETE ID .)
    CHAR            reduce using rule 3 (statement -> DELETE ID .)
    STRING          reduce using rule 3 (statement -> DELETE ID .)
    REAL            reduce using rule 3 (statement -> DELETE ID .)
    INTEGER         reduce using rule 3 (statement -> DELETE ID .)
    POINTER         reduce using rule 3 (statement -> DELETE ID .)
    NEW             reduce using rule 3 (statement -> DELETE ID .)
    $end            reduce using rule 3 (statement -> DELETE ID .)
    UNTIL           reduce using rule 3 (statement -> DELETE ID .)
    ENDWHILE        reduce using rule 3 (statement -> DELETE ID .)
    ENDPROCEDURE    reduce using rule 3 (statement -> DELETE ID .)
    ENDTYPE         reduce using rule 3 (statement -> DELETE ID .)
    ENDCLASS        reduce using rule 3 (statement -> DELETE ID .)
    ELSE            reduce using rule 3 (statement -> DELETE ID .)
    ENDIF           reduce using rule 3 (statement -> DELETE ID .)
    ENDFUNCTION     reduce using rule 3 (statement -> DELETE ID .)
    SEMICOLON       reduce using rule 3 (statement -> DELETE ID .)
    NEXT            reduce using rule 3 (statement -> DELETE ID .)


state 43

    (39) expression -> ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (10) indexes -> . indexes COMMA expression
    (11) indexes -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    indexes                        shift and go to state 94
    expression                     shift and go to state 95

state 44

    (90) expression -> ID LEFT_PAREN . parameters RIGHT_PAREN
    (91) expression -> ID LEFT_PAREN . RIGHT_PAREN
    (76) parameters -> . parameters COMMA expression
    (77) parameters -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    RIGHT_PAREN     shift and go to state 97
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    parameters                     shift and go to state 96
    expression                     shift and go to state 98

state 45

    (4) statement -> DECLARE ID . COLON ID
    (6) statement -> DECLARE ID . COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    COLON           shift and go to state 99


state 46

    (5) statement -> CONSTANT ID . EQUAL expression

    EQUAL           shift and go to state 100


state 47

    (111) statement -> expression ASSIGN . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 101

state 48

    (40) expression -> expression OR . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 102

state 49

    (41) expression -> expression AND . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 103

state 50

    (43) expression -> expression EQUAL . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 104

state 51

    (44) expression -> expression NOT_EQUAL . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 105

state 52

    (45) expression -> expression LESS . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 106

state 53

    (46) expression -> expression GREATER . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 107

state 54

    (47) expression -> expression LESS_EQUAL . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 108

state 55

    (48) expression -> expression GREATER_EQUAL . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 109

state 56

    (49) expression -> expression MOD . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 110

state 57

    (50) expression -> expression DIV . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 111

state 58

    (51) expression -> expression MUL . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 112

state 59

    (52) expression -> expression N_DIV . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 113

state 60

    (55) expression -> expression PLUS . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 114

state 61

    (56) expression -> expression MINUS . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 115

state 62

    (57) expression -> expression CONNECT . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 116

state 63

    (103) expression -> expression DOT . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 117

state 64

    (12) expression -> LEFT_SQUARE array_items . RIGHT_SQUARE
    (14) array_items -> array_items . COMMA expression

    RIGHT_SQUARE    shift and go to state 118
    COMMA           shift and go to state 119


state 65

    (13) expression -> LEFT_SQUARE RIGHT_SQUARE .

    ASSIGN          reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    OR              reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    AND             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    EQUAL           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LESS            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    GREATER         reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    MOD             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DIV             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    MUL             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    N_DIV           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PLUS            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    MINUS           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CONNECT         reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DOT             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DELETE          reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DECLARE         reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CONSTANT        reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    INPUT           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    OUTPUT          reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    IF              reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CASE            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    FOR             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    REPEAT          reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    WHILE           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CALL            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    FUNCTION        reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    RETURN          reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    OPENFILE        reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    READFILE        reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    SEEK            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    TYPE            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    PASS            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    IMPORT          reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CLASS           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ID              reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NOT             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DATE            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    CHAR            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    STRING          reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    REAL            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    INTEGER         reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    POINTER         reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NEW             reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    $end            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    COMMA           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    UNTIL           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ELSE            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDIF           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    NEXT            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    THEN            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    DO              reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    TO              reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    COLON           reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)
    STEP            reduce using rule 13 (expression -> LEFT_SQUARE RIGHT_SQUARE .)


state 66

    (15) array_items -> expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 15 (array_items -> expression .)
    COMMA           reduce using rule 15 (array_items -> expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 67

    (16) statement -> INPUT ID .
    (17) statement -> INPUT ID . LEFT_SQUARE indexes RIGHT_SQUARE

  ! shift/reduce conflict for LEFT_SQUARE resolved as shift
    DELETE          reduce using rule 16 (statement -> INPUT ID .)
    DECLARE         reduce using rule 16 (statement -> INPUT ID .)
    CONSTANT        reduce using rule 16 (statement -> INPUT ID .)
    INPUT           reduce using rule 16 (statement -> INPUT ID .)
    OUTPUT          reduce using rule 16 (statement -> INPUT ID .)
    IF              reduce using rule 16 (statement -> INPUT ID .)
    CASE            reduce using rule 16 (statement -> INPUT ID .)
    FOR             reduce using rule 16 (statement -> INPUT ID .)
    REPEAT          reduce using rule 16 (statement -> INPUT ID .)
    WHILE           reduce using rule 16 (statement -> INPUT ID .)
    PROCEDURE       reduce using rule 16 (statement -> INPUT ID .)
    CALL            reduce using rule 16 (statement -> INPUT ID .)
    FUNCTION        reduce using rule 16 (statement -> INPUT ID .)
    RETURN          reduce using rule 16 (statement -> INPUT ID .)
    OPENFILE        reduce using rule 16 (statement -> INPUT ID .)
    READFILE        reduce using rule 16 (statement -> INPUT ID .)
    WRITEFILE       reduce using rule 16 (statement -> INPUT ID .)
    CLOSEFILE       reduce using rule 16 (statement -> INPUT ID .)
    SEEK            reduce using rule 16 (statement -> INPUT ID .)
    TYPE            reduce using rule 16 (statement -> INPUT ID .)
    PASS            reduce using rule 16 (statement -> INPUT ID .)
    IMPORT          reduce using rule 16 (statement -> INPUT ID .)
    CLASS           reduce using rule 16 (statement -> INPUT ID .)
    ID              reduce using rule 16 (statement -> INPUT ID .)
    NOT             reduce using rule 16 (statement -> INPUT ID .)
    MINUS           reduce using rule 16 (statement -> INPUT ID .)
    PLUS            reduce using rule 16 (statement -> INPUT ID .)
    LEFT_PAREN      reduce using rule 16 (statement -> INPUT ID .)
    DATE            reduce using rule 16 (statement -> INPUT ID .)
    BOOLEAN         reduce using rule 16 (statement -> INPUT ID .)
    CHAR            reduce using rule 16 (statement -> INPUT ID .)
    STRING          reduce using rule 16 (statement -> INPUT ID .)
    REAL            reduce using rule 16 (statement -> INPUT ID .)
    INTEGER         reduce using rule 16 (statement -> INPUT ID .)
    POINTER         reduce using rule 16 (statement -> INPUT ID .)
    NEW             reduce using rule 16 (statement -> INPUT ID .)
    $end            reduce using rule 16 (statement -> INPUT ID .)
    UNTIL           reduce using rule 16 (statement -> INPUT ID .)
    ENDWHILE        reduce using rule 16 (statement -> INPUT ID .)
    ENDPROCEDURE    reduce using rule 16 (statement -> INPUT ID .)
    ENDTYPE         reduce using rule 16 (statement -> INPUT ID .)
    ENDCLASS        reduce using rule 16 (statement -> INPUT ID .)
    ELSE            reduce using rule 16 (statement -> INPUT ID .)
    ENDIF           reduce using rule 16 (statement -> INPUT ID .)
    ENDFUNCTION     reduce using rule 16 (statement -> INPUT ID .)
    SEMICOLON       reduce using rule 16 (statement -> INPUT ID .)
    NEXT            reduce using rule 16 (statement -> INPUT ID .)
    LEFT_SQUARE     shift and go to state 120

  ! LEFT_SQUARE     [ reduce using rule 16 (statement -> INPUT ID .) ]


state 68

    (18) statement -> OUTPUT output_expression .
    (19) output_expression -> output_expression . COMMA expression

    DELETE          reduce using rule 18 (statement -> OUTPUT output_expression .)
    DECLARE         reduce using rule 18 (statement -> OUTPUT output_expression .)
    CONSTANT        reduce using rule 18 (statement -> OUTPUT output_expression .)
    INPUT           reduce using rule 18 (statement -> OUTPUT output_expression .)
    OUTPUT          reduce using rule 18 (statement -> OUTPUT output_expression .)
    IF              reduce using rule 18 (statement -> OUTPUT output_expression .)
    CASE            reduce using rule 18 (statement -> OUTPUT output_expression .)
    FOR             reduce using rule 18 (statement -> OUTPUT output_expression .)
    REPEAT          reduce using rule 18 (statement -> OUTPUT output_expression .)
    WHILE           reduce using rule 18 (statement -> OUTPUT output_expression .)
    PROCEDURE       reduce using rule 18 (statement -> OUTPUT output_expression .)
    CALL            reduce using rule 18 (statement -> OUTPUT output_expression .)
    FUNCTION        reduce using rule 18 (statement -> OUTPUT output_expression .)
    RETURN          reduce using rule 18 (statement -> OUTPUT output_expression .)
    OPENFILE        reduce using rule 18 (statement -> OUTPUT output_expression .)
    READFILE        reduce using rule 18 (statement -> OUTPUT output_expression .)
    WRITEFILE       reduce using rule 18 (statement -> OUTPUT output_expression .)
    CLOSEFILE       reduce using rule 18 (statement -> OUTPUT output_expression .)
    SEEK            reduce using rule 18 (statement -> OUTPUT output_expression .)
    TYPE            reduce using rule 18 (statement -> OUTPUT output_expression .)
    PASS            reduce using rule 18 (statement -> OUTPUT output_expression .)
    IMPORT          reduce using rule 18 (statement -> OUTPUT output_expression .)
    CLASS           reduce using rule 18 (statement -> OUTPUT output_expression .)
    LEFT_SQUARE     reduce using rule 18 (statement -> OUTPUT output_expression .)
    ID              reduce using rule 18 (statement -> OUTPUT output_expression .)
    NOT             reduce using rule 18 (statement -> OUTPUT output_expression .)
    MINUS           reduce using rule 18 (statement -> OUTPUT output_expression .)
    PLUS            reduce using rule 18 (statement -> OUTPUT output_expression .)
    LEFT_PAREN      reduce using rule 18 (statement -> OUTPUT output_expression .)
    DATE            reduce using rule 18 (statement -> OUTPUT output_expression .)
    BOOLEAN         reduce using rule 18 (statement -> OUTPUT output_expression .)
    CHAR            reduce using rule 18 (statement -> OUTPUT output_expression .)
    STRING          reduce using rule 18 (statement -> OUTPUT output_expression .)
    REAL            reduce using rule 18 (statement -> OUTPUT output_expression .)
    INTEGER         reduce using rule 18 (statement -> OUTPUT output_expression .)
    POINTER         reduce using rule 18 (statement -> OUTPUT output_expression .)
    NEW             reduce using rule 18 (statement -> OUTPUT output_expression .)
    $end            reduce using rule 18 (statement -> OUTPUT output_expression .)
    UNTIL           reduce using rule 18 (statement -> OUTPUT output_expression .)
    ENDWHILE        reduce using rule 18 (statement -> OUTPUT output_expression .)
    ENDPROCEDURE    reduce using rule 18 (statement -> OUTPUT output_expression .)
    ENDTYPE         reduce using rule 18 (statement -> OUTPUT output_expression .)
    ENDCLASS        reduce using rule 18 (statement -> OUTPUT output_expression .)
    ELSE            reduce using rule 18 (statement -> OUTPUT output_expression .)
    ENDIF           reduce using rule 18 (statement -> OUTPUT output_expression .)
    ENDFUNCTION     reduce using rule 18 (statement -> OUTPUT output_expression .)
    SEMICOLON       reduce using rule 18 (statement -> OUTPUT output_expression .)
    NEXT            reduce using rule 18 (statement -> OUTPUT output_expression .)
    COMMA           shift and go to state 121


state 69

    (20) output_expression -> expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 20 (output_expression -> expression .)
    DELETE          reduce using rule 20 (output_expression -> expression .)
    DECLARE         reduce using rule 20 (output_expression -> expression .)
    CONSTANT        reduce using rule 20 (output_expression -> expression .)
    INPUT           reduce using rule 20 (output_expression -> expression .)
    OUTPUT          reduce using rule 20 (output_expression -> expression .)
    IF              reduce using rule 20 (output_expression -> expression .)
    CASE            reduce using rule 20 (output_expression -> expression .)
    FOR             reduce using rule 20 (output_expression -> expression .)
    REPEAT          reduce using rule 20 (output_expression -> expression .)
    WHILE           reduce using rule 20 (output_expression -> expression .)
    PROCEDURE       reduce using rule 20 (output_expression -> expression .)
    CALL            reduce using rule 20 (output_expression -> expression .)
    FUNCTION        reduce using rule 20 (output_expression -> expression .)
    RETURN          reduce using rule 20 (output_expression -> expression .)
    OPENFILE        reduce using rule 20 (output_expression -> expression .)
    READFILE        reduce using rule 20 (output_expression -> expression .)
    WRITEFILE       reduce using rule 20 (output_expression -> expression .)
    CLOSEFILE       reduce using rule 20 (output_expression -> expression .)
    SEEK            reduce using rule 20 (output_expression -> expression .)
    TYPE            reduce using rule 20 (output_expression -> expression .)
    PASS            reduce using rule 20 (output_expression -> expression .)
    IMPORT          reduce using rule 20 (output_expression -> expression .)
    CLASS           reduce using rule 20 (output_expression -> expression .)
    LEFT_SQUARE     reduce using rule 20 (output_expression -> expression .)
    ID              reduce using rule 20 (output_expression -> expression .)
    NOT             reduce using rule 20 (output_expression -> expression .)
    LEFT_PAREN      reduce using rule 20 (output_expression -> expression .)
    DATE            reduce using rule 20 (output_expression -> expression .)
    BOOLEAN         reduce using rule 20 (output_expression -> expression .)
    CHAR            reduce using rule 20 (output_expression -> expression .)
    STRING          reduce using rule 20 (output_expression -> expression .)
    REAL            reduce using rule 20 (output_expression -> expression .)
    INTEGER         reduce using rule 20 (output_expression -> expression .)
    POINTER         reduce using rule 20 (output_expression -> expression .)
    NEW             reduce using rule 20 (output_expression -> expression .)
    $end            reduce using rule 20 (output_expression -> expression .)
    UNTIL           reduce using rule 20 (output_expression -> expression .)
    ENDWHILE        reduce using rule 20 (output_expression -> expression .)
    ENDPROCEDURE    reduce using rule 20 (output_expression -> expression .)
    ENDTYPE         reduce using rule 20 (output_expression -> expression .)
    ENDCLASS        reduce using rule 20 (output_expression -> expression .)
    ELSE            reduce using rule 20 (output_expression -> expression .)
    ENDIF           reduce using rule 20 (output_expression -> expression .)
    ENDFUNCTION     reduce using rule 20 (output_expression -> expression .)
    SEMICOLON       reduce using rule 20 (output_expression -> expression .)
    NEXT            reduce using rule 20 (output_expression -> expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 20 (output_expression -> expression .) ]
  ! PLUS            [ reduce using rule 20 (output_expression -> expression .) ]


state 70

    (21) statement -> IF expression . THEN statements ELSE statements ENDIF
    (22) statement -> IF expression . THEN statements ENDIF
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    THEN            shift and go to state 122
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 71

    (23) statement -> CASE OF . ID cases ENDCASE
    (24) statement -> CASE OF . ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE

    ID              shift and go to state 123


state 72

    (32) statement -> FOR ID . ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> FOR ID . ASSIGN expression TO expression statements NEXT ID

    ASSIGN          shift and go to state 124


state 73

    (34) statement -> REPEAT statements . UNTIL expression
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    UNTIL           shift and go to state 125
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 41

state 74

    (35) statement -> WHILE expression . DO statements ENDWHILE
    (36) statement -> WHILE expression . statements ENDWHILE
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DO              shift and go to state 126
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statements                     shift and go to state 127
    statement                      shift and go to state 2

state 75

    (78) statement -> PROCEDURE ID . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> PROCEDURE ID . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_PAREN      shift and go to state 130
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 131
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 76

    (79) statement -> PROCEDURE NEW . LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (81) statement -> PROCEDURE NEW . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_PAREN      shift and go to state 132
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 133
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 77

    (58) expression -> LEFT_PAREN expression . RIGHT_PAREN
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_PAREN     shift and go to state 134
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 78

    (113) expression -> NEW ID .
    (114) expression -> NEW ID . LEFT_PAREN parameters RIGHT_PAREN

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    ASSIGN          reduce using rule 113 (expression -> NEW ID .)
    OR              reduce using rule 113 (expression -> NEW ID .)
    AND             reduce using rule 113 (expression -> NEW ID .)
    EQUAL           reduce using rule 113 (expression -> NEW ID .)
    NOT_EQUAL       reduce using rule 113 (expression -> NEW ID .)
    LESS            reduce using rule 113 (expression -> NEW ID .)
    GREATER         reduce using rule 113 (expression -> NEW ID .)
    LESS_EQUAL      reduce using rule 113 (expression -> NEW ID .)
    GREATER_EQUAL   reduce using rule 113 (expression -> NEW ID .)
    MOD             reduce using rule 113 (expression -> NEW ID .)
    DIV             reduce using rule 113 (expression -> NEW ID .)
    MUL             reduce using rule 113 (expression -> NEW ID .)
    N_DIV           reduce using rule 113 (expression -> NEW ID .)
    PLUS            reduce using rule 113 (expression -> NEW ID .)
    MINUS           reduce using rule 113 (expression -> NEW ID .)
    CONNECT         reduce using rule 113 (expression -> NEW ID .)
    DOT             reduce using rule 113 (expression -> NEW ID .)
    DELETE          reduce using rule 113 (expression -> NEW ID .)
    DECLARE         reduce using rule 113 (expression -> NEW ID .)
    CONSTANT        reduce using rule 113 (expression -> NEW ID .)
    INPUT           reduce using rule 113 (expression -> NEW ID .)
    OUTPUT          reduce using rule 113 (expression -> NEW ID .)
    IF              reduce using rule 113 (expression -> NEW ID .)
    CASE            reduce using rule 113 (expression -> NEW ID .)
    FOR             reduce using rule 113 (expression -> NEW ID .)
    REPEAT          reduce using rule 113 (expression -> NEW ID .)
    WHILE           reduce using rule 113 (expression -> NEW ID .)
    PROCEDURE       reduce using rule 113 (expression -> NEW ID .)
    CALL            reduce using rule 113 (expression -> NEW ID .)
    FUNCTION        reduce using rule 113 (expression -> NEW ID .)
    RETURN          reduce using rule 113 (expression -> NEW ID .)
    OPENFILE        reduce using rule 113 (expression -> NEW ID .)
    READFILE        reduce using rule 113 (expression -> NEW ID .)
    WRITEFILE       reduce using rule 113 (expression -> NEW ID .)
    CLOSEFILE       reduce using rule 113 (expression -> NEW ID .)
    SEEK            reduce using rule 113 (expression -> NEW ID .)
    TYPE            reduce using rule 113 (expression -> NEW ID .)
    PASS            reduce using rule 113 (expression -> NEW ID .)
    IMPORT          reduce using rule 113 (expression -> NEW ID .)
    CLASS           reduce using rule 113 (expression -> NEW ID .)
    LEFT_SQUARE     reduce using rule 113 (expression -> NEW ID .)
    ID              reduce using rule 113 (expression -> NEW ID .)
    NOT             reduce using rule 113 (expression -> NEW ID .)
    DATE            reduce using rule 113 (expression -> NEW ID .)
    BOOLEAN         reduce using rule 113 (expression -> NEW ID .)
    CHAR            reduce using rule 113 (expression -> NEW ID .)
    STRING          reduce using rule 113 (expression -> NEW ID .)
    REAL            reduce using rule 113 (expression -> NEW ID .)
    INTEGER         reduce using rule 113 (expression -> NEW ID .)
    POINTER         reduce using rule 113 (expression -> NEW ID .)
    NEW             reduce using rule 113 (expression -> NEW ID .)
    $end            reduce using rule 113 (expression -> NEW ID .)
    RIGHT_SQUARE    reduce using rule 113 (expression -> NEW ID .)
    COMMA           reduce using rule 113 (expression -> NEW ID .)
    UNTIL           reduce using rule 113 (expression -> NEW ID .)
    ENDWHILE        reduce using rule 113 (expression -> NEW ID .)
    ENDPROCEDURE    reduce using rule 113 (expression -> NEW ID .)
    ENDTYPE         reduce using rule 113 (expression -> NEW ID .)
    ENDCLASS        reduce using rule 113 (expression -> NEW ID .)
    ELSE            reduce using rule 113 (expression -> NEW ID .)
    ENDIF           reduce using rule 113 (expression -> NEW ID .)
    ENDFUNCTION     reduce using rule 113 (expression -> NEW ID .)
    SEMICOLON       reduce using rule 113 (expression -> NEW ID .)
    NEXT            reduce using rule 113 (expression -> NEW ID .)
    THEN            reduce using rule 113 (expression -> NEW ID .)
    DO              reduce using rule 113 (expression -> NEW ID .)
    RIGHT_PAREN     reduce using rule 113 (expression -> NEW ID .)
    TO              reduce using rule 113 (expression -> NEW ID .)
    COLON           reduce using rule 113 (expression -> NEW ID .)
    STEP            reduce using rule 113 (expression -> NEW ID .)
    LEFT_PAREN      shift and go to state 135

  ! LEFT_PAREN      [ reduce using rule 113 (expression -> NEW ID .) ]


state 79

    (82) statement -> CALL ID . LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> CALL ID .

  ! shift/reduce conflict for LEFT_PAREN resolved as shift
    LEFT_PAREN      shift and go to state 136
    DELETE          reduce using rule 83 (statement -> CALL ID .)
    DECLARE         reduce using rule 83 (statement -> CALL ID .)
    CONSTANT        reduce using rule 83 (statement -> CALL ID .)
    INPUT           reduce using rule 83 (statement -> CALL ID .)
    OUTPUT          reduce using rule 83 (statement -> CALL ID .)
    IF              reduce using rule 83 (statement -> CALL ID .)
    CASE            reduce using rule 83 (statement -> CALL ID .)
    FOR             reduce using rule 83 (statement -> CALL ID .)
    REPEAT          reduce using rule 83 (statement -> CALL ID .)
    WHILE           reduce using rule 83 (statement -> CALL ID .)
    PROCEDURE       reduce using rule 83 (statement -> CALL ID .)
    CALL            reduce using rule 83 (statement -> CALL ID .)
    FUNCTION        reduce using rule 83 (statement -> CALL ID .)
    RETURN          reduce using rule 83 (statement -> CALL ID .)
    OPENFILE        reduce using rule 83 (statement -> CALL ID .)
    READFILE        reduce using rule 83 (statement -> CALL ID .)
    WRITEFILE       reduce using rule 83 (statement -> CALL ID .)
    CLOSEFILE       reduce using rule 83 (statement -> CALL ID .)
    SEEK            reduce using rule 83 (statement -> CALL ID .)
    TYPE            reduce using rule 83 (statement -> CALL ID .)
    PASS            reduce using rule 83 (statement -> CALL ID .)
    IMPORT          reduce using rule 83 (statement -> CALL ID .)
    CLASS           reduce using rule 83 (statement -> CALL ID .)
    LEFT_SQUARE     reduce using rule 83 (statement -> CALL ID .)
    ID              reduce using rule 83 (statement -> CALL ID .)
    NOT             reduce using rule 83 (statement -> CALL ID .)
    MINUS           reduce using rule 83 (statement -> CALL ID .)
    PLUS            reduce using rule 83 (statement -> CALL ID .)
    DATE            reduce using rule 83 (statement -> CALL ID .)
    BOOLEAN         reduce using rule 83 (statement -> CALL ID .)
    CHAR            reduce using rule 83 (statement -> CALL ID .)
    STRING          reduce using rule 83 (statement -> CALL ID .)
    REAL            reduce using rule 83 (statement -> CALL ID .)
    INTEGER         reduce using rule 83 (statement -> CALL ID .)
    POINTER         reduce using rule 83 (statement -> CALL ID .)
    NEW             reduce using rule 83 (statement -> CALL ID .)
    $end            reduce using rule 83 (statement -> CALL ID .)
    UNTIL           reduce using rule 83 (statement -> CALL ID .)
    ENDWHILE        reduce using rule 83 (statement -> CALL ID .)
    ENDPROCEDURE    reduce using rule 83 (statement -> CALL ID .)
    ENDTYPE         reduce using rule 83 (statement -> CALL ID .)
    ENDCLASS        reduce using rule 83 (statement -> CALL ID .)
    ELSE            reduce using rule 83 (statement -> CALL ID .)
    ENDIF           reduce using rule 83 (statement -> CALL ID .)
    ENDFUNCTION     reduce using rule 83 (statement -> CALL ID .)
    SEMICOLON       reduce using rule 83 (statement -> CALL ID .)
    NEXT            reduce using rule 83 (statement -> CALL ID .)

  ! LEFT_PAREN      [ reduce using rule 83 (statement -> CALL ID .) ]


state 80

    (84) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> FUNCTION ID . RETURNS ID statements ENDFUNCTION
    (87) statement -> FUNCTION ID . RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> FUNCTION ID . LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> FUNCTION ID . RETURNS ARRAY OF ID statements ENDFUNCTION

    LEFT_PAREN      shift and go to state 137
    RETURNS         shift and go to state 138


state 81

    (92) statement -> RETURN expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 92 (statement -> RETURN expression .)
    DECLARE         reduce using rule 92 (statement -> RETURN expression .)
    CONSTANT        reduce using rule 92 (statement -> RETURN expression .)
    INPUT           reduce using rule 92 (statement -> RETURN expression .)
    OUTPUT          reduce using rule 92 (statement -> RETURN expression .)
    IF              reduce using rule 92 (statement -> RETURN expression .)
    CASE            reduce using rule 92 (statement -> RETURN expression .)
    FOR             reduce using rule 92 (statement -> RETURN expression .)
    REPEAT          reduce using rule 92 (statement -> RETURN expression .)
    WHILE           reduce using rule 92 (statement -> RETURN expression .)
    PROCEDURE       reduce using rule 92 (statement -> RETURN expression .)
    CALL            reduce using rule 92 (statement -> RETURN expression .)
    FUNCTION        reduce using rule 92 (statement -> RETURN expression .)
    RETURN          reduce using rule 92 (statement -> RETURN expression .)
    OPENFILE        reduce using rule 92 (statement -> RETURN expression .)
    READFILE        reduce using rule 92 (statement -> RETURN expression .)
    WRITEFILE       reduce using rule 92 (statement -> RETURN expression .)
    CLOSEFILE       reduce using rule 92 (statement -> RETURN expression .)
    SEEK            reduce using rule 92 (statement -> RETURN expression .)
    TYPE            reduce using rule 92 (statement -> RETURN expression .)
    PASS            reduce using rule 92 (statement -> RETURN expression .)
    IMPORT          reduce using rule 92 (statement -> RETURN expression .)
    CLASS           reduce using rule 92 (statement -> RETURN expression .)
    LEFT_SQUARE     reduce using rule 92 (statement -> RETURN expression .)
    ID              reduce using rule 92 (statement -> RETURN expression .)
    NOT             reduce using rule 92 (statement -> RETURN expression .)
    LEFT_PAREN      reduce using rule 92 (statement -> RETURN expression .)
    DATE            reduce using rule 92 (statement -> RETURN expression .)
    BOOLEAN         reduce using rule 92 (statement -> RETURN expression .)
    CHAR            reduce using rule 92 (statement -> RETURN expression .)
    STRING          reduce using rule 92 (statement -> RETURN expression .)
    REAL            reduce using rule 92 (statement -> RETURN expression .)
    INTEGER         reduce using rule 92 (statement -> RETURN expression .)
    POINTER         reduce using rule 92 (statement -> RETURN expression .)
    NEW             reduce using rule 92 (statement -> RETURN expression .)
    $end            reduce using rule 92 (statement -> RETURN expression .)
    UNTIL           reduce using rule 92 (statement -> RETURN expression .)
    ENDWHILE        reduce using rule 92 (statement -> RETURN expression .)
    ENDPROCEDURE    reduce using rule 92 (statement -> RETURN expression .)
    ENDTYPE         reduce using rule 92 (statement -> RETURN expression .)
    ENDCLASS        reduce using rule 92 (statement -> RETURN expression .)
    ELSE            reduce using rule 92 (statement -> RETURN expression .)
    ENDIF           reduce using rule 92 (statement -> RETURN expression .)
    ENDFUNCTION     reduce using rule 92 (statement -> RETURN expression .)
    SEMICOLON       reduce using rule 92 (statement -> RETURN expression .)
    NEXT            reduce using rule 92 (statement -> RETURN expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 92 (statement -> RETURN expression .) ]
  ! PLUS            [ reduce using rule 92 (statement -> RETURN expression .) ]


state 82

    (93) statement -> OPENFILE expression . FOR READ
    (94) statement -> OPENFILE expression . FOR WRITE
    (95) statement -> OPENFILE expression . FOR APPEND
    (96) statement -> OPENFILE expression . FOR RANDOM
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    FOR             shift and go to state 139
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 83

    (97) statement -> READFILE expression . COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> READFILE expression . COMMA ID
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    COMMA           shift and go to state 140
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 84

    (99) statement -> WRITEFILE expression . COMMA expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    COMMA           shift and go to state 141
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 85

    (100) statement -> CLOSEFILE expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 100 (statement -> CLOSEFILE expression .)
    DECLARE         reduce using rule 100 (statement -> CLOSEFILE expression .)
    CONSTANT        reduce using rule 100 (statement -> CLOSEFILE expression .)
    INPUT           reduce using rule 100 (statement -> CLOSEFILE expression .)
    OUTPUT          reduce using rule 100 (statement -> CLOSEFILE expression .)
    IF              reduce using rule 100 (statement -> CLOSEFILE expression .)
    CASE            reduce using rule 100 (statement -> CLOSEFILE expression .)
    FOR             reduce using rule 100 (statement -> CLOSEFILE expression .)
    REPEAT          reduce using rule 100 (statement -> CLOSEFILE expression .)
    WHILE           reduce using rule 100 (statement -> CLOSEFILE expression .)
    PROCEDURE       reduce using rule 100 (statement -> CLOSEFILE expression .)
    CALL            reduce using rule 100 (statement -> CLOSEFILE expression .)
    FUNCTION        reduce using rule 100 (statement -> CLOSEFILE expression .)
    RETURN          reduce using rule 100 (statement -> CLOSEFILE expression .)
    OPENFILE        reduce using rule 100 (statement -> CLOSEFILE expression .)
    READFILE        reduce using rule 100 (statement -> CLOSEFILE expression .)
    WRITEFILE       reduce using rule 100 (statement -> CLOSEFILE expression .)
    CLOSEFILE       reduce using rule 100 (statement -> CLOSEFILE expression .)
    SEEK            reduce using rule 100 (statement -> CLOSEFILE expression .)
    TYPE            reduce using rule 100 (statement -> CLOSEFILE expression .)
    PASS            reduce using rule 100 (statement -> CLOSEFILE expression .)
    IMPORT          reduce using rule 100 (statement -> CLOSEFILE expression .)
    CLASS           reduce using rule 100 (statement -> CLOSEFILE expression .)
    LEFT_SQUARE     reduce using rule 100 (statement -> CLOSEFILE expression .)
    ID              reduce using rule 100 (statement -> CLOSEFILE expression .)
    NOT             reduce using rule 100 (statement -> CLOSEFILE expression .)
    LEFT_PAREN      reduce using rule 100 (statement -> CLOSEFILE expression .)
    DATE            reduce using rule 100 (statement -> CLOSEFILE expression .)
    BOOLEAN         reduce using rule 100 (statement -> CLOSEFILE expression .)
    CHAR            reduce using rule 100 (statement -> CLOSEFILE expression .)
    STRING          reduce using rule 100 (statement -> CLOSEFILE expression .)
    REAL            reduce using rule 100 (statement -> CLOSEFILE expression .)
    INTEGER         reduce using rule 100 (statement -> CLOSEFILE expression .)
    POINTER         reduce using rule 100 (statement -> CLOSEFILE expression .)
    NEW             reduce using rule 100 (statement -> CLOSEFILE expression .)
    $end            reduce using rule 100 (statement -> CLOSEFILE expression .)
    UNTIL           reduce using rule 100 (statement -> CLOSEFILE expression .)
    ENDWHILE        reduce using rule 100 (statement -> CLOSEFILE expression .)
    ENDPROCEDURE    reduce using rule 100 (statement -> CLOSEFILE expression .)
    ENDTYPE         reduce using rule 100 (statement -> CLOSEFILE expression .)
    ENDCLASS        reduce using rule 100 (statement -> CLOSEFILE expression .)
    ELSE            reduce using rule 100 (statement -> CLOSEFILE expression .)
    ENDIF           reduce using rule 100 (statement -> CLOSEFILE expression .)
    ENDFUNCTION     reduce using rule 100 (statement -> CLOSEFILE expression .)
    SEMICOLON       reduce using rule 100 (statement -> CLOSEFILE expression .)
    NEXT            reduce using rule 100 (statement -> CLOSEFILE expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 100 (statement -> CLOSEFILE expression .) ]
  ! PLUS            [ reduce using rule 100 (statement -> CLOSEFILE expression .) ]


state 86

    (101) statement -> SEEK expression . COMMA expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    COMMA           shift and go to state 142
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 87

    (102) statement -> TYPE ID . statements ENDTYPE
    (104) statement -> TYPE ID . EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> TYPE ID . EQUAL POINTER ID
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    EQUAL           shift and go to state 144
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 143
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 88

    (107) expression -> POINTER expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    ASSIGN          reduce using rule 107 (expression -> POINTER expression .)
    DELETE          reduce using rule 107 (expression -> POINTER expression .)
    DECLARE         reduce using rule 107 (expression -> POINTER expression .)
    CONSTANT        reduce using rule 107 (expression -> POINTER expression .)
    INPUT           reduce using rule 107 (expression -> POINTER expression .)
    OUTPUT          reduce using rule 107 (expression -> POINTER expression .)
    IF              reduce using rule 107 (expression -> POINTER expression .)
    CASE            reduce using rule 107 (expression -> POINTER expression .)
    FOR             reduce using rule 107 (expression -> POINTER expression .)
    REPEAT          reduce using rule 107 (expression -> POINTER expression .)
    WHILE           reduce using rule 107 (expression -> POINTER expression .)
    PROCEDURE       reduce using rule 107 (expression -> POINTER expression .)
    CALL            reduce using rule 107 (expression -> POINTER expression .)
    FUNCTION        reduce using rule 107 (expression -> POINTER expression .)
    RETURN          reduce using rule 107 (expression -> POINTER expression .)
    OPENFILE        reduce using rule 107 (expression -> POINTER expression .)
    READFILE        reduce using rule 107 (expression -> POINTER expression .)
    WRITEFILE       reduce using rule 107 (expression -> POINTER expression .)
    CLOSEFILE       reduce using rule 107 (expression -> POINTER expression .)
    SEEK            reduce using rule 107 (expression -> POINTER expression .)
    TYPE            reduce using rule 107 (expression -> POINTER expression .)
    PASS            reduce using rule 107 (expression -> POINTER expression .)
    IMPORT          reduce using rule 107 (expression -> POINTER expression .)
    CLASS           reduce using rule 107 (expression -> POINTER expression .)
    LEFT_SQUARE     reduce using rule 107 (expression -> POINTER expression .)
    ID              reduce using rule 107 (expression -> POINTER expression .)
    NOT             reduce using rule 107 (expression -> POINTER expression .)
    LEFT_PAREN      reduce using rule 107 (expression -> POINTER expression .)
    DATE            reduce using rule 107 (expression -> POINTER expression .)
    BOOLEAN         reduce using rule 107 (expression -> POINTER expression .)
    CHAR            reduce using rule 107 (expression -> POINTER expression .)
    STRING          reduce using rule 107 (expression -> POINTER expression .)
    REAL            reduce using rule 107 (expression -> POINTER expression .)
    INTEGER         reduce using rule 107 (expression -> POINTER expression .)
    POINTER         reduce using rule 107 (expression -> POINTER expression .)
    NEW             reduce using rule 107 (expression -> POINTER expression .)
    $end            reduce using rule 107 (expression -> POINTER expression .)
    RIGHT_SQUARE    reduce using rule 107 (expression -> POINTER expression .)
    COMMA           reduce using rule 107 (expression -> POINTER expression .)
    UNTIL           reduce using rule 107 (expression -> POINTER expression .)
    ENDWHILE        reduce using rule 107 (expression -> POINTER expression .)
    ENDPROCEDURE    reduce using rule 107 (expression -> POINTER expression .)
    ENDTYPE         reduce using rule 107 (expression -> POINTER expression .)
    ENDCLASS        reduce using rule 107 (expression -> POINTER expression .)
    ELSE            reduce using rule 107 (expression -> POINTER expression .)
    ENDIF           reduce using rule 107 (expression -> POINTER expression .)
    ENDFUNCTION     reduce using rule 107 (expression -> POINTER expression .)
    SEMICOLON       reduce using rule 107 (expression -> POINTER expression .)
    NEXT            reduce using rule 107 (expression -> POINTER expression .)
    THEN            reduce using rule 107 (expression -> POINTER expression .)
    DO              reduce using rule 107 (expression -> POINTER expression .)
    RIGHT_PAREN     reduce using rule 107 (expression -> POINTER expression .)
    TO              reduce using rule 107 (expression -> POINTER expression .)
    COLON           reduce using rule 107 (expression -> POINTER expression .)
    STEP            reduce using rule 107 (expression -> POINTER expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! OR              [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! AND             [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! EQUAL           [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! NOT_EQUAL       [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! LESS            [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! GREATER         [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! LESS_EQUAL      [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! MOD             [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! DIV             [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! MUL             [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! N_DIV           [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! PLUS            [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! MINUS           [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! CONNECT         [ reduce using rule 107 (expression -> POINTER expression .) ]
  ! DOT             [ reduce using rule 107 (expression -> POINTER expression .) ]


state 89

    (110) statement -> IMPORT expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 110 (statement -> IMPORT expression .)
    DECLARE         reduce using rule 110 (statement -> IMPORT expression .)
    CONSTANT        reduce using rule 110 (statement -> IMPORT expression .)
    INPUT           reduce using rule 110 (statement -> IMPORT expression .)
    OUTPUT          reduce using rule 110 (statement -> IMPORT expression .)
    IF              reduce using rule 110 (statement -> IMPORT expression .)
    CASE            reduce using rule 110 (statement -> IMPORT expression .)
    FOR             reduce using rule 110 (statement -> IMPORT expression .)
    REPEAT          reduce using rule 110 (statement -> IMPORT expression .)
    WHILE           reduce using rule 110 (statement -> IMPORT expression .)
    PROCEDURE       reduce using rule 110 (statement -> IMPORT expression .)
    CALL            reduce using rule 110 (statement -> IMPORT expression .)
    FUNCTION        reduce using rule 110 (statement -> IMPORT expression .)
    RETURN          reduce using rule 110 (statement -> IMPORT expression .)
    OPENFILE        reduce using rule 110 (statement -> IMPORT expression .)
    READFILE        reduce using rule 110 (statement -> IMPORT expression .)
    WRITEFILE       reduce using rule 110 (statement -> IMPORT expression .)
    CLOSEFILE       reduce using rule 110 (statement -> IMPORT expression .)
    SEEK            reduce using rule 110 (statement -> IMPORT expression .)
    TYPE            reduce using rule 110 (statement -> IMPORT expression .)
    PASS            reduce using rule 110 (statement -> IMPORT expression .)
    IMPORT          reduce using rule 110 (statement -> IMPORT expression .)
    CLASS           reduce using rule 110 (statement -> IMPORT expression .)
    LEFT_SQUARE     reduce using rule 110 (statement -> IMPORT expression .)
    ID              reduce using rule 110 (statement -> IMPORT expression .)
    NOT             reduce using rule 110 (statement -> IMPORT expression .)
    LEFT_PAREN      reduce using rule 110 (statement -> IMPORT expression .)
    DATE            reduce using rule 110 (statement -> IMPORT expression .)
    BOOLEAN         reduce using rule 110 (statement -> IMPORT expression .)
    CHAR            reduce using rule 110 (statement -> IMPORT expression .)
    STRING          reduce using rule 110 (statement -> IMPORT expression .)
    REAL            reduce using rule 110 (statement -> IMPORT expression .)
    INTEGER         reduce using rule 110 (statement -> IMPORT expression .)
    POINTER         reduce using rule 110 (statement -> IMPORT expression .)
    NEW             reduce using rule 110 (statement -> IMPORT expression .)
    $end            reduce using rule 110 (statement -> IMPORT expression .)
    UNTIL           reduce using rule 110 (statement -> IMPORT expression .)
    ENDWHILE        reduce using rule 110 (statement -> IMPORT expression .)
    ENDPROCEDURE    reduce using rule 110 (statement -> IMPORT expression .)
    ENDTYPE         reduce using rule 110 (statement -> IMPORT expression .)
    ENDCLASS        reduce using rule 110 (statement -> IMPORT expression .)
    ELSE            reduce using rule 110 (statement -> IMPORT expression .)
    ENDIF           reduce using rule 110 (statement -> IMPORT expression .)
    ENDFUNCTION     reduce using rule 110 (statement -> IMPORT expression .)
    SEMICOLON       reduce using rule 110 (statement -> IMPORT expression .)
    NEXT            reduce using rule 110 (statement -> IMPORT expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 110 (statement -> IMPORT expression .) ]
  ! PLUS            [ reduce using rule 110 (statement -> IMPORT expression .) ]


state 90

    (112) statement -> CLASS ID . statements ENDCLASS
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 145
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 91

    (42) expression -> NOT expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 42 (expression -> NOT expression .)
    OR              reduce using rule 42 (expression -> NOT expression .)
    AND             reduce using rule 42 (expression -> NOT expression .)
    CONNECT         reduce using rule 42 (expression -> NOT expression .)
    DOT             reduce using rule 42 (expression -> NOT expression .)
    DELETE          reduce using rule 42 (expression -> NOT expression .)
    DECLARE         reduce using rule 42 (expression -> NOT expression .)
    CONSTANT        reduce using rule 42 (expression -> NOT expression .)
    INPUT           reduce using rule 42 (expression -> NOT expression .)
    OUTPUT          reduce using rule 42 (expression -> NOT expression .)
    IF              reduce using rule 42 (expression -> NOT expression .)
    CASE            reduce using rule 42 (expression -> NOT expression .)
    FOR             reduce using rule 42 (expression -> NOT expression .)
    REPEAT          reduce using rule 42 (expression -> NOT expression .)
    WHILE           reduce using rule 42 (expression -> NOT expression .)
    PROCEDURE       reduce using rule 42 (expression -> NOT expression .)
    CALL            reduce using rule 42 (expression -> NOT expression .)
    FUNCTION        reduce using rule 42 (expression -> NOT expression .)
    RETURN          reduce using rule 42 (expression -> NOT expression .)
    OPENFILE        reduce using rule 42 (expression -> NOT expression .)
    READFILE        reduce using rule 42 (expression -> NOT expression .)
    WRITEFILE       reduce using rule 42 (expression -> NOT expression .)
    CLOSEFILE       reduce using rule 42 (expression -> NOT expression .)
    SEEK            reduce using rule 42 (expression -> NOT expression .)
    TYPE            reduce using rule 42 (expression -> NOT expression .)
    PASS            reduce using rule 42 (expression -> NOT expression .)
    IMPORT          reduce using rule 42 (expression -> NOT expression .)
    CLASS           reduce using rule 42 (expression -> NOT expression .)
    LEFT_SQUARE     reduce using rule 42 (expression -> NOT expression .)
    ID              reduce using rule 42 (expression -> NOT expression .)
    NOT             reduce using rule 42 (expression -> NOT expression .)
    LEFT_PAREN      reduce using rule 42 (expression -> NOT expression .)
    DATE            reduce using rule 42 (expression -> NOT expression .)
    BOOLEAN         reduce using rule 42 (expression -> NOT expression .)
    CHAR            reduce using rule 42 (expression -> NOT expression .)
    STRING          reduce using rule 42 (expression -> NOT expression .)
    REAL            reduce using rule 42 (expression -> NOT expression .)
    INTEGER         reduce using rule 42 (expression -> NOT expression .)
    POINTER         reduce using rule 42 (expression -> NOT expression .)
    NEW             reduce using rule 42 (expression -> NOT expression .)
    $end            reduce using rule 42 (expression -> NOT expression .)
    RIGHT_SQUARE    reduce using rule 42 (expression -> NOT expression .)
    COMMA           reduce using rule 42 (expression -> NOT expression .)
    UNTIL           reduce using rule 42 (expression -> NOT expression .)
    ENDWHILE        reduce using rule 42 (expression -> NOT expression .)
    ENDPROCEDURE    reduce using rule 42 (expression -> NOT expression .)
    ENDTYPE         reduce using rule 42 (expression -> NOT expression .)
    ENDCLASS        reduce using rule 42 (expression -> NOT expression .)
    ELSE            reduce using rule 42 (expression -> NOT expression .)
    ENDIF           reduce using rule 42 (expression -> NOT expression .)
    ENDFUNCTION     reduce using rule 42 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 42 (expression -> NOT expression .)
    NEXT            reduce using rule 42 (expression -> NOT expression .)
    THEN            reduce using rule 42 (expression -> NOT expression .)
    DO              reduce using rule 42 (expression -> NOT expression .)
    RIGHT_PAREN     reduce using rule 42 (expression -> NOT expression .)
    TO              reduce using rule 42 (expression -> NOT expression .)
    COLON           reduce using rule 42 (expression -> NOT expression .)
    STEP            reduce using rule 42 (expression -> NOT expression .)
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! EQUAL           [ reduce using rule 42 (expression -> NOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 42 (expression -> NOT expression .) ]
  ! LESS            [ reduce using rule 42 (expression -> NOT expression .) ]
  ! GREATER         [ reduce using rule 42 (expression -> NOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 42 (expression -> NOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 42 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 42 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> NOT expression .) ]
  ! MUL             [ reduce using rule 42 (expression -> NOT expression .) ]
  ! N_DIV           [ reduce using rule 42 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> NOT expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 92

    (53) expression -> MINUS expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 53 (expression -> MINUS expression .)
    OR              reduce using rule 53 (expression -> MINUS expression .)
    AND             reduce using rule 53 (expression -> MINUS expression .)
    EQUAL           reduce using rule 53 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 53 (expression -> MINUS expression .)
    LESS            reduce using rule 53 (expression -> MINUS expression .)
    GREATER         reduce using rule 53 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 53 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 53 (expression -> MINUS expression .)
    MOD             reduce using rule 53 (expression -> MINUS expression .)
    DIV             reduce using rule 53 (expression -> MINUS expression .)
    MUL             reduce using rule 53 (expression -> MINUS expression .)
    N_DIV           reduce using rule 53 (expression -> MINUS expression .)
    PLUS            reduce using rule 53 (expression -> MINUS expression .)
    MINUS           reduce using rule 53 (expression -> MINUS expression .)
    CONNECT         reduce using rule 53 (expression -> MINUS expression .)
    DOT             reduce using rule 53 (expression -> MINUS expression .)
    DELETE          reduce using rule 53 (expression -> MINUS expression .)
    DECLARE         reduce using rule 53 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 53 (expression -> MINUS expression .)
    INPUT           reduce using rule 53 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 53 (expression -> MINUS expression .)
    IF              reduce using rule 53 (expression -> MINUS expression .)
    CASE            reduce using rule 53 (expression -> MINUS expression .)
    FOR             reduce using rule 53 (expression -> MINUS expression .)
    REPEAT          reduce using rule 53 (expression -> MINUS expression .)
    WHILE           reduce using rule 53 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 53 (expression -> MINUS expression .)
    CALL            reduce using rule 53 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 53 (expression -> MINUS expression .)
    RETURN          reduce using rule 53 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 53 (expression -> MINUS expression .)
    READFILE        reduce using rule 53 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 53 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 53 (expression -> MINUS expression .)
    SEEK            reduce using rule 53 (expression -> MINUS expression .)
    TYPE            reduce using rule 53 (expression -> MINUS expression .)
    PASS            reduce using rule 53 (expression -> MINUS expression .)
    IMPORT          reduce using rule 53 (expression -> MINUS expression .)
    CLASS           reduce using rule 53 (expression -> MINUS expression .)
    LEFT_SQUARE     reduce using rule 53 (expression -> MINUS expression .)
    ID              reduce using rule 53 (expression -> MINUS expression .)
    NOT             reduce using rule 53 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 53 (expression -> MINUS expression .)
    DATE            reduce using rule 53 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 53 (expression -> MINUS expression .)
    CHAR            reduce using rule 53 (expression -> MINUS expression .)
    STRING          reduce using rule 53 (expression -> MINUS expression .)
    REAL            reduce using rule 53 (expression -> MINUS expression .)
    INTEGER         reduce using rule 53 (expression -> MINUS expression .)
    POINTER         reduce using rule 53 (expression -> MINUS expression .)
    NEW             reduce using rule 53 (expression -> MINUS expression .)
    $end            reduce using rule 53 (expression -> MINUS expression .)
    RIGHT_SQUARE    reduce using rule 53 (expression -> MINUS expression .)
    COMMA           reduce using rule 53 (expression -> MINUS expression .)
    UNTIL           reduce using rule 53 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 53 (expression -> MINUS expression .)
    ENDPROCEDURE    reduce using rule 53 (expression -> MINUS expression .)
    ENDTYPE         reduce using rule 53 (expression -> MINUS expression .)
    ENDCLASS        reduce using rule 53 (expression -> MINUS expression .)
    ELSE            reduce using rule 53 (expression -> MINUS expression .)
    ENDIF           reduce using rule 53 (expression -> MINUS expression .)
    ENDFUNCTION     reduce using rule 53 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 53 (expression -> MINUS expression .)
    NEXT            reduce using rule 53 (expression -> MINUS expression .)
    THEN            reduce using rule 53 (expression -> MINUS expression .)
    DO              reduce using rule 53 (expression -> MINUS expression .)
    RIGHT_PAREN     reduce using rule 53 (expression -> MINUS expression .)
    TO              reduce using rule 53 (expression -> MINUS expression .)
    COLON           reduce using rule 53 (expression -> MINUS expression .)
    STEP            reduce using rule 53 (expression -> MINUS expression .)

  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 93

    (54) expression -> PLUS expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 54 (expression -> PLUS expression .)
    OR              reduce using rule 54 (expression -> PLUS expression .)
    AND             reduce using rule 54 (expression -> PLUS expression .)
    EQUAL           reduce using rule 54 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 54 (expression -> PLUS expression .)
    LESS            reduce using rule 54 (expression -> PLUS expression .)
    GREATER         reduce using rule 54 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 54 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 54 (expression -> PLUS expression .)
    MOD             reduce using rule 54 (expression -> PLUS expression .)
    DIV             reduce using rule 54 (expression -> PLUS expression .)
    MUL             reduce using rule 54 (expression -> PLUS expression .)
    N_DIV           reduce using rule 54 (expression -> PLUS expression .)
    PLUS            reduce using rule 54 (expression -> PLUS expression .)
    MINUS           reduce using rule 54 (expression -> PLUS expression .)
    CONNECT         reduce using rule 54 (expression -> PLUS expression .)
    DOT             reduce using rule 54 (expression -> PLUS expression .)
    DELETE          reduce using rule 54 (expression -> PLUS expression .)
    DECLARE         reduce using rule 54 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 54 (expression -> PLUS expression .)
    INPUT           reduce using rule 54 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 54 (expression -> PLUS expression .)
    IF              reduce using rule 54 (expression -> PLUS expression .)
    CASE            reduce using rule 54 (expression -> PLUS expression .)
    FOR             reduce using rule 54 (expression -> PLUS expression .)
    REPEAT          reduce using rule 54 (expression -> PLUS expression .)
    WHILE           reduce using rule 54 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 54 (expression -> PLUS expression .)
    CALL            reduce using rule 54 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 54 (expression -> PLUS expression .)
    RETURN          reduce using rule 54 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 54 (expression -> PLUS expression .)
    READFILE        reduce using rule 54 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 54 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 54 (expression -> PLUS expression .)
    SEEK            reduce using rule 54 (expression -> PLUS expression .)
    TYPE            reduce using rule 54 (expression -> PLUS expression .)
    PASS            reduce using rule 54 (expression -> PLUS expression .)
    IMPORT          reduce using rule 54 (expression -> PLUS expression .)
    CLASS           reduce using rule 54 (expression -> PLUS expression .)
    LEFT_SQUARE     reduce using rule 54 (expression -> PLUS expression .)
    ID              reduce using rule 54 (expression -> PLUS expression .)
    NOT             reduce using rule 54 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 54 (expression -> PLUS expression .)
    DATE            reduce using rule 54 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 54 (expression -> PLUS expression .)
    CHAR            reduce using rule 54 (expression -> PLUS expression .)
    STRING          reduce using rule 54 (expression -> PLUS expression .)
    REAL            reduce using rule 54 (expression -> PLUS expression .)
    INTEGER         reduce using rule 54 (expression -> PLUS expression .)
    POINTER         reduce using rule 54 (expression -> PLUS expression .)
    NEW             reduce using rule 54 (expression -> PLUS expression .)
    $end            reduce using rule 54 (expression -> PLUS expression .)
    RIGHT_SQUARE    reduce using rule 54 (expression -> PLUS expression .)
    COMMA           reduce using rule 54 (expression -> PLUS expression .)
    UNTIL           reduce using rule 54 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 54 (expression -> PLUS expression .)
    ENDPROCEDURE    reduce using rule 54 (expression -> PLUS expression .)
    ENDTYPE         reduce using rule 54 (expression -> PLUS expression .)
    ENDCLASS        reduce using rule 54 (expression -> PLUS expression .)
    ELSE            reduce using rule 54 (expression -> PLUS expression .)
    ENDIF           reduce using rule 54 (expression -> PLUS expression .)
    ENDFUNCTION     reduce using rule 54 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 54 (expression -> PLUS expression .)
    NEXT            reduce using rule 54 (expression -> PLUS expression .)
    THEN            reduce using rule 54 (expression -> PLUS expression .)
    DO              reduce using rule 54 (expression -> PLUS expression .)
    RIGHT_PAREN     reduce using rule 54 (expression -> PLUS expression .)
    TO              reduce using rule 54 (expression -> PLUS expression .)
    COLON           reduce using rule 54 (expression -> PLUS expression .)
    STEP            reduce using rule 54 (expression -> PLUS expression .)

  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 94

    (39) expression -> ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (10) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 146
    COMMA           shift and go to state 147


state 95

    (11) indexes -> expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 11 (indexes -> expression .)
    COMMA           reduce using rule 11 (indexes -> expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 96

    (90) expression -> ID LEFT_PAREN parameters . RIGHT_PAREN
    (76) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 148
    COMMA           shift and go to state 149


state 97

    (91) expression -> ID LEFT_PAREN RIGHT_PAREN .

    ASSIGN          reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OR              reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    AND             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    EQUAL           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER         reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MOD             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DIV             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MUL             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    N_DIV           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PLUS            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    MINUS           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONNECT         reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DOT             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DELETE          reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DECLARE         reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CONSTANT        reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INPUT           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OUTPUT          reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IF              reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CASE            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FOR             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REPEAT          reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WHILE           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PROCEDURE       reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CALL            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    FUNCTION        reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RETURN          reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    OPENFILE        reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    READFILE        reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    WRITEFILE       reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEEK            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TYPE            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    PASS            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    IMPORT          reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CLASS           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ID              reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NOT             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DATE            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    BOOLEAN         reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    CHAR            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STRING          reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    REAL            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    INTEGER         reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    POINTER         reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NEW             reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    $end            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COMMA           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    UNTIL           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDWHILE        reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDTYPE         reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDCLASS        reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ELSE            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDIF           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    SEMICOLON       reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    NEXT            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    THEN            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    DO              reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    TO              reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    COLON           reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)
    STEP            reduce using rule 91 (expression -> ID LEFT_PAREN RIGHT_PAREN .)


state 98

    (77) parameters -> expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_PAREN     reduce using rule 77 (parameters -> expression .)
    COMMA           reduce using rule 77 (parameters -> expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 99

    (4) statement -> DECLARE ID COLON . ID
    (6) statement -> DECLARE ID COLON . ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    ID              shift and go to state 150
    ARRAY           shift and go to state 151


state 100

    (5) statement -> CONSTANT ID EQUAL . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 152

state 101

    (111) statement -> expression ASSIGN expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 111 (statement -> expression ASSIGN expression .)
    DECLARE         reduce using rule 111 (statement -> expression ASSIGN expression .)
    CONSTANT        reduce using rule 111 (statement -> expression ASSIGN expression .)
    INPUT           reduce using rule 111 (statement -> expression ASSIGN expression .)
    OUTPUT          reduce using rule 111 (statement -> expression ASSIGN expression .)
    IF              reduce using rule 111 (statement -> expression ASSIGN expression .)
    CASE            reduce using rule 111 (statement -> expression ASSIGN expression .)
    FOR             reduce using rule 111 (statement -> expression ASSIGN expression .)
    REPEAT          reduce using rule 111 (statement -> expression ASSIGN expression .)
    WHILE           reduce using rule 111 (statement -> expression ASSIGN expression .)
    PROCEDURE       reduce using rule 111 (statement -> expression ASSIGN expression .)
    CALL            reduce using rule 111 (statement -> expression ASSIGN expression .)
    FUNCTION        reduce using rule 111 (statement -> expression ASSIGN expression .)
    RETURN          reduce using rule 111 (statement -> expression ASSIGN expression .)
    OPENFILE        reduce using rule 111 (statement -> expression ASSIGN expression .)
    READFILE        reduce using rule 111 (statement -> expression ASSIGN expression .)
    WRITEFILE       reduce using rule 111 (statement -> expression ASSIGN expression .)
    CLOSEFILE       reduce using rule 111 (statement -> expression ASSIGN expression .)
    SEEK            reduce using rule 111 (statement -> expression ASSIGN expression .)
    TYPE            reduce using rule 111 (statement -> expression ASSIGN expression .)
    PASS            reduce using rule 111 (statement -> expression ASSIGN expression .)
    IMPORT          reduce using rule 111 (statement -> expression ASSIGN expression .)
    CLASS           reduce using rule 111 (statement -> expression ASSIGN expression .)
    LEFT_SQUARE     reduce using rule 111 (statement -> expression ASSIGN expression .)
    ID              reduce using rule 111 (statement -> expression ASSIGN expression .)
    NOT             reduce using rule 111 (statement -> expression ASSIGN expression .)
    LEFT_PAREN      reduce using rule 111 (statement -> expression ASSIGN expression .)
    DATE            reduce using rule 111 (statement -> expression ASSIGN expression .)
    BOOLEAN         reduce using rule 111 (statement -> expression ASSIGN expression .)
    CHAR            reduce using rule 111 (statement -> expression ASSIGN expression .)
    STRING          reduce using rule 111 (statement -> expression ASSIGN expression .)
    REAL            reduce using rule 111 (statement -> expression ASSIGN expression .)
    INTEGER         reduce using rule 111 (statement -> expression ASSIGN expression .)
    POINTER         reduce using rule 111 (statement -> expression ASSIGN expression .)
    NEW             reduce using rule 111 (statement -> expression ASSIGN expression .)
    $end            reduce using rule 111 (statement -> expression ASSIGN expression .)
    UNTIL           reduce using rule 111 (statement -> expression ASSIGN expression .)
    ENDWHILE        reduce using rule 111 (statement -> expression ASSIGN expression .)
    ENDPROCEDURE    reduce using rule 111 (statement -> expression ASSIGN expression .)
    ENDTYPE         reduce using rule 111 (statement -> expression ASSIGN expression .)
    ENDCLASS        reduce using rule 111 (statement -> expression ASSIGN expression .)
    ELSE            reduce using rule 111 (statement -> expression ASSIGN expression .)
    ENDIF           reduce using rule 111 (statement -> expression ASSIGN expression .)
    ENDFUNCTION     reduce using rule 111 (statement -> expression ASSIGN expression .)
    SEMICOLON       reduce using rule 111 (statement -> expression ASSIGN expression .)
    NEXT            reduce using rule 111 (statement -> expression ASSIGN expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 111 (statement -> expression ASSIGN expression .) ]
  ! PLUS            [ reduce using rule 111 (statement -> expression ASSIGN expression .) ]


state 102

    (40) expression -> expression OR expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 40 (expression -> expression OR expression .)
    OR              reduce using rule 40 (expression -> expression OR expression .)
    AND             reduce using rule 40 (expression -> expression OR expression .)
    CONNECT         reduce using rule 40 (expression -> expression OR expression .)
    DOT             reduce using rule 40 (expression -> expression OR expression .)
    DELETE          reduce using rule 40 (expression -> expression OR expression .)
    DECLARE         reduce using rule 40 (expression -> expression OR expression .)
    CONSTANT        reduce using rule 40 (expression -> expression OR expression .)
    INPUT           reduce using rule 40 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 40 (expression -> expression OR expression .)
    IF              reduce using rule 40 (expression -> expression OR expression .)
    CASE            reduce using rule 40 (expression -> expression OR expression .)
    FOR             reduce using rule 40 (expression -> expression OR expression .)
    REPEAT          reduce using rule 40 (expression -> expression OR expression .)
    WHILE           reduce using rule 40 (expression -> expression OR expression .)
    PROCEDURE       reduce using rule 40 (expression -> expression OR expression .)
    CALL            reduce using rule 40 (expression -> expression OR expression .)
    FUNCTION        reduce using rule 40 (expression -> expression OR expression .)
    RETURN          reduce using rule 40 (expression -> expression OR expression .)
    OPENFILE        reduce using rule 40 (expression -> expression OR expression .)
    READFILE        reduce using rule 40 (expression -> expression OR expression .)
    WRITEFILE       reduce using rule 40 (expression -> expression OR expression .)
    CLOSEFILE       reduce using rule 40 (expression -> expression OR expression .)
    SEEK            reduce using rule 40 (expression -> expression OR expression .)
    TYPE            reduce using rule 40 (expression -> expression OR expression .)
    PASS            reduce using rule 40 (expression -> expression OR expression .)
    IMPORT          reduce using rule 40 (expression -> expression OR expression .)
    CLASS           reduce using rule 40 (expression -> expression OR expression .)
    LEFT_SQUARE     reduce using rule 40 (expression -> expression OR expression .)
    ID              reduce using rule 40 (expression -> expression OR expression .)
    NOT             reduce using rule 40 (expression -> expression OR expression .)
    LEFT_PAREN      reduce using rule 40 (expression -> expression OR expression .)
    DATE            reduce using rule 40 (expression -> expression OR expression .)
    BOOLEAN         reduce using rule 40 (expression -> expression OR expression .)
    CHAR            reduce using rule 40 (expression -> expression OR expression .)
    STRING          reduce using rule 40 (expression -> expression OR expression .)
    REAL            reduce using rule 40 (expression -> expression OR expression .)
    INTEGER         reduce using rule 40 (expression -> expression OR expression .)
    POINTER         reduce using rule 40 (expression -> expression OR expression .)
    NEW             reduce using rule 40 (expression -> expression OR expression .)
    $end            reduce using rule 40 (expression -> expression OR expression .)
    RIGHT_SQUARE    reduce using rule 40 (expression -> expression OR expression .)
    COMMA           reduce using rule 40 (expression -> expression OR expression .)
    UNTIL           reduce using rule 40 (expression -> expression OR expression .)
    ENDWHILE        reduce using rule 40 (expression -> expression OR expression .)
    ENDPROCEDURE    reduce using rule 40 (expression -> expression OR expression .)
    ENDTYPE         reduce using rule 40 (expression -> expression OR expression .)
    ENDCLASS        reduce using rule 40 (expression -> expression OR expression .)
    ELSE            reduce using rule 40 (expression -> expression OR expression .)
    ENDIF           reduce using rule 40 (expression -> expression OR expression .)
    ENDFUNCTION     reduce using rule 40 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression OR expression .)
    NEXT            reduce using rule 40 (expression -> expression OR expression .)
    THEN            reduce using rule 40 (expression -> expression OR expression .)
    DO              reduce using rule 40 (expression -> expression OR expression .)
    RIGHT_PAREN     reduce using rule 40 (expression -> expression OR expression .)
    TO              reduce using rule 40 (expression -> expression OR expression .)
    COLON           reduce using rule 40 (expression -> expression OR expression .)
    STEP            reduce using rule 40 (expression -> expression OR expression .)
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! EQUAL           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MUL             [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! N_DIV           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 103

    (41) expression -> expression AND expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 41 (expression -> expression AND expression .)
    AND             reduce using rule 41 (expression -> expression AND expression .)
    CONNECT         reduce using rule 41 (expression -> expression AND expression .)
    DOT             reduce using rule 41 (expression -> expression AND expression .)
    DELETE          reduce using rule 41 (expression -> expression AND expression .)
    DECLARE         reduce using rule 41 (expression -> expression AND expression .)
    CONSTANT        reduce using rule 41 (expression -> expression AND expression .)
    INPUT           reduce using rule 41 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 41 (expression -> expression AND expression .)
    IF              reduce using rule 41 (expression -> expression AND expression .)
    CASE            reduce using rule 41 (expression -> expression AND expression .)
    FOR             reduce using rule 41 (expression -> expression AND expression .)
    REPEAT          reduce using rule 41 (expression -> expression AND expression .)
    WHILE           reduce using rule 41 (expression -> expression AND expression .)
    PROCEDURE       reduce using rule 41 (expression -> expression AND expression .)
    CALL            reduce using rule 41 (expression -> expression AND expression .)
    FUNCTION        reduce using rule 41 (expression -> expression AND expression .)
    RETURN          reduce using rule 41 (expression -> expression AND expression .)
    OPENFILE        reduce using rule 41 (expression -> expression AND expression .)
    READFILE        reduce using rule 41 (expression -> expression AND expression .)
    WRITEFILE       reduce using rule 41 (expression -> expression AND expression .)
    CLOSEFILE       reduce using rule 41 (expression -> expression AND expression .)
    SEEK            reduce using rule 41 (expression -> expression AND expression .)
    TYPE            reduce using rule 41 (expression -> expression AND expression .)
    PASS            reduce using rule 41 (expression -> expression AND expression .)
    IMPORT          reduce using rule 41 (expression -> expression AND expression .)
    CLASS           reduce using rule 41 (expression -> expression AND expression .)
    LEFT_SQUARE     reduce using rule 41 (expression -> expression AND expression .)
    ID              reduce using rule 41 (expression -> expression AND expression .)
    NOT             reduce using rule 41 (expression -> expression AND expression .)
    LEFT_PAREN      reduce using rule 41 (expression -> expression AND expression .)
    DATE            reduce using rule 41 (expression -> expression AND expression .)
    BOOLEAN         reduce using rule 41 (expression -> expression AND expression .)
    CHAR            reduce using rule 41 (expression -> expression AND expression .)
    STRING          reduce using rule 41 (expression -> expression AND expression .)
    REAL            reduce using rule 41 (expression -> expression AND expression .)
    INTEGER         reduce using rule 41 (expression -> expression AND expression .)
    POINTER         reduce using rule 41 (expression -> expression AND expression .)
    NEW             reduce using rule 41 (expression -> expression AND expression .)
    $end            reduce using rule 41 (expression -> expression AND expression .)
    RIGHT_SQUARE    reduce using rule 41 (expression -> expression AND expression .)
    COMMA           reduce using rule 41 (expression -> expression AND expression .)
    UNTIL           reduce using rule 41 (expression -> expression AND expression .)
    ENDWHILE        reduce using rule 41 (expression -> expression AND expression .)
    ENDPROCEDURE    reduce using rule 41 (expression -> expression AND expression .)
    ENDTYPE         reduce using rule 41 (expression -> expression AND expression .)
    ENDCLASS        reduce using rule 41 (expression -> expression AND expression .)
    ELSE            reduce using rule 41 (expression -> expression AND expression .)
    ENDIF           reduce using rule 41 (expression -> expression AND expression .)
    ENDFUNCTION     reduce using rule 41 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression AND expression .)
    NEXT            reduce using rule 41 (expression -> expression AND expression .)
    THEN            reduce using rule 41 (expression -> expression AND expression .)
    DO              reduce using rule 41 (expression -> expression AND expression .)
    RIGHT_PAREN     reduce using rule 41 (expression -> expression AND expression .)
    TO              reduce using rule 41 (expression -> expression AND expression .)
    COLON           reduce using rule 41 (expression -> expression AND expression .)
    STEP            reduce using rule 41 (expression -> expression AND expression .)
    OR              shift and go to state 48
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! OR              [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! EQUAL           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MUL             [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! N_DIV           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 49 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 104

    (43) expression -> expression EQUAL expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 43 (expression -> expression EQUAL expression .)
    OR              reduce using rule 43 (expression -> expression EQUAL expression .)
    AND             reduce using rule 43 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 43 (expression -> expression EQUAL expression .)
    NOT_EQUAL       reduce using rule 43 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 43 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 43 (expression -> expression EQUAL expression .)
    LESS_EQUAL      reduce using rule 43 (expression -> expression EQUAL expression .)
    GREATER_EQUAL   reduce using rule 43 (expression -> expression EQUAL expression .)
    CONNECT         reduce using rule 43 (expression -> expression EQUAL expression .)
    DOT             reduce using rule 43 (expression -> expression EQUAL expression .)
    DELETE          reduce using rule 43 (expression -> expression EQUAL expression .)
    DECLARE         reduce using rule 43 (expression -> expression EQUAL expression .)
    CONSTANT        reduce using rule 43 (expression -> expression EQUAL expression .)
    INPUT           reduce using rule 43 (expression -> expression EQUAL expression .)
    OUTPUT          reduce using rule 43 (expression -> expression EQUAL expression .)
    IF              reduce using rule 43 (expression -> expression EQUAL expression .)
    CASE            reduce using rule 43 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 43 (expression -> expression EQUAL expression .)
    REPEAT          reduce using rule 43 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 43 (expression -> expression EQUAL expression .)
    PROCEDURE       reduce using rule 43 (expression -> expression EQUAL expression .)
    CALL            reduce using rule 43 (expression -> expression EQUAL expression .)
    FUNCTION        reduce using rule 43 (expression -> expression EQUAL expression .)
    RETURN          reduce using rule 43 (expression -> expression EQUAL expression .)
    OPENFILE        reduce using rule 43 (expression -> expression EQUAL expression .)
    READFILE        reduce using rule 43 (expression -> expression EQUAL expression .)
    WRITEFILE       reduce using rule 43 (expression -> expression EQUAL expression .)
    CLOSEFILE       reduce using rule 43 (expression -> expression EQUAL expression .)
    SEEK            reduce using rule 43 (expression -> expression EQUAL expression .)
    TYPE            reduce using rule 43 (expression -> expression EQUAL expression .)
    PASS            reduce using rule 43 (expression -> expression EQUAL expression .)
    IMPORT          reduce using rule 43 (expression -> expression EQUAL expression .)
    CLASS           reduce using rule 43 (expression -> expression EQUAL expression .)
    LEFT_SQUARE     reduce using rule 43 (expression -> expression EQUAL expression .)
    ID              reduce using rule 43 (expression -> expression EQUAL expression .)
    NOT             reduce using rule 43 (expression -> expression EQUAL expression .)
    LEFT_PAREN      reduce using rule 43 (expression -> expression EQUAL expression .)
    DATE            reduce using rule 43 (expression -> expression EQUAL expression .)
    BOOLEAN         reduce using rule 43 (expression -> expression EQUAL expression .)
    CHAR            reduce using rule 43 (expression -> expression EQUAL expression .)
    STRING          reduce using rule 43 (expression -> expression EQUAL expression .)
    REAL            reduce using rule 43 (expression -> expression EQUAL expression .)
    INTEGER         reduce using rule 43 (expression -> expression EQUAL expression .)
    POINTER         reduce using rule 43 (expression -> expression EQUAL expression .)
    NEW             reduce using rule 43 (expression -> expression EQUAL expression .)
    $end            reduce using rule 43 (expression -> expression EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 43 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 43 (expression -> expression EQUAL expression .)
    UNTIL           reduce using rule 43 (expression -> expression EQUAL expression .)
    ENDWHILE        reduce using rule 43 (expression -> expression EQUAL expression .)
    ENDPROCEDURE    reduce using rule 43 (expression -> expression EQUAL expression .)
    ENDTYPE         reduce using rule 43 (expression -> expression EQUAL expression .)
    ENDCLASS        reduce using rule 43 (expression -> expression EQUAL expression .)
    ELSE            reduce using rule 43 (expression -> expression EQUAL expression .)
    ENDIF           reduce using rule 43 (expression -> expression EQUAL expression .)
    ENDFUNCTION     reduce using rule 43 (expression -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression EQUAL expression .)
    NEXT            reduce using rule 43 (expression -> expression EQUAL expression .)
    THEN            reduce using rule 43 (expression -> expression EQUAL expression .)
    DO              reduce using rule 43 (expression -> expression EQUAL expression .)
    RIGHT_PAREN     reduce using rule 43 (expression -> expression EQUAL expression .)
    TO              reduce using rule 43 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 43 (expression -> expression EQUAL expression .)
    STEP            reduce using rule 43 (expression -> expression EQUAL expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MOD             [ reduce using rule 43 (expression -> expression EQUAL expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression EQUAL expression .) ]
  ! MUL             [ reduce using rule 43 (expression -> expression EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 43 (expression -> expression EQUAL expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression EQUAL expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 105

    (44) expression -> expression NOT_EQUAL expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    OR              reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    AND             reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    EQUAL           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    LESS            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    GREATER         reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    CONNECT         reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    DOT             reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    DELETE          reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    DECLARE         reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    CONSTANT        reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    INPUT           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    OUTPUT          reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    FOR             reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    REPEAT          reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    PROCEDURE       reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    CALL            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    FUNCTION        reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    RETURN          reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    OPENFILE        reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    READFILE        reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    WRITEFILE       reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    CLOSEFILE       reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    SEEK            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    TYPE            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    PASS            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    IMPORT          reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    CLASS           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    LEFT_SQUARE     reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ID              reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    NOT             reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    LEFT_PAREN      reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    DATE            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    BOOLEAN         reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    CHAR            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    REAL            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    POINTER         reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    NEW             reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    UNTIL           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ENDWHILE        reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ENDTYPE         reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ENDCLASS        reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ENDIF           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    ENDFUNCTION     reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    NEXT            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    THEN            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    DO              reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    TO              reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    COLON           reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    STEP            reduce using rule 44 (expression -> expression NOT_EQUAL expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MOD             [ reduce using rule 44 (expression -> expression NOT_EQUAL expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression NOT_EQUAL expression .) ]
  ! MUL             [ reduce using rule 44 (expression -> expression NOT_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 44 (expression -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression NOT_EQUAL expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 106

    (45) expression -> expression LESS expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 45 (expression -> expression LESS expression .)
    OR              reduce using rule 45 (expression -> expression LESS expression .)
    AND             reduce using rule 45 (expression -> expression LESS expression .)
    EQUAL           reduce using rule 45 (expression -> expression LESS expression .)
    NOT_EQUAL       reduce using rule 45 (expression -> expression LESS expression .)
    LESS            reduce using rule 45 (expression -> expression LESS expression .)
    GREATER         reduce using rule 45 (expression -> expression LESS expression .)
    LESS_EQUAL      reduce using rule 45 (expression -> expression LESS expression .)
    GREATER_EQUAL   reduce using rule 45 (expression -> expression LESS expression .)
    CONNECT         reduce using rule 45 (expression -> expression LESS expression .)
    DOT             reduce using rule 45 (expression -> expression LESS expression .)
    DELETE          reduce using rule 45 (expression -> expression LESS expression .)
    DECLARE         reduce using rule 45 (expression -> expression LESS expression .)
    CONSTANT        reduce using rule 45 (expression -> expression LESS expression .)
    INPUT           reduce using rule 45 (expression -> expression LESS expression .)
    OUTPUT          reduce using rule 45 (expression -> expression LESS expression .)
    IF              reduce using rule 45 (expression -> expression LESS expression .)
    CASE            reduce using rule 45 (expression -> expression LESS expression .)
    FOR             reduce using rule 45 (expression -> expression LESS expression .)
    REPEAT          reduce using rule 45 (expression -> expression LESS expression .)
    WHILE           reduce using rule 45 (expression -> expression LESS expression .)
    PROCEDURE       reduce using rule 45 (expression -> expression LESS expression .)
    CALL            reduce using rule 45 (expression -> expression LESS expression .)
    FUNCTION        reduce using rule 45 (expression -> expression LESS expression .)
    RETURN          reduce using rule 45 (expression -> expression LESS expression .)
    OPENFILE        reduce using rule 45 (expression -> expression LESS expression .)
    READFILE        reduce using rule 45 (expression -> expression LESS expression .)
    WRITEFILE       reduce using rule 45 (expression -> expression LESS expression .)
    CLOSEFILE       reduce using rule 45 (expression -> expression LESS expression .)
    SEEK            reduce using rule 45 (expression -> expression LESS expression .)
    TYPE            reduce using rule 45 (expression -> expression LESS expression .)
    PASS            reduce using rule 45 (expression -> expression LESS expression .)
    IMPORT          reduce using rule 45 (expression -> expression LESS expression .)
    CLASS           reduce using rule 45 (expression -> expression LESS expression .)
    LEFT_SQUARE     reduce using rule 45 (expression -> expression LESS expression .)
    ID              reduce using rule 45 (expression -> expression LESS expression .)
    NOT             reduce using rule 45 (expression -> expression LESS expression .)
    LEFT_PAREN      reduce using rule 45 (expression -> expression LESS expression .)
    DATE            reduce using rule 45 (expression -> expression LESS expression .)
    BOOLEAN         reduce using rule 45 (expression -> expression LESS expression .)
    CHAR            reduce using rule 45 (expression -> expression LESS expression .)
    STRING          reduce using rule 45 (expression -> expression LESS expression .)
    REAL            reduce using rule 45 (expression -> expression LESS expression .)
    INTEGER         reduce using rule 45 (expression -> expression LESS expression .)
    POINTER         reduce using rule 45 (expression -> expression LESS expression .)
    NEW             reduce using rule 45 (expression -> expression LESS expression .)
    $end            reduce using rule 45 (expression -> expression LESS expression .)
    RIGHT_SQUARE    reduce using rule 45 (expression -> expression LESS expression .)
    COMMA           reduce using rule 45 (expression -> expression LESS expression .)
    UNTIL           reduce using rule 45 (expression -> expression LESS expression .)
    ENDWHILE        reduce using rule 45 (expression -> expression LESS expression .)
    ENDPROCEDURE    reduce using rule 45 (expression -> expression LESS expression .)
    ENDTYPE         reduce using rule 45 (expression -> expression LESS expression .)
    ENDCLASS        reduce using rule 45 (expression -> expression LESS expression .)
    ELSE            reduce using rule 45 (expression -> expression LESS expression .)
    ENDIF           reduce using rule 45 (expression -> expression LESS expression .)
    ENDFUNCTION     reduce using rule 45 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression LESS expression .)
    NEXT            reduce using rule 45 (expression -> expression LESS expression .)
    THEN            reduce using rule 45 (expression -> expression LESS expression .)
    DO              reduce using rule 45 (expression -> expression LESS expression .)
    RIGHT_PAREN     reduce using rule 45 (expression -> expression LESS expression .)
    TO              reduce using rule 45 (expression -> expression LESS expression .)
    COLON           reduce using rule 45 (expression -> expression LESS expression .)
    STEP            reduce using rule 45 (expression -> expression LESS expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MOD             [ reduce using rule 45 (expression -> expression LESS expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression LESS expression .) ]
  ! MUL             [ reduce using rule 45 (expression -> expression LESS expression .) ]
  ! N_DIV           [ reduce using rule 45 (expression -> expression LESS expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression LESS expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 107

    (46) expression -> expression GREATER expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 46 (expression -> expression GREATER expression .)
    OR              reduce using rule 46 (expression -> expression GREATER expression .)
    AND             reduce using rule 46 (expression -> expression GREATER expression .)
    EQUAL           reduce using rule 46 (expression -> expression GREATER expression .)
    NOT_EQUAL       reduce using rule 46 (expression -> expression GREATER expression .)
    LESS            reduce using rule 46 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 46 (expression -> expression GREATER expression .)
    LESS_EQUAL      reduce using rule 46 (expression -> expression GREATER expression .)
    GREATER_EQUAL   reduce using rule 46 (expression -> expression GREATER expression .)
    CONNECT         reduce using rule 46 (expression -> expression GREATER expression .)
    DOT             reduce using rule 46 (expression -> expression GREATER expression .)
    DELETE          reduce using rule 46 (expression -> expression GREATER expression .)
    DECLARE         reduce using rule 46 (expression -> expression GREATER expression .)
    CONSTANT        reduce using rule 46 (expression -> expression GREATER expression .)
    INPUT           reduce using rule 46 (expression -> expression GREATER expression .)
    OUTPUT          reduce using rule 46 (expression -> expression GREATER expression .)
    IF              reduce using rule 46 (expression -> expression GREATER expression .)
    CASE            reduce using rule 46 (expression -> expression GREATER expression .)
    FOR             reduce using rule 46 (expression -> expression GREATER expression .)
    REPEAT          reduce using rule 46 (expression -> expression GREATER expression .)
    WHILE           reduce using rule 46 (expression -> expression GREATER expression .)
    PROCEDURE       reduce using rule 46 (expression -> expression GREATER expression .)
    CALL            reduce using rule 46 (expression -> expression GREATER expression .)
    FUNCTION        reduce using rule 46 (expression -> expression GREATER expression .)
    RETURN          reduce using rule 46 (expression -> expression GREATER expression .)
    OPENFILE        reduce using rule 46 (expression -> expression GREATER expression .)
    READFILE        reduce using rule 46 (expression -> expression GREATER expression .)
    WRITEFILE       reduce using rule 46 (expression -> expression GREATER expression .)
    CLOSEFILE       reduce using rule 46 (expression -> expression GREATER expression .)
    SEEK            reduce using rule 46 (expression -> expression GREATER expression .)
    TYPE            reduce using rule 46 (expression -> expression GREATER expression .)
    PASS            reduce using rule 46 (expression -> expression GREATER expression .)
    IMPORT          reduce using rule 46 (expression -> expression GREATER expression .)
    CLASS           reduce using rule 46 (expression -> expression GREATER expression .)
    LEFT_SQUARE     reduce using rule 46 (expression -> expression GREATER expression .)
    ID              reduce using rule 46 (expression -> expression GREATER expression .)
    NOT             reduce using rule 46 (expression -> expression GREATER expression .)
    LEFT_PAREN      reduce using rule 46 (expression -> expression GREATER expression .)
    DATE            reduce using rule 46 (expression -> expression GREATER expression .)
    BOOLEAN         reduce using rule 46 (expression -> expression GREATER expression .)
    CHAR            reduce using rule 46 (expression -> expression GREATER expression .)
    STRING          reduce using rule 46 (expression -> expression GREATER expression .)
    REAL            reduce using rule 46 (expression -> expression GREATER expression .)
    INTEGER         reduce using rule 46 (expression -> expression GREATER expression .)
    POINTER         reduce using rule 46 (expression -> expression GREATER expression .)
    NEW             reduce using rule 46 (expression -> expression GREATER expression .)
    $end            reduce using rule 46 (expression -> expression GREATER expression .)
    RIGHT_SQUARE    reduce using rule 46 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 46 (expression -> expression GREATER expression .)
    UNTIL           reduce using rule 46 (expression -> expression GREATER expression .)
    ENDWHILE        reduce using rule 46 (expression -> expression GREATER expression .)
    ENDPROCEDURE    reduce using rule 46 (expression -> expression GREATER expression .)
    ENDTYPE         reduce using rule 46 (expression -> expression GREATER expression .)
    ENDCLASS        reduce using rule 46 (expression -> expression GREATER expression .)
    ELSE            reduce using rule 46 (expression -> expression GREATER expression .)
    ENDIF           reduce using rule 46 (expression -> expression GREATER expression .)
    ENDFUNCTION     reduce using rule 46 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression GREATER expression .)
    NEXT            reduce using rule 46 (expression -> expression GREATER expression .)
    THEN            reduce using rule 46 (expression -> expression GREATER expression .)
    DO              reduce using rule 46 (expression -> expression GREATER expression .)
    RIGHT_PAREN     reduce using rule 46 (expression -> expression GREATER expression .)
    TO              reduce using rule 46 (expression -> expression GREATER expression .)
    COLON           reduce using rule 46 (expression -> expression GREATER expression .)
    STEP            reduce using rule 46 (expression -> expression GREATER expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MOD             [ reduce using rule 46 (expression -> expression GREATER expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression GREATER expression .) ]
  ! MUL             [ reduce using rule 46 (expression -> expression GREATER expression .) ]
  ! N_DIV           [ reduce using rule 46 (expression -> expression GREATER expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 108

    (47) expression -> expression LESS_EQUAL expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    OR              reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    AND             reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    EQUAL           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    LESS            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    GREATER         reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    CONNECT         reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    DOT             reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    DELETE          reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    DECLARE         reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    CONSTANT        reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    INPUT           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    OUTPUT          reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    FOR             reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    REPEAT          reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    PROCEDURE       reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    CALL            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    FUNCTION        reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    RETURN          reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    OPENFILE        reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    READFILE        reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    WRITEFILE       reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    CLOSEFILE       reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    SEEK            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    TYPE            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    PASS            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    IMPORT          reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    CLASS           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    LEFT_SQUARE     reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ID              reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    NOT             reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    LEFT_PAREN      reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    DATE            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    BOOLEAN         reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    CHAR            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    REAL            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    POINTER         reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    NEW             reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    UNTIL           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ENDWHILE        reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ENDTYPE         reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ENDCLASS        reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ENDIF           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    ENDFUNCTION     reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    NEXT            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    THEN            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    DO              reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    TO              reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    COLON           reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    STEP            reduce using rule 47 (expression -> expression LESS_EQUAL expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MOD             [ reduce using rule 47 (expression -> expression LESS_EQUAL expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression LESS_EQUAL expression .) ]
  ! MUL             [ reduce using rule 47 (expression -> expression LESS_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 47 (expression -> expression LESS_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LESS_EQUAL expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 109

    (48) expression -> expression GREATER_EQUAL expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    OR              reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    EQUAL           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    LESS            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    GREATER         reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    CONNECT         reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    DOT             reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    DELETE          reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    DECLARE         reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    CONSTANT        reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    INPUT           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    OUTPUT          reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    FOR             reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    REPEAT          reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    PROCEDURE       reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    CALL            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    FUNCTION        reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    RETURN          reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    OPENFILE        reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    READFILE        reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    WRITEFILE       reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    CLOSEFILE       reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    SEEK            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    TYPE            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    PASS            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    IMPORT          reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    CLASS           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    LEFT_SQUARE     reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ID              reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    NOT             reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    LEFT_PAREN      reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    DATE            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    BOOLEAN         reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    CHAR            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    REAL            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    POINTER         reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    NEW             reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_SQUARE    reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    UNTIL           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ENDWHILE        reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ENDPROCEDURE    reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ENDTYPE         reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ENDCLASS        reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ENDIF           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    ENDFUNCTION     reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    NEXT            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    THEN            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    DO              reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    RIGHT_PAREN     reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    TO              reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    COLON           reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    STEP            reduce using rule 48 (expression -> expression GREATER_EQUAL expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MOD             [ reduce using rule 48 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression GREATER_EQUAL expression .) ]
  ! MUL             [ reduce using rule 48 (expression -> expression GREATER_EQUAL expression .) ]
  ! N_DIV           [ reduce using rule 48 (expression -> expression GREATER_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression GREATER_EQUAL expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 110

    (49) expression -> expression MOD expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 49 (expression -> expression MOD expression .)
    OR              reduce using rule 49 (expression -> expression MOD expression .)
    AND             reduce using rule 49 (expression -> expression MOD expression .)
    EQUAL           reduce using rule 49 (expression -> expression MOD expression .)
    NOT_EQUAL       reduce using rule 49 (expression -> expression MOD expression .)
    LESS            reduce using rule 49 (expression -> expression MOD expression .)
    GREATER         reduce using rule 49 (expression -> expression MOD expression .)
    LESS_EQUAL      reduce using rule 49 (expression -> expression MOD expression .)
    GREATER_EQUAL   reduce using rule 49 (expression -> expression MOD expression .)
    MOD             reduce using rule 49 (expression -> expression MOD expression .)
    DIV             reduce using rule 49 (expression -> expression MOD expression .)
    MUL             reduce using rule 49 (expression -> expression MOD expression .)
    N_DIV           reduce using rule 49 (expression -> expression MOD expression .)
    PLUS            reduce using rule 49 (expression -> expression MOD expression .)
    MINUS           reduce using rule 49 (expression -> expression MOD expression .)
    CONNECT         reduce using rule 49 (expression -> expression MOD expression .)
    DOT             reduce using rule 49 (expression -> expression MOD expression .)
    DELETE          reduce using rule 49 (expression -> expression MOD expression .)
    DECLARE         reduce using rule 49 (expression -> expression MOD expression .)
    CONSTANT        reduce using rule 49 (expression -> expression MOD expression .)
    INPUT           reduce using rule 49 (expression -> expression MOD expression .)
    OUTPUT          reduce using rule 49 (expression -> expression MOD expression .)
    IF              reduce using rule 49 (expression -> expression MOD expression .)
    CASE            reduce using rule 49 (expression -> expression MOD expression .)
    FOR             reduce using rule 49 (expression -> expression MOD expression .)
    REPEAT          reduce using rule 49 (expression -> expression MOD expression .)
    WHILE           reduce using rule 49 (expression -> expression MOD expression .)
    PROCEDURE       reduce using rule 49 (expression -> expression MOD expression .)
    CALL            reduce using rule 49 (expression -> expression MOD expression .)
    FUNCTION        reduce using rule 49 (expression -> expression MOD expression .)
    RETURN          reduce using rule 49 (expression -> expression MOD expression .)
    OPENFILE        reduce using rule 49 (expression -> expression MOD expression .)
    READFILE        reduce using rule 49 (expression -> expression MOD expression .)
    WRITEFILE       reduce using rule 49 (expression -> expression MOD expression .)
    CLOSEFILE       reduce using rule 49 (expression -> expression MOD expression .)
    SEEK            reduce using rule 49 (expression -> expression MOD expression .)
    TYPE            reduce using rule 49 (expression -> expression MOD expression .)
    PASS            reduce using rule 49 (expression -> expression MOD expression .)
    IMPORT          reduce using rule 49 (expression -> expression MOD expression .)
    CLASS           reduce using rule 49 (expression -> expression MOD expression .)
    LEFT_SQUARE     reduce using rule 49 (expression -> expression MOD expression .)
    ID              reduce using rule 49 (expression -> expression MOD expression .)
    NOT             reduce using rule 49 (expression -> expression MOD expression .)
    LEFT_PAREN      reduce using rule 49 (expression -> expression MOD expression .)
    DATE            reduce using rule 49 (expression -> expression MOD expression .)
    BOOLEAN         reduce using rule 49 (expression -> expression MOD expression .)
    CHAR            reduce using rule 49 (expression -> expression MOD expression .)
    STRING          reduce using rule 49 (expression -> expression MOD expression .)
    REAL            reduce using rule 49 (expression -> expression MOD expression .)
    INTEGER         reduce using rule 49 (expression -> expression MOD expression .)
    POINTER         reduce using rule 49 (expression -> expression MOD expression .)
    NEW             reduce using rule 49 (expression -> expression MOD expression .)
    $end            reduce using rule 49 (expression -> expression MOD expression .)
    RIGHT_SQUARE    reduce using rule 49 (expression -> expression MOD expression .)
    COMMA           reduce using rule 49 (expression -> expression MOD expression .)
    UNTIL           reduce using rule 49 (expression -> expression MOD expression .)
    ENDWHILE        reduce using rule 49 (expression -> expression MOD expression .)
    ENDPROCEDURE    reduce using rule 49 (expression -> expression MOD expression .)
    ENDTYPE         reduce using rule 49 (expression -> expression MOD expression .)
    ENDCLASS        reduce using rule 49 (expression -> expression MOD expression .)
    ELSE            reduce using rule 49 (expression -> expression MOD expression .)
    ENDIF           reduce using rule 49 (expression -> expression MOD expression .)
    ENDFUNCTION     reduce using rule 49 (expression -> expression MOD expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression MOD expression .)
    NEXT            reduce using rule 49 (expression -> expression MOD expression .)
    THEN            reduce using rule 49 (expression -> expression MOD expression .)
    DO              reduce using rule 49 (expression -> expression MOD expression .)
    RIGHT_PAREN     reduce using rule 49 (expression -> expression MOD expression .)
    TO              reduce using rule 49 (expression -> expression MOD expression .)
    COLON           reduce using rule 49 (expression -> expression MOD expression .)
    STEP            reduce using rule 49 (expression -> expression MOD expression .)

  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 111

    (50) expression -> expression DIV expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 50 (expression -> expression DIV expression .)
    OR              reduce using rule 50 (expression -> expression DIV expression .)
    AND             reduce using rule 50 (expression -> expression DIV expression .)
    EQUAL           reduce using rule 50 (expression -> expression DIV expression .)
    NOT_EQUAL       reduce using rule 50 (expression -> expression DIV expression .)
    LESS            reduce using rule 50 (expression -> expression DIV expression .)
    GREATER         reduce using rule 50 (expression -> expression DIV expression .)
    LESS_EQUAL      reduce using rule 50 (expression -> expression DIV expression .)
    GREATER_EQUAL   reduce using rule 50 (expression -> expression DIV expression .)
    MOD             reduce using rule 50 (expression -> expression DIV expression .)
    DIV             reduce using rule 50 (expression -> expression DIV expression .)
    MUL             reduce using rule 50 (expression -> expression DIV expression .)
    N_DIV           reduce using rule 50 (expression -> expression DIV expression .)
    PLUS            reduce using rule 50 (expression -> expression DIV expression .)
    MINUS           reduce using rule 50 (expression -> expression DIV expression .)
    CONNECT         reduce using rule 50 (expression -> expression DIV expression .)
    DOT             reduce using rule 50 (expression -> expression DIV expression .)
    DELETE          reduce using rule 50 (expression -> expression DIV expression .)
    DECLARE         reduce using rule 50 (expression -> expression DIV expression .)
    CONSTANT        reduce using rule 50 (expression -> expression DIV expression .)
    INPUT           reduce using rule 50 (expression -> expression DIV expression .)
    OUTPUT          reduce using rule 50 (expression -> expression DIV expression .)
    IF              reduce using rule 50 (expression -> expression DIV expression .)
    CASE            reduce using rule 50 (expression -> expression DIV expression .)
    FOR             reduce using rule 50 (expression -> expression DIV expression .)
    REPEAT          reduce using rule 50 (expression -> expression DIV expression .)
    WHILE           reduce using rule 50 (expression -> expression DIV expression .)
    PROCEDURE       reduce using rule 50 (expression -> expression DIV expression .)
    CALL            reduce using rule 50 (expression -> expression DIV expression .)
    FUNCTION        reduce using rule 50 (expression -> expression DIV expression .)
    RETURN          reduce using rule 50 (expression -> expression DIV expression .)
    OPENFILE        reduce using rule 50 (expression -> expression DIV expression .)
    READFILE        reduce using rule 50 (expression -> expression DIV expression .)
    WRITEFILE       reduce using rule 50 (expression -> expression DIV expression .)
    CLOSEFILE       reduce using rule 50 (expression -> expression DIV expression .)
    SEEK            reduce using rule 50 (expression -> expression DIV expression .)
    TYPE            reduce using rule 50 (expression -> expression DIV expression .)
    PASS            reduce using rule 50 (expression -> expression DIV expression .)
    IMPORT          reduce using rule 50 (expression -> expression DIV expression .)
    CLASS           reduce using rule 50 (expression -> expression DIV expression .)
    LEFT_SQUARE     reduce using rule 50 (expression -> expression DIV expression .)
    ID              reduce using rule 50 (expression -> expression DIV expression .)
    NOT             reduce using rule 50 (expression -> expression DIV expression .)
    LEFT_PAREN      reduce using rule 50 (expression -> expression DIV expression .)
    DATE            reduce using rule 50 (expression -> expression DIV expression .)
    BOOLEAN         reduce using rule 50 (expression -> expression DIV expression .)
    CHAR            reduce using rule 50 (expression -> expression DIV expression .)
    STRING          reduce using rule 50 (expression -> expression DIV expression .)
    REAL            reduce using rule 50 (expression -> expression DIV expression .)
    INTEGER         reduce using rule 50 (expression -> expression DIV expression .)
    POINTER         reduce using rule 50 (expression -> expression DIV expression .)
    NEW             reduce using rule 50 (expression -> expression DIV expression .)
    $end            reduce using rule 50 (expression -> expression DIV expression .)
    RIGHT_SQUARE    reduce using rule 50 (expression -> expression DIV expression .)
    COMMA           reduce using rule 50 (expression -> expression DIV expression .)
    UNTIL           reduce using rule 50 (expression -> expression DIV expression .)
    ENDWHILE        reduce using rule 50 (expression -> expression DIV expression .)
    ENDPROCEDURE    reduce using rule 50 (expression -> expression DIV expression .)
    ENDTYPE         reduce using rule 50 (expression -> expression DIV expression .)
    ENDCLASS        reduce using rule 50 (expression -> expression DIV expression .)
    ELSE            reduce using rule 50 (expression -> expression DIV expression .)
    ENDIF           reduce using rule 50 (expression -> expression DIV expression .)
    ENDFUNCTION     reduce using rule 50 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression DIV expression .)
    NEXT            reduce using rule 50 (expression -> expression DIV expression .)
    THEN            reduce using rule 50 (expression -> expression DIV expression .)
    DO              reduce using rule 50 (expression -> expression DIV expression .)
    RIGHT_PAREN     reduce using rule 50 (expression -> expression DIV expression .)
    TO              reduce using rule 50 (expression -> expression DIV expression .)
    COLON           reduce using rule 50 (expression -> expression DIV expression .)
    STEP            reduce using rule 50 (expression -> expression DIV expression .)

  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 112

    (51) expression -> expression MUL expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 51 (expression -> expression MUL expression .)
    OR              reduce using rule 51 (expression -> expression MUL expression .)
    AND             reduce using rule 51 (expression -> expression MUL expression .)
    EQUAL           reduce using rule 51 (expression -> expression MUL expression .)
    NOT_EQUAL       reduce using rule 51 (expression -> expression MUL expression .)
    LESS            reduce using rule 51 (expression -> expression MUL expression .)
    GREATER         reduce using rule 51 (expression -> expression MUL expression .)
    LESS_EQUAL      reduce using rule 51 (expression -> expression MUL expression .)
    GREATER_EQUAL   reduce using rule 51 (expression -> expression MUL expression .)
    MOD             reduce using rule 51 (expression -> expression MUL expression .)
    DIV             reduce using rule 51 (expression -> expression MUL expression .)
    MUL             reduce using rule 51 (expression -> expression MUL expression .)
    N_DIV           reduce using rule 51 (expression -> expression MUL expression .)
    PLUS            reduce using rule 51 (expression -> expression MUL expression .)
    MINUS           reduce using rule 51 (expression -> expression MUL expression .)
    CONNECT         reduce using rule 51 (expression -> expression MUL expression .)
    DOT             reduce using rule 51 (expression -> expression MUL expression .)
    DELETE          reduce using rule 51 (expression -> expression MUL expression .)
    DECLARE         reduce using rule 51 (expression -> expression MUL expression .)
    CONSTANT        reduce using rule 51 (expression -> expression MUL expression .)
    INPUT           reduce using rule 51 (expression -> expression MUL expression .)
    OUTPUT          reduce using rule 51 (expression -> expression MUL expression .)
    IF              reduce using rule 51 (expression -> expression MUL expression .)
    CASE            reduce using rule 51 (expression -> expression MUL expression .)
    FOR             reduce using rule 51 (expression -> expression MUL expression .)
    REPEAT          reduce using rule 51 (expression -> expression MUL expression .)
    WHILE           reduce using rule 51 (expression -> expression MUL expression .)
    PROCEDURE       reduce using rule 51 (expression -> expression MUL expression .)
    CALL            reduce using rule 51 (expression -> expression MUL expression .)
    FUNCTION        reduce using rule 51 (expression -> expression MUL expression .)
    RETURN          reduce using rule 51 (expression -> expression MUL expression .)
    OPENFILE        reduce using rule 51 (expression -> expression MUL expression .)
    READFILE        reduce using rule 51 (expression -> expression MUL expression .)
    WRITEFILE       reduce using rule 51 (expression -> expression MUL expression .)
    CLOSEFILE       reduce using rule 51 (expression -> expression MUL expression .)
    SEEK            reduce using rule 51 (expression -> expression MUL expression .)
    TYPE            reduce using rule 51 (expression -> expression MUL expression .)
    PASS            reduce using rule 51 (expression -> expression MUL expression .)
    IMPORT          reduce using rule 51 (expression -> expression MUL expression .)
    CLASS           reduce using rule 51 (expression -> expression MUL expression .)
    LEFT_SQUARE     reduce using rule 51 (expression -> expression MUL expression .)
    ID              reduce using rule 51 (expression -> expression MUL expression .)
    NOT             reduce using rule 51 (expression -> expression MUL expression .)
    LEFT_PAREN      reduce using rule 51 (expression -> expression MUL expression .)
    DATE            reduce using rule 51 (expression -> expression MUL expression .)
    BOOLEAN         reduce using rule 51 (expression -> expression MUL expression .)
    CHAR            reduce using rule 51 (expression -> expression MUL expression .)
    STRING          reduce using rule 51 (expression -> expression MUL expression .)
    REAL            reduce using rule 51 (expression -> expression MUL expression .)
    INTEGER         reduce using rule 51 (expression -> expression MUL expression .)
    POINTER         reduce using rule 51 (expression -> expression MUL expression .)
    NEW             reduce using rule 51 (expression -> expression MUL expression .)
    $end            reduce using rule 51 (expression -> expression MUL expression .)
    RIGHT_SQUARE    reduce using rule 51 (expression -> expression MUL expression .)
    COMMA           reduce using rule 51 (expression -> expression MUL expression .)
    UNTIL           reduce using rule 51 (expression -> expression MUL expression .)
    ENDWHILE        reduce using rule 51 (expression -> expression MUL expression .)
    ENDPROCEDURE    reduce using rule 51 (expression -> expression MUL expression .)
    ENDTYPE         reduce using rule 51 (expression -> expression MUL expression .)
    ENDCLASS        reduce using rule 51 (expression -> expression MUL expression .)
    ELSE            reduce using rule 51 (expression -> expression MUL expression .)
    ENDIF           reduce using rule 51 (expression -> expression MUL expression .)
    ENDFUNCTION     reduce using rule 51 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 51 (expression -> expression MUL expression .)
    NEXT            reduce using rule 51 (expression -> expression MUL expression .)
    THEN            reduce using rule 51 (expression -> expression MUL expression .)
    DO              reduce using rule 51 (expression -> expression MUL expression .)
    RIGHT_PAREN     reduce using rule 51 (expression -> expression MUL expression .)
    TO              reduce using rule 51 (expression -> expression MUL expression .)
    COLON           reduce using rule 51 (expression -> expression MUL expression .)
    STEP            reduce using rule 51 (expression -> expression MUL expression .)

  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 113

    (52) expression -> expression N_DIV expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 52 (expression -> expression N_DIV expression .)
    OR              reduce using rule 52 (expression -> expression N_DIV expression .)
    AND             reduce using rule 52 (expression -> expression N_DIV expression .)
    EQUAL           reduce using rule 52 (expression -> expression N_DIV expression .)
    NOT_EQUAL       reduce using rule 52 (expression -> expression N_DIV expression .)
    LESS            reduce using rule 52 (expression -> expression N_DIV expression .)
    GREATER         reduce using rule 52 (expression -> expression N_DIV expression .)
    LESS_EQUAL      reduce using rule 52 (expression -> expression N_DIV expression .)
    GREATER_EQUAL   reduce using rule 52 (expression -> expression N_DIV expression .)
    MOD             reduce using rule 52 (expression -> expression N_DIV expression .)
    DIV             reduce using rule 52 (expression -> expression N_DIV expression .)
    MUL             reduce using rule 52 (expression -> expression N_DIV expression .)
    N_DIV           reduce using rule 52 (expression -> expression N_DIV expression .)
    PLUS            reduce using rule 52 (expression -> expression N_DIV expression .)
    MINUS           reduce using rule 52 (expression -> expression N_DIV expression .)
    CONNECT         reduce using rule 52 (expression -> expression N_DIV expression .)
    DOT             reduce using rule 52 (expression -> expression N_DIV expression .)
    DELETE          reduce using rule 52 (expression -> expression N_DIV expression .)
    DECLARE         reduce using rule 52 (expression -> expression N_DIV expression .)
    CONSTANT        reduce using rule 52 (expression -> expression N_DIV expression .)
    INPUT           reduce using rule 52 (expression -> expression N_DIV expression .)
    OUTPUT          reduce using rule 52 (expression -> expression N_DIV expression .)
    IF              reduce using rule 52 (expression -> expression N_DIV expression .)
    CASE            reduce using rule 52 (expression -> expression N_DIV expression .)
    FOR             reduce using rule 52 (expression -> expression N_DIV expression .)
    REPEAT          reduce using rule 52 (expression -> expression N_DIV expression .)
    WHILE           reduce using rule 52 (expression -> expression N_DIV expression .)
    PROCEDURE       reduce using rule 52 (expression -> expression N_DIV expression .)
    CALL            reduce using rule 52 (expression -> expression N_DIV expression .)
    FUNCTION        reduce using rule 52 (expression -> expression N_DIV expression .)
    RETURN          reduce using rule 52 (expression -> expression N_DIV expression .)
    OPENFILE        reduce using rule 52 (expression -> expression N_DIV expression .)
    READFILE        reduce using rule 52 (expression -> expression N_DIV expression .)
    WRITEFILE       reduce using rule 52 (expression -> expression N_DIV expression .)
    CLOSEFILE       reduce using rule 52 (expression -> expression N_DIV expression .)
    SEEK            reduce using rule 52 (expression -> expression N_DIV expression .)
    TYPE            reduce using rule 52 (expression -> expression N_DIV expression .)
    PASS            reduce using rule 52 (expression -> expression N_DIV expression .)
    IMPORT          reduce using rule 52 (expression -> expression N_DIV expression .)
    CLASS           reduce using rule 52 (expression -> expression N_DIV expression .)
    LEFT_SQUARE     reduce using rule 52 (expression -> expression N_DIV expression .)
    ID              reduce using rule 52 (expression -> expression N_DIV expression .)
    NOT             reduce using rule 52 (expression -> expression N_DIV expression .)
    LEFT_PAREN      reduce using rule 52 (expression -> expression N_DIV expression .)
    DATE            reduce using rule 52 (expression -> expression N_DIV expression .)
    BOOLEAN         reduce using rule 52 (expression -> expression N_DIV expression .)
    CHAR            reduce using rule 52 (expression -> expression N_DIV expression .)
    STRING          reduce using rule 52 (expression -> expression N_DIV expression .)
    REAL            reduce using rule 52 (expression -> expression N_DIV expression .)
    INTEGER         reduce using rule 52 (expression -> expression N_DIV expression .)
    POINTER         reduce using rule 52 (expression -> expression N_DIV expression .)
    NEW             reduce using rule 52 (expression -> expression N_DIV expression .)
    $end            reduce using rule 52 (expression -> expression N_DIV expression .)
    RIGHT_SQUARE    reduce using rule 52 (expression -> expression N_DIV expression .)
    COMMA           reduce using rule 52 (expression -> expression N_DIV expression .)
    UNTIL           reduce using rule 52 (expression -> expression N_DIV expression .)
    ENDWHILE        reduce using rule 52 (expression -> expression N_DIV expression .)
    ENDPROCEDURE    reduce using rule 52 (expression -> expression N_DIV expression .)
    ENDTYPE         reduce using rule 52 (expression -> expression N_DIV expression .)
    ENDCLASS        reduce using rule 52 (expression -> expression N_DIV expression .)
    ELSE            reduce using rule 52 (expression -> expression N_DIV expression .)
    ENDIF           reduce using rule 52 (expression -> expression N_DIV expression .)
    ENDFUNCTION     reduce using rule 52 (expression -> expression N_DIV expression .)
    SEMICOLON       reduce using rule 52 (expression -> expression N_DIV expression .)
    NEXT            reduce using rule 52 (expression -> expression N_DIV expression .)
    THEN            reduce using rule 52 (expression -> expression N_DIV expression .)
    DO              reduce using rule 52 (expression -> expression N_DIV expression .)
    RIGHT_PAREN     reduce using rule 52 (expression -> expression N_DIV expression .)
    TO              reduce using rule 52 (expression -> expression N_DIV expression .)
    COLON           reduce using rule 52 (expression -> expression N_DIV expression .)
    STEP            reduce using rule 52 (expression -> expression N_DIV expression .)

  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 114

    (55) expression -> expression PLUS expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 55 (expression -> expression PLUS expression .)
    OR              reduce using rule 55 (expression -> expression PLUS expression .)
    AND             reduce using rule 55 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 55 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 55 (expression -> expression PLUS expression .)
    LESS            reduce using rule 55 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 55 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 55 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 55 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 55 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 55 (expression -> expression PLUS expression .)
    CONNECT         reduce using rule 55 (expression -> expression PLUS expression .)
    DOT             reduce using rule 55 (expression -> expression PLUS expression .)
    DELETE          reduce using rule 55 (expression -> expression PLUS expression .)
    DECLARE         reduce using rule 55 (expression -> expression PLUS expression .)
    CONSTANT        reduce using rule 55 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 55 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 55 (expression -> expression PLUS expression .)
    IF              reduce using rule 55 (expression -> expression PLUS expression .)
    CASE            reduce using rule 55 (expression -> expression PLUS expression .)
    FOR             reduce using rule 55 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 55 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 55 (expression -> expression PLUS expression .)
    PROCEDURE       reduce using rule 55 (expression -> expression PLUS expression .)
    CALL            reduce using rule 55 (expression -> expression PLUS expression .)
    FUNCTION        reduce using rule 55 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 55 (expression -> expression PLUS expression .)
    OPENFILE        reduce using rule 55 (expression -> expression PLUS expression .)
    READFILE        reduce using rule 55 (expression -> expression PLUS expression .)
    WRITEFILE       reduce using rule 55 (expression -> expression PLUS expression .)
    CLOSEFILE       reduce using rule 55 (expression -> expression PLUS expression .)
    SEEK            reduce using rule 55 (expression -> expression PLUS expression .)
    TYPE            reduce using rule 55 (expression -> expression PLUS expression .)
    PASS            reduce using rule 55 (expression -> expression PLUS expression .)
    IMPORT          reduce using rule 55 (expression -> expression PLUS expression .)
    CLASS           reduce using rule 55 (expression -> expression PLUS expression .)
    LEFT_SQUARE     reduce using rule 55 (expression -> expression PLUS expression .)
    ID              reduce using rule 55 (expression -> expression PLUS expression .)
    NOT             reduce using rule 55 (expression -> expression PLUS expression .)
    LEFT_PAREN      reduce using rule 55 (expression -> expression PLUS expression .)
    DATE            reduce using rule 55 (expression -> expression PLUS expression .)
    BOOLEAN         reduce using rule 55 (expression -> expression PLUS expression .)
    CHAR            reduce using rule 55 (expression -> expression PLUS expression .)
    STRING          reduce using rule 55 (expression -> expression PLUS expression .)
    REAL            reduce using rule 55 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 55 (expression -> expression PLUS expression .)
    POINTER         reduce using rule 55 (expression -> expression PLUS expression .)
    NEW             reduce using rule 55 (expression -> expression PLUS expression .)
    $end            reduce using rule 55 (expression -> expression PLUS expression .)
    RIGHT_SQUARE    reduce using rule 55 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 55 (expression -> expression PLUS expression .)
    UNTIL           reduce using rule 55 (expression -> expression PLUS expression .)
    ENDWHILE        reduce using rule 55 (expression -> expression PLUS expression .)
    ENDPROCEDURE    reduce using rule 55 (expression -> expression PLUS expression .)
    ENDTYPE         reduce using rule 55 (expression -> expression PLUS expression .)
    ENDCLASS        reduce using rule 55 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 55 (expression -> expression PLUS expression .)
    ENDIF           reduce using rule 55 (expression -> expression PLUS expression .)
    ENDFUNCTION     reduce using rule 55 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 55 (expression -> expression PLUS expression .)
    NEXT            reduce using rule 55 (expression -> expression PLUS expression .)
    THEN            reduce using rule 55 (expression -> expression PLUS expression .)
    RIGHT_PAREN     reduce using rule 55 (expression -> expression PLUS expression .)
    DO              reduce using rule 55 (expression -> expression PLUS expression .)
    TO              reduce using rule 55 (expression -> expression PLUS expression .)
    COLON           reduce using rule 55 (expression -> expression PLUS expression .)
    STEP            reduce using rule 55 (expression -> expression PLUS expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59

  ! MOD             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! N_DIV           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 115

    (56) expression -> expression MINUS expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    ASSIGN          reduce using rule 56 (expression -> expression MINUS expression .)
    OR              reduce using rule 56 (expression -> expression MINUS expression .)
    AND             reduce using rule 56 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 56 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 56 (expression -> expression MINUS expression .)
    LESS            reduce using rule 56 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 56 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 56 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 56 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 56 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 56 (expression -> expression MINUS expression .)
    CONNECT         reduce using rule 56 (expression -> expression MINUS expression .)
    DOT             reduce using rule 56 (expression -> expression MINUS expression .)
    DELETE          reduce using rule 56 (expression -> expression MINUS expression .)
    DECLARE         reduce using rule 56 (expression -> expression MINUS expression .)
    CONSTANT        reduce using rule 56 (expression -> expression MINUS expression .)
    INPUT           reduce using rule 56 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 56 (expression -> expression MINUS expression .)
    IF              reduce using rule 56 (expression -> expression MINUS expression .)
    CASE            reduce using rule 56 (expression -> expression MINUS expression .)
    FOR             reduce using rule 56 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 56 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 56 (expression -> expression MINUS expression .)
    PROCEDURE       reduce using rule 56 (expression -> expression MINUS expression .)
    CALL            reduce using rule 56 (expression -> expression MINUS expression .)
    FUNCTION        reduce using rule 56 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 56 (expression -> expression MINUS expression .)
    OPENFILE        reduce using rule 56 (expression -> expression MINUS expression .)
    READFILE        reduce using rule 56 (expression -> expression MINUS expression .)
    WRITEFILE       reduce using rule 56 (expression -> expression MINUS expression .)
    CLOSEFILE       reduce using rule 56 (expression -> expression MINUS expression .)
    SEEK            reduce using rule 56 (expression -> expression MINUS expression .)
    TYPE            reduce using rule 56 (expression -> expression MINUS expression .)
    PASS            reduce using rule 56 (expression -> expression MINUS expression .)
    IMPORT          reduce using rule 56 (expression -> expression MINUS expression .)
    CLASS           reduce using rule 56 (expression -> expression MINUS expression .)
    LEFT_SQUARE     reduce using rule 56 (expression -> expression MINUS expression .)
    ID              reduce using rule 56 (expression -> expression MINUS expression .)
    NOT             reduce using rule 56 (expression -> expression MINUS expression .)
    LEFT_PAREN      reduce using rule 56 (expression -> expression MINUS expression .)
    DATE            reduce using rule 56 (expression -> expression MINUS expression .)
    BOOLEAN         reduce using rule 56 (expression -> expression MINUS expression .)
    CHAR            reduce using rule 56 (expression -> expression MINUS expression .)
    STRING          reduce using rule 56 (expression -> expression MINUS expression .)
    REAL            reduce using rule 56 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 56 (expression -> expression MINUS expression .)
    POINTER         reduce using rule 56 (expression -> expression MINUS expression .)
    NEW             reduce using rule 56 (expression -> expression MINUS expression .)
    $end            reduce using rule 56 (expression -> expression MINUS expression .)
    RIGHT_SQUARE    reduce using rule 56 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 56 (expression -> expression MINUS expression .)
    UNTIL           reduce using rule 56 (expression -> expression MINUS expression .)
    ENDWHILE        reduce using rule 56 (expression -> expression MINUS expression .)
    ENDPROCEDURE    reduce using rule 56 (expression -> expression MINUS expression .)
    ENDTYPE         reduce using rule 56 (expression -> expression MINUS expression .)
    ENDCLASS        reduce using rule 56 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 56 (expression -> expression MINUS expression .)
    ENDIF           reduce using rule 56 (expression -> expression MINUS expression .)
    ENDFUNCTION     reduce using rule 56 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 56 (expression -> expression MINUS expression .)
    NEXT            reduce using rule 56 (expression -> expression MINUS expression .)
    THEN            reduce using rule 56 (expression -> expression MINUS expression .)
    RIGHT_PAREN     reduce using rule 56 (expression -> expression MINUS expression .)
    DO              reduce using rule 56 (expression -> expression MINUS expression .)
    TO              reduce using rule 56 (expression -> expression MINUS expression .)
    COLON           reduce using rule 56 (expression -> expression MINUS expression .)
    STEP            reduce using rule 56 (expression -> expression MINUS expression .)
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59

  ! MOD             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! N_DIV           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 116

    (57) expression -> expression CONNECT expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    ASSIGN          reduce using rule 57 (expression -> expression CONNECT expression .)
    DELETE          reduce using rule 57 (expression -> expression CONNECT expression .)
    DECLARE         reduce using rule 57 (expression -> expression CONNECT expression .)
    CONSTANT        reduce using rule 57 (expression -> expression CONNECT expression .)
    INPUT           reduce using rule 57 (expression -> expression CONNECT expression .)
    OUTPUT          reduce using rule 57 (expression -> expression CONNECT expression .)
    IF              reduce using rule 57 (expression -> expression CONNECT expression .)
    CASE            reduce using rule 57 (expression -> expression CONNECT expression .)
    FOR             reduce using rule 57 (expression -> expression CONNECT expression .)
    REPEAT          reduce using rule 57 (expression -> expression CONNECT expression .)
    WHILE           reduce using rule 57 (expression -> expression CONNECT expression .)
    PROCEDURE       reduce using rule 57 (expression -> expression CONNECT expression .)
    CALL            reduce using rule 57 (expression -> expression CONNECT expression .)
    FUNCTION        reduce using rule 57 (expression -> expression CONNECT expression .)
    RETURN          reduce using rule 57 (expression -> expression CONNECT expression .)
    OPENFILE        reduce using rule 57 (expression -> expression CONNECT expression .)
    READFILE        reduce using rule 57 (expression -> expression CONNECT expression .)
    WRITEFILE       reduce using rule 57 (expression -> expression CONNECT expression .)
    CLOSEFILE       reduce using rule 57 (expression -> expression CONNECT expression .)
    SEEK            reduce using rule 57 (expression -> expression CONNECT expression .)
    TYPE            reduce using rule 57 (expression -> expression CONNECT expression .)
    PASS            reduce using rule 57 (expression -> expression CONNECT expression .)
    IMPORT          reduce using rule 57 (expression -> expression CONNECT expression .)
    CLASS           reduce using rule 57 (expression -> expression CONNECT expression .)
    LEFT_SQUARE     reduce using rule 57 (expression -> expression CONNECT expression .)
    ID              reduce using rule 57 (expression -> expression CONNECT expression .)
    NOT             reduce using rule 57 (expression -> expression CONNECT expression .)
    LEFT_PAREN      reduce using rule 57 (expression -> expression CONNECT expression .)
    DATE            reduce using rule 57 (expression -> expression CONNECT expression .)
    BOOLEAN         reduce using rule 57 (expression -> expression CONNECT expression .)
    CHAR            reduce using rule 57 (expression -> expression CONNECT expression .)
    STRING          reduce using rule 57 (expression -> expression CONNECT expression .)
    REAL            reduce using rule 57 (expression -> expression CONNECT expression .)
    INTEGER         reduce using rule 57 (expression -> expression CONNECT expression .)
    POINTER         reduce using rule 57 (expression -> expression CONNECT expression .)
    NEW             reduce using rule 57 (expression -> expression CONNECT expression .)
    $end            reduce using rule 57 (expression -> expression CONNECT expression .)
    RIGHT_SQUARE    reduce using rule 57 (expression -> expression CONNECT expression .)
    COMMA           reduce using rule 57 (expression -> expression CONNECT expression .)
    UNTIL           reduce using rule 57 (expression -> expression CONNECT expression .)
    ENDWHILE        reduce using rule 57 (expression -> expression CONNECT expression .)
    ENDPROCEDURE    reduce using rule 57 (expression -> expression CONNECT expression .)
    ENDTYPE         reduce using rule 57 (expression -> expression CONNECT expression .)
    ENDCLASS        reduce using rule 57 (expression -> expression CONNECT expression .)
    ELSE            reduce using rule 57 (expression -> expression CONNECT expression .)
    ENDIF           reduce using rule 57 (expression -> expression CONNECT expression .)
    ENDFUNCTION     reduce using rule 57 (expression -> expression CONNECT expression .)
    SEMICOLON       reduce using rule 57 (expression -> expression CONNECT expression .)
    NEXT            reduce using rule 57 (expression -> expression CONNECT expression .)
    THEN            reduce using rule 57 (expression -> expression CONNECT expression .)
    DO              reduce using rule 57 (expression -> expression CONNECT expression .)
    RIGHT_PAREN     reduce using rule 57 (expression -> expression CONNECT expression .)
    TO              reduce using rule 57 (expression -> expression CONNECT expression .)
    COLON           reduce using rule 57 (expression -> expression CONNECT expression .)
    STEP            reduce using rule 57 (expression -> expression CONNECT expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! OR              [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! AND             [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! EQUAL           [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! LESS            [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! GREATER         [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! MOD             [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! MUL             [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! N_DIV           [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! PLUS            [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! CONNECT         [ reduce using rule 57 (expression -> expression CONNECT expression .) ]
  ! DOT             [ reduce using rule 57 (expression -> expression CONNECT expression .) ]


state 117

    (103) expression -> expression DOT expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOT_EQUAL resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS_EQUAL resolved as shift
  ! shift/reduce conflict for GREATER_EQUAL resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for N_DIV resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for CONNECT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    ASSIGN          reduce using rule 103 (expression -> expression DOT expression .)
    DELETE          reduce using rule 103 (expression -> expression DOT expression .)
    DECLARE         reduce using rule 103 (expression -> expression DOT expression .)
    CONSTANT        reduce using rule 103 (expression -> expression DOT expression .)
    INPUT           reduce using rule 103 (expression -> expression DOT expression .)
    OUTPUT          reduce using rule 103 (expression -> expression DOT expression .)
    IF              reduce using rule 103 (expression -> expression DOT expression .)
    CASE            reduce using rule 103 (expression -> expression DOT expression .)
    FOR             reduce using rule 103 (expression -> expression DOT expression .)
    REPEAT          reduce using rule 103 (expression -> expression DOT expression .)
    WHILE           reduce using rule 103 (expression -> expression DOT expression .)
    PROCEDURE       reduce using rule 103 (expression -> expression DOT expression .)
    CALL            reduce using rule 103 (expression -> expression DOT expression .)
    FUNCTION        reduce using rule 103 (expression -> expression DOT expression .)
    RETURN          reduce using rule 103 (expression -> expression DOT expression .)
    OPENFILE        reduce using rule 103 (expression -> expression DOT expression .)
    READFILE        reduce using rule 103 (expression -> expression DOT expression .)
    WRITEFILE       reduce using rule 103 (expression -> expression DOT expression .)
    CLOSEFILE       reduce using rule 103 (expression -> expression DOT expression .)
    SEEK            reduce using rule 103 (expression -> expression DOT expression .)
    TYPE            reduce using rule 103 (expression -> expression DOT expression .)
    PASS            reduce using rule 103 (expression -> expression DOT expression .)
    IMPORT          reduce using rule 103 (expression -> expression DOT expression .)
    CLASS           reduce using rule 103 (expression -> expression DOT expression .)
    LEFT_SQUARE     reduce using rule 103 (expression -> expression DOT expression .)
    ID              reduce using rule 103 (expression -> expression DOT expression .)
    NOT             reduce using rule 103 (expression -> expression DOT expression .)
    LEFT_PAREN      reduce using rule 103 (expression -> expression DOT expression .)
    DATE            reduce using rule 103 (expression -> expression DOT expression .)
    BOOLEAN         reduce using rule 103 (expression -> expression DOT expression .)
    CHAR            reduce using rule 103 (expression -> expression DOT expression .)
    STRING          reduce using rule 103 (expression -> expression DOT expression .)
    REAL            reduce using rule 103 (expression -> expression DOT expression .)
    INTEGER         reduce using rule 103 (expression -> expression DOT expression .)
    POINTER         reduce using rule 103 (expression -> expression DOT expression .)
    NEW             reduce using rule 103 (expression -> expression DOT expression .)
    $end            reduce using rule 103 (expression -> expression DOT expression .)
    RIGHT_SQUARE    reduce using rule 103 (expression -> expression DOT expression .)
    COMMA           reduce using rule 103 (expression -> expression DOT expression .)
    UNTIL           reduce using rule 103 (expression -> expression DOT expression .)
    ENDWHILE        reduce using rule 103 (expression -> expression DOT expression .)
    ENDPROCEDURE    reduce using rule 103 (expression -> expression DOT expression .)
    ENDTYPE         reduce using rule 103 (expression -> expression DOT expression .)
    ENDCLASS        reduce using rule 103 (expression -> expression DOT expression .)
    ELSE            reduce using rule 103 (expression -> expression DOT expression .)
    ENDIF           reduce using rule 103 (expression -> expression DOT expression .)
    ENDFUNCTION     reduce using rule 103 (expression -> expression DOT expression .)
    SEMICOLON       reduce using rule 103 (expression -> expression DOT expression .)
    NEXT            reduce using rule 103 (expression -> expression DOT expression .)
    THEN            reduce using rule 103 (expression -> expression DOT expression .)
    DO              reduce using rule 103 (expression -> expression DOT expression .)
    RIGHT_PAREN     reduce using rule 103 (expression -> expression DOT expression .)
    TO              reduce using rule 103 (expression -> expression DOT expression .)
    COLON           reduce using rule 103 (expression -> expression DOT expression .)
    STEP            reduce using rule 103 (expression -> expression DOT expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! OR              [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! AND             [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! EQUAL           [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! NOT_EQUAL       [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! LESS            [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! GREATER         [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! LESS_EQUAL      [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! MOD             [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! DIV             [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! MUL             [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! N_DIV           [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! PLUS            [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! MINUS           [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! CONNECT         [ reduce using rule 103 (expression -> expression DOT expression .) ]
  ! DOT             [ reduce using rule 103 (expression -> expression DOT expression .) ]


state 118

    (12) expression -> LEFT_SQUARE array_items RIGHT_SQUARE .

    ASSIGN          reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    OR              reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    AND             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    EQUAL           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LESS            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    GREATER         reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    MOD             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DIV             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    MUL             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    N_DIV           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PLUS            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    MINUS           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CONNECT         reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DOT             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DELETE          reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DECLARE         reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CONSTANT        reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    INPUT           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    OUTPUT          reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    IF              reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CASE            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    FOR             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    REPEAT          reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    WHILE           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CALL            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    FUNCTION        reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    RETURN          reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    OPENFILE        reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    READFILE        reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEEK            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    TYPE            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    PASS            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    IMPORT          reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CLASS           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ID              reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NOT             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DATE            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    CHAR            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    STRING          reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    REAL            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    INTEGER         reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    POINTER         reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NEW             reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    $end            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    COMMA           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    UNTIL           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ELSE            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDIF           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    NEXT            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    THEN            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    DO              reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    TO              reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    COLON           reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)
    STEP            reduce using rule 12 (expression -> LEFT_SQUARE array_items RIGHT_SQUARE .)


state 119

    (14) array_items -> array_items COMMA . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 153

state 120

    (17) statement -> INPUT ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (10) indexes -> . indexes COMMA expression
    (11) indexes -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    indexes                        shift and go to state 154
    expression                     shift and go to state 95

state 121

    (19) output_expression -> output_expression COMMA . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 155

state 122

    (21) statement -> IF expression THEN . statements ELSE statements ENDIF
    (22) statement -> IF expression THEN . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statements                     shift and go to state 156
    statement                      shift and go to state 2

state 123

    (23) statement -> CASE OF ID . cases ENDCASE
    (24) statement -> CASE OF ID . LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (25) cases -> . cases case
    (26) cases -> . case
    (27) case -> . case_expression COLON statements SEMICOLON
    (28) case -> . otherwise_statement SEMICOLON
    (29) case_expression -> . expression TO expression
    (30) case_expression -> . expression
    (31) otherwise_statement -> . OTHERWISE COLON statements
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 158
    OTHERWISE       shift and go to state 163
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    cases                          shift and go to state 157
    case                           shift and go to state 159
    case_expression                shift and go to state 160
    otherwise_statement            shift and go to state 161
    expression                     shift and go to state 162

state 124

    (32) statement -> FOR ID ASSIGN . expression TO expression STEP expression statements NEXT ID
    (33) statement -> FOR ID ASSIGN . expression TO expression statements NEXT ID
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 164

state 125

    (34) statement -> REPEAT statements UNTIL . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 165

state 126

    (35) statement -> WHILE expression DO . statements ENDWHILE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statements                     shift and go to state 166
    statement                      shift and go to state 2

state 127

    (36) statement -> WHILE expression statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDWHILE        shift and go to state 167
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 41

state 128

    (55) expression -> expression PLUS . expression
    (54) expression -> PLUS . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 168

state 129

    (56) expression -> expression MINUS . expression
    (53) expression -> MINUS . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 169

state 130

    (78) statement -> PROCEDURE ID LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (58) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (65) declare_parameters -> . declare_parameters COMMA declare_parameter
    (66) declare_parameters -> . declare_parameter
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN
    (67) declare_parameter -> . ID COLON ID
    (68) declare_parameter -> . ID COLON ARRAY
    (69) declare_parameter -> . BYREF ID COLON ID
    (70) declare_parameter -> . BYREF ID COLON ARRAY
    (71) declare_parameter -> . BYVAL ID COLON ID
    (72) declare_parameter -> . BYVAL ID COLON ARRAY
    (73) declare_parameter -> . ID COLON ARRAY OF ID
    (74) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (75) declare_parameter -> . BYVAL ID COLON ARRAY OF ID

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 170
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18
    BYREF           shift and go to state 173
    BYVAL           shift and go to state 174

    declare_parameters             shift and go to state 171
    expression                     shift and go to state 77
    declare_parameter              shift and go to state 172

state 131

    (80) statement -> PROCEDURE ID statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 175
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 132

    (79) statement -> PROCEDURE NEW LEFT_PAREN . declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (58) expression -> LEFT_PAREN . expression RIGHT_PAREN
    (65) declare_parameters -> . declare_parameters COMMA declare_parameter
    (66) declare_parameters -> . declare_parameter
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN
    (67) declare_parameter -> . ID COLON ID
    (68) declare_parameter -> . ID COLON ARRAY
    (69) declare_parameter -> . BYREF ID COLON ID
    (70) declare_parameter -> . BYREF ID COLON ARRAY
    (71) declare_parameter -> . BYVAL ID COLON ID
    (72) declare_parameter -> . BYVAL ID COLON ARRAY
    (73) declare_parameter -> . ID COLON ARRAY OF ID
    (74) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (75) declare_parameter -> . BYVAL ID COLON ARRAY OF ID

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 170
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18
    BYREF           shift and go to state 173
    BYVAL           shift and go to state 174

    declare_parameters             shift and go to state 176
    expression                     shift and go to state 77
    declare_parameter              shift and go to state 172

state 133

    (81) statement -> PROCEDURE NEW statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 177
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 134

    (58) expression -> LEFT_PAREN expression RIGHT_PAREN .

    ASSIGN          reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OR              reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    AND             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    EQUAL           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER         reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MOD             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DIV             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MUL             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    N_DIV           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PLUS            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    MINUS           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONNECT         reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DOT             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DELETE          reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DECLARE         reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CONSTANT        reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INPUT           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OUTPUT          reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IF              reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CASE            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FOR             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REPEAT          reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WHILE           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PROCEDURE       reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CALL            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    FUNCTION        reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RETURN          reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    OPENFILE        reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    READFILE        reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    WRITEFILE       reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEEK            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TYPE            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    PASS            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    IMPORT          reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CLASS           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ID              reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NOT             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DATE            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    BOOLEAN         reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    CHAR            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STRING          reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    REAL            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    INTEGER         reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    POINTER         reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEW             reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    $end            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COMMA           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    UNTIL           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDWHILE        reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDTYPE         reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDCLASS        reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ELSE            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDIF           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    SEMICOLON       reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    NEXT            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    THEN            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    DO              reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    TO              reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    COLON           reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)
    STEP            reduce using rule 58 (expression -> LEFT_PAREN expression RIGHT_PAREN .)


state 135

    (114) expression -> NEW ID LEFT_PAREN . parameters RIGHT_PAREN
    (76) parameters -> . parameters COMMA expression
    (77) parameters -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    parameters                     shift and go to state 178
    expression                     shift and go to state 98

state 136

    (82) statement -> CALL ID LEFT_PAREN . parameters RIGHT_PAREN
    (76) parameters -> . parameters COMMA expression
    (77) parameters -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    parameters                     shift and go to state 179
    expression                     shift and go to state 98

state 137

    (84) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> FUNCTION ID LEFT_PAREN . declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (65) declare_parameters -> . declare_parameters COMMA declare_parameter
    (66) declare_parameters -> . declare_parameter
    (67) declare_parameter -> . ID COLON ID
    (68) declare_parameter -> . ID COLON ARRAY
    (69) declare_parameter -> . BYREF ID COLON ID
    (70) declare_parameter -> . BYREF ID COLON ARRAY
    (71) declare_parameter -> . BYVAL ID COLON ID
    (72) declare_parameter -> . BYVAL ID COLON ARRAY
    (73) declare_parameter -> . ID COLON ARRAY OF ID
    (74) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (75) declare_parameter -> . BYVAL ID COLON ARRAY OF ID

    ID              shift and go to state 180
    BYREF           shift and go to state 173
    BYVAL           shift and go to state 174

    declare_parameters             shift and go to state 181
    declare_parameter              shift and go to state 172

state 138

    (86) statement -> FUNCTION ID RETURNS . ID statements ENDFUNCTION
    (87) statement -> FUNCTION ID RETURNS . ARRAY statements ENDFUNCTION
    (89) statement -> FUNCTION ID RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 182
    ARRAY           shift and go to state 183


state 139

    (93) statement -> OPENFILE expression FOR . READ
    (94) statement -> OPENFILE expression FOR . WRITE
    (95) statement -> OPENFILE expression FOR . APPEND
    (96) statement -> OPENFILE expression FOR . RANDOM

    READ            shift and go to state 184
    WRITE           shift and go to state 185
    APPEND          shift and go to state 186
    RANDOM          shift and go to state 187


state 140

    (97) statement -> READFILE expression COMMA . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> READFILE expression COMMA . ID

    ID              shift and go to state 188


state 141

    (99) statement -> WRITEFILE expression COMMA . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 189

state 142

    (101) statement -> SEEK expression COMMA . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 190

state 143

    (102) statement -> TYPE ID statements . ENDTYPE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDTYPE         shift and go to state 191
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 144

    (104) statement -> TYPE ID EQUAL . LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> TYPE ID EQUAL . POINTER ID

    LEFT_PAREN      shift and go to state 192
    POINTER         shift and go to state 193


state 145

    (112) statement -> CLASS ID statements . ENDCLASS
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDCLASS        shift and go to state 194
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 146

    (39) expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .

    ASSIGN          reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OR              reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    AND             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    EQUAL           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT_EQUAL       reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER         reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LESS_EQUAL      reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    GREATER_EQUAL   reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MOD             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DIV             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MUL             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    N_DIV           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONNECT         reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DOT             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DELETE          reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLASS           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    POINTER         reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEW             reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_SQUARE    reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COMMA           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    THEN            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DO              reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RIGHT_PAREN     reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TO              reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    COLON           reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STEP            reduce using rule 39 (expression -> ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 147

    (10) indexes -> indexes COMMA . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 195

state 148

    (90) expression -> ID LEFT_PAREN parameters RIGHT_PAREN .

    ASSIGN          reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    N_DIV           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DOT             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DELETE          reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 90 (expression -> ID LEFT_PAREN parameters RIGHT_PAREN .)


state 149

    (76) parameters -> parameters COMMA . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 196

state 150

    (4) statement -> DECLARE ID COLON ID .

    DELETE          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    DECLARE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CONSTANT        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    INPUT           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    OUTPUT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    IF              reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CASE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    FOR             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    REPEAT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    WHILE           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PROCEDURE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CALL            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    FUNCTION        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    RETURN          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    OPENFILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    READFILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    WRITEFILE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CLOSEFILE       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    SEEK            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    TYPE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PASS            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    IMPORT          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CLASS           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    LEFT_SQUARE     reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ID              reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NOT             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    MINUS           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    PLUS            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    LEFT_PAREN      reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    DATE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    BOOLEAN         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    CHAR            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    STRING          reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    REAL            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    INTEGER         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    POINTER         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NEW             reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    $end            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    UNTIL           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDWHILE        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDPROCEDURE    reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDTYPE         reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDCLASS        reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ELSE            reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDIF           reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    ENDFUNCTION     reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    SEMICOLON       reduce using rule 4 (statement -> DECLARE ID COLON ID .)
    NEXT            reduce using rule 4 (statement -> DECLARE ID COLON ID .)


state 151

    (6) statement -> DECLARE ID COLON ARRAY . LEFT_SQUARE dimensions RIGHT_SQUARE OF ID

    LEFT_SQUARE     shift and go to state 197


state 152

    (5) statement -> CONSTANT ID EQUAL expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    DELETE          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    DECLARE         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CONSTANT        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    INPUT           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    OUTPUT          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    IF              reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CASE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    FOR             reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    REPEAT          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    WHILE           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    PROCEDURE       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CALL            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    FUNCTION        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    RETURN          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    OPENFILE        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    READFILE        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    WRITEFILE       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CLOSEFILE       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    SEEK            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    TYPE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    PASS            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    IMPORT          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CLASS           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_SQUARE     reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ID              reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    NOT             reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    LEFT_PAREN      reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    DATE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    BOOLEAN         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    CHAR            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    STRING          reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    REAL            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    INTEGER         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    POINTER         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    NEW             reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    $end            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    UNTIL           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDWHILE        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDPROCEDURE    reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDTYPE         reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDCLASS        reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ELSE            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDIF           reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    ENDFUNCTION     reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    SEMICOLON       reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    NEXT            reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .) ]
  ! PLUS            [ reduce using rule 5 (statement -> CONSTANT ID EQUAL expression .) ]


state 153

    (14) array_items -> array_items COMMA expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 14 (array_items -> array_items COMMA expression .)
    COMMA           reduce using rule 14 (array_items -> array_items COMMA expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 154

    (17) statement -> INPUT ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (10) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 198
    COMMA           shift and go to state 147


state 155

    (19) output_expression -> output_expression COMMA expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    DELETE          reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    DECLARE         reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    CONSTANT        reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    INPUT           reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    OUTPUT          reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    IF              reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    CASE            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    FOR             reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    REPEAT          reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    WHILE           reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    PROCEDURE       reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    CALL            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    FUNCTION        reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    RETURN          reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    OPENFILE        reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    READFILE        reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    WRITEFILE       reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    CLOSEFILE       reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    SEEK            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    TYPE            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    PASS            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    IMPORT          reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    CLASS           reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    LEFT_SQUARE     reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ID              reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    NOT             reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    LEFT_PAREN      reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    DATE            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    BOOLEAN         reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    CHAR            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    STRING          reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    REAL            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    INTEGER         reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    POINTER         reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    NEW             reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    $end            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    UNTIL           reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ENDWHILE        reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ENDTYPE         reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ENDCLASS        reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ELSE            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ENDIF           reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    ENDFUNCTION     reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    SEMICOLON       reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    NEXT            reduce using rule 19 (output_expression -> output_expression COMMA expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 19 (output_expression -> output_expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 19 (output_expression -> output_expression COMMA expression .) ]


state 156

    (21) statement -> IF expression THEN statements . ELSE statements ENDIF
    (22) statement -> IF expression THEN statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ELSE            shift and go to state 199
    ENDIF           shift and go to state 200
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 41

state 157

    (23) statement -> CASE OF ID cases . ENDCASE
    (25) cases -> cases . case
    (27) case -> . case_expression COLON statements SEMICOLON
    (28) case -> . otherwise_statement SEMICOLON
    (29) case_expression -> . expression TO expression
    (30) case_expression -> . expression
    (31) otherwise_statement -> . OTHERWISE COLON statements
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDCASE         shift and go to state 201
    OTHERWISE       shift and go to state 163
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    case                           shift and go to state 202
    case_expression                shift and go to state 160
    otherwise_statement            shift and go to state 161
    expression                     shift and go to state 162

state 158

    (24) statement -> CASE OF ID LEFT_SQUARE . indexes RIGHT_SQUARE cases ENDCASE
    (12) expression -> LEFT_SQUARE . array_items RIGHT_SQUARE
    (13) expression -> LEFT_SQUARE . RIGHT_SQUARE
    (10) indexes -> . indexes COMMA expression
    (11) indexes -> . expression
    (14) array_items -> . array_items COMMA expression
    (15) array_items -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    RIGHT_SQUARE    shift and go to state 65
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    indexes                        shift and go to state 203
    array_items                    shift and go to state 64
    expression                     shift and go to state 204

state 159

    (26) cases -> case .

    ENDCASE         reduce using rule 26 (cases -> case .)
    OTHERWISE       reduce using rule 26 (cases -> case .)
    LEFT_SQUARE     reduce using rule 26 (cases -> case .)
    ID              reduce using rule 26 (cases -> case .)
    NOT             reduce using rule 26 (cases -> case .)
    MINUS           reduce using rule 26 (cases -> case .)
    PLUS            reduce using rule 26 (cases -> case .)
    LEFT_PAREN      reduce using rule 26 (cases -> case .)
    DATE            reduce using rule 26 (cases -> case .)
    BOOLEAN         reduce using rule 26 (cases -> case .)
    CHAR            reduce using rule 26 (cases -> case .)
    STRING          reduce using rule 26 (cases -> case .)
    REAL            reduce using rule 26 (cases -> case .)
    INTEGER         reduce using rule 26 (cases -> case .)
    POINTER         reduce using rule 26 (cases -> case .)
    NEW             reduce using rule 26 (cases -> case .)


state 160

    (27) case -> case_expression . COLON statements SEMICOLON

    COLON           shift and go to state 205


state 161

    (28) case -> otherwise_statement . SEMICOLON

    SEMICOLON       shift and go to state 206


state 162

    (29) case_expression -> expression . TO expression
    (30) case_expression -> expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    TO              shift and go to state 207
    COLON           reduce using rule 30 (case_expression -> expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 163

    (31) otherwise_statement -> OTHERWISE . COLON statements

    COLON           shift and go to state 208


state 164

    (32) statement -> FOR ID ASSIGN expression . TO expression STEP expression statements NEXT ID
    (33) statement -> FOR ID ASSIGN expression . TO expression statements NEXT ID
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    TO              shift and go to state 209
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 165

    (34) statement -> REPEAT statements UNTIL expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    DECLARE         reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    CONSTANT        reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    INPUT           reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    OUTPUT          reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    IF              reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    CASE            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    FOR             reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    REPEAT          reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    WHILE           reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    PROCEDURE       reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    CALL            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    FUNCTION        reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    RETURN          reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    OPENFILE        reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    READFILE        reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    WRITEFILE       reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    CLOSEFILE       reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    SEEK            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    TYPE            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    PASS            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    IMPORT          reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    CLASS           reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    LEFT_SQUARE     reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ID              reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    NOT             reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    LEFT_PAREN      reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    DATE            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    BOOLEAN         reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    CHAR            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    STRING          reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    REAL            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    INTEGER         reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    POINTER         reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    NEW             reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    $end            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    UNTIL           reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ENDWHILE        reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ENDPROCEDURE    reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ENDTYPE         reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ENDCLASS        reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ELSE            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ENDIF           reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    ENDFUNCTION     reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    SEMICOLON       reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    NEXT            reduce using rule 34 (statement -> REPEAT statements UNTIL expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 34 (statement -> REPEAT statements UNTIL expression .) ]
  ! PLUS            [ reduce using rule 34 (statement -> REPEAT statements UNTIL expression .) ]


state 166

    (35) statement -> WHILE expression DO statements . ENDWHILE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDWHILE        shift and go to state 210
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 41

state 167

    (36) statement -> WHILE expression statements ENDWHILE .

    DELETE          reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    DECLARE         reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    CONSTANT        reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    INPUT           reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    OUTPUT          reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    IF              reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    CASE            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    FOR             reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    REPEAT          reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    WHILE           reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    PROCEDURE       reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    CALL            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    FUNCTION        reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    RETURN          reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    OPENFILE        reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    READFILE        reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    WRITEFILE       reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    CLOSEFILE       reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    SEEK            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    TYPE            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    PASS            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    IMPORT          reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    CLASS           reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_SQUARE     reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ID              reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    NOT             reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    MINUS           reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    PLUS            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    DATE            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    BOOLEAN         reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    CHAR            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    STRING          reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    REAL            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    INTEGER         reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    POINTER         reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    NEW             reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    $end            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    UNTIL           reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ENDWHILE        reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ENDTYPE         reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ENDCLASS        reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ELSE            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ENDIF           reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    SEMICOLON       reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)
    NEXT            reduce using rule 36 (statement -> WHILE expression statements ENDWHILE .)


state 168

    (55) expression -> expression PLUS expression .
    (54) expression -> PLUS expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! reduce/reduce conflict for OR resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MOD resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for N_DIV resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DOT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DELETE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for PASS resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for IMPORT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CLASS resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LEFT_SQUARE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for DATE resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for POINTER resolved using rule 54 (expression -> PLUS expression .)
  ! reduce/reduce conflict for NEW resolved using rule 54 (expression -> PLUS expression .)
    DO              reduce using rule 55 (expression -> expression PLUS expression .)
    STEP            reduce using rule 55 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 54 (expression -> PLUS expression .)
    OR              reduce using rule 54 (expression -> PLUS expression .)
    AND             reduce using rule 54 (expression -> PLUS expression .)
    EQUAL           reduce using rule 54 (expression -> PLUS expression .)
    NOT_EQUAL       reduce using rule 54 (expression -> PLUS expression .)
    LESS            reduce using rule 54 (expression -> PLUS expression .)
    GREATER         reduce using rule 54 (expression -> PLUS expression .)
    LESS_EQUAL      reduce using rule 54 (expression -> PLUS expression .)
    GREATER_EQUAL   reduce using rule 54 (expression -> PLUS expression .)
    MOD             reduce using rule 54 (expression -> PLUS expression .)
    DIV             reduce using rule 54 (expression -> PLUS expression .)
    MUL             reduce using rule 54 (expression -> PLUS expression .)
    N_DIV           reduce using rule 54 (expression -> PLUS expression .)
    PLUS            reduce using rule 54 (expression -> PLUS expression .)
    MINUS           reduce using rule 54 (expression -> PLUS expression .)
    CONNECT         reduce using rule 54 (expression -> PLUS expression .)
    DOT             reduce using rule 54 (expression -> PLUS expression .)
    ENDWHILE        reduce using rule 54 (expression -> PLUS expression .)
    DELETE          reduce using rule 54 (expression -> PLUS expression .)
    DECLARE         reduce using rule 54 (expression -> PLUS expression .)
    CONSTANT        reduce using rule 54 (expression -> PLUS expression .)
    INPUT           reduce using rule 54 (expression -> PLUS expression .)
    OUTPUT          reduce using rule 54 (expression -> PLUS expression .)
    IF              reduce using rule 54 (expression -> PLUS expression .)
    CASE            reduce using rule 54 (expression -> PLUS expression .)
    FOR             reduce using rule 54 (expression -> PLUS expression .)
    REPEAT          reduce using rule 54 (expression -> PLUS expression .)
    WHILE           reduce using rule 54 (expression -> PLUS expression .)
    PROCEDURE       reduce using rule 54 (expression -> PLUS expression .)
    CALL            reduce using rule 54 (expression -> PLUS expression .)
    FUNCTION        reduce using rule 54 (expression -> PLUS expression .)
    RETURN          reduce using rule 54 (expression -> PLUS expression .)
    OPENFILE        reduce using rule 54 (expression -> PLUS expression .)
    READFILE        reduce using rule 54 (expression -> PLUS expression .)
    WRITEFILE       reduce using rule 54 (expression -> PLUS expression .)
    CLOSEFILE       reduce using rule 54 (expression -> PLUS expression .)
    SEEK            reduce using rule 54 (expression -> PLUS expression .)
    TYPE            reduce using rule 54 (expression -> PLUS expression .)
    PASS            reduce using rule 54 (expression -> PLUS expression .)
    IMPORT          reduce using rule 54 (expression -> PLUS expression .)
    CLASS           reduce using rule 54 (expression -> PLUS expression .)
    LEFT_SQUARE     reduce using rule 54 (expression -> PLUS expression .)
    ID              reduce using rule 54 (expression -> PLUS expression .)
    NOT             reduce using rule 54 (expression -> PLUS expression .)
    LEFT_PAREN      reduce using rule 54 (expression -> PLUS expression .)
    DATE            reduce using rule 54 (expression -> PLUS expression .)
    BOOLEAN         reduce using rule 54 (expression -> PLUS expression .)
    CHAR            reduce using rule 54 (expression -> PLUS expression .)
    STRING          reduce using rule 54 (expression -> PLUS expression .)
    REAL            reduce using rule 54 (expression -> PLUS expression .)
    INTEGER         reduce using rule 54 (expression -> PLUS expression .)
    POINTER         reduce using rule 54 (expression -> PLUS expression .)
    NEW             reduce using rule 54 (expression -> PLUS expression .)
    NEXT            reduce using rule 54 (expression -> PLUS expression .)

  ! OR              [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! EQUAL           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! MUL             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! N_DIV           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! CONNECT         [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DELETE          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DECLARE         [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! CONSTANT        [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! INPUT           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! OUTPUT          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! IF              [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! CASE            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! FOR             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! REPEAT          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! WHILE           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! PROCEDURE       [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! CALL            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! FUNCTION        [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! RETURN          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! OPENFILE        [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! READFILE        [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! WRITEFILE       [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! SEEK            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! TYPE            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! PASS            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! IMPORT          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! CLASS           [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! LEFT_SQUARE     [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! ID              [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! DATE            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! BOOLEAN         [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! CHAR            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! STRING          [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! REAL            [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! INTEGER         [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! POINTER         [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! NEW             [ reduce using rule 55 (expression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 169

    (56) expression -> expression MINUS expression .
    (53) expression -> MINUS expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! reduce/reduce conflict for OR resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for AND resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MOD resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIV resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MUL resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for N_DIV resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONNECT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DOT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DELETE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DECLARE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INPUT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FOR resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CALL resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for OPENFILE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for READFILE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WRITEFILE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CLOSEFILE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for SEEK resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for TYPE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PASS resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IMPORT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CLASS resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LEFT_SQUARE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for ID resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LEFT_PAREN resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DATE resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CHAR resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for REAL resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for POINTER resolved using rule 53 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NEW resolved using rule 53 (expression -> MINUS expression .)
    DO              reduce using rule 56 (expression -> expression MINUS expression .)
    STEP            reduce using rule 56 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 53 (expression -> MINUS expression .)
    OR              reduce using rule 53 (expression -> MINUS expression .)
    AND             reduce using rule 53 (expression -> MINUS expression .)
    EQUAL           reduce using rule 53 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 53 (expression -> MINUS expression .)
    LESS            reduce using rule 53 (expression -> MINUS expression .)
    GREATER         reduce using rule 53 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 53 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 53 (expression -> MINUS expression .)
    MOD             reduce using rule 53 (expression -> MINUS expression .)
    DIV             reduce using rule 53 (expression -> MINUS expression .)
    MUL             reduce using rule 53 (expression -> MINUS expression .)
    N_DIV           reduce using rule 53 (expression -> MINUS expression .)
    PLUS            reduce using rule 53 (expression -> MINUS expression .)
    MINUS           reduce using rule 53 (expression -> MINUS expression .)
    CONNECT         reduce using rule 53 (expression -> MINUS expression .)
    DOT             reduce using rule 53 (expression -> MINUS expression .)
    ENDWHILE        reduce using rule 53 (expression -> MINUS expression .)
    DELETE          reduce using rule 53 (expression -> MINUS expression .)
    DECLARE         reduce using rule 53 (expression -> MINUS expression .)
    CONSTANT        reduce using rule 53 (expression -> MINUS expression .)
    INPUT           reduce using rule 53 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 53 (expression -> MINUS expression .)
    IF              reduce using rule 53 (expression -> MINUS expression .)
    CASE            reduce using rule 53 (expression -> MINUS expression .)
    FOR             reduce using rule 53 (expression -> MINUS expression .)
    REPEAT          reduce using rule 53 (expression -> MINUS expression .)
    WHILE           reduce using rule 53 (expression -> MINUS expression .)
    PROCEDURE       reduce using rule 53 (expression -> MINUS expression .)
    CALL            reduce using rule 53 (expression -> MINUS expression .)
    FUNCTION        reduce using rule 53 (expression -> MINUS expression .)
    RETURN          reduce using rule 53 (expression -> MINUS expression .)
    OPENFILE        reduce using rule 53 (expression -> MINUS expression .)
    READFILE        reduce using rule 53 (expression -> MINUS expression .)
    WRITEFILE       reduce using rule 53 (expression -> MINUS expression .)
    CLOSEFILE       reduce using rule 53 (expression -> MINUS expression .)
    SEEK            reduce using rule 53 (expression -> MINUS expression .)
    TYPE            reduce using rule 53 (expression -> MINUS expression .)
    PASS            reduce using rule 53 (expression -> MINUS expression .)
    IMPORT          reduce using rule 53 (expression -> MINUS expression .)
    CLASS           reduce using rule 53 (expression -> MINUS expression .)
    LEFT_SQUARE     reduce using rule 53 (expression -> MINUS expression .)
    ID              reduce using rule 53 (expression -> MINUS expression .)
    NOT             reduce using rule 53 (expression -> MINUS expression .)
    LEFT_PAREN      reduce using rule 53 (expression -> MINUS expression .)
    DATE            reduce using rule 53 (expression -> MINUS expression .)
    BOOLEAN         reduce using rule 53 (expression -> MINUS expression .)
    CHAR            reduce using rule 53 (expression -> MINUS expression .)
    STRING          reduce using rule 53 (expression -> MINUS expression .)
    REAL            reduce using rule 53 (expression -> MINUS expression .)
    INTEGER         reduce using rule 53 (expression -> MINUS expression .)
    POINTER         reduce using rule 53 (expression -> MINUS expression .)
    NEW             reduce using rule 53 (expression -> MINUS expression .)
    NEXT            reduce using rule 53 (expression -> MINUS expression .)

  ! OR              [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! EQUAL           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! MUL             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! N_DIV           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! PLUS            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! CONNECT         [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DELETE          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DECLARE         [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! CONSTANT        [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! INPUT           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! OUTPUT          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! IF              [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! CASE            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! FOR             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! REPEAT          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! WHILE           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! PROCEDURE       [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! CALL            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! FUNCTION        [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! RETURN          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! OPENFILE        [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! READFILE        [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! WRITEFILE       [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! CLOSEFILE       [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! SEEK            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! TYPE            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! PASS            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! IMPORT          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! CLASS           [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! LEFT_SQUARE     [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! ID              [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! LEFT_PAREN      [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! DATE            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! BOOLEAN         [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! CHAR            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! STRING          [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! REAL            [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! INTEGER         [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! POINTER         [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! NEW             [ reduce using rule 56 (expression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 48 ]
  ! AND             [ shift and go to state 49 ]
  ! EQUAL           [ shift and go to state 50 ]
  ! NOT_EQUAL       [ shift and go to state 51 ]
  ! LESS            [ shift and go to state 52 ]
  ! GREATER         [ shift and go to state 53 ]
  ! LESS_EQUAL      [ shift and go to state 54 ]
  ! GREATER_EQUAL   [ shift and go to state 55 ]
  ! MOD             [ shift and go to state 56 ]
  ! DIV             [ shift and go to state 57 ]
  ! MUL             [ shift and go to state 58 ]
  ! N_DIV           [ shift and go to state 59 ]
  ! PLUS            [ shift and go to state 60 ]
  ! MINUS           [ shift and go to state 61 ]
  ! CONNECT         [ shift and go to state 62 ]
  ! DOT             [ shift and go to state 63 ]


state 170

    (38) expression -> ID .
    (39) expression -> ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (90) expression -> ID . LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> ID . LEFT_PAREN RIGHT_PAREN
    (67) declare_parameter -> ID . COLON ID
    (68) declare_parameter -> ID . COLON ARRAY
    (73) declare_parameter -> ID . COLON ARRAY OF ID

    RIGHT_PAREN     reduce using rule 38 (expression -> ID .)
    OR              reduce using rule 38 (expression -> ID .)
    AND             reduce using rule 38 (expression -> ID .)
    EQUAL           reduce using rule 38 (expression -> ID .)
    NOT_EQUAL       reduce using rule 38 (expression -> ID .)
    LESS            reduce using rule 38 (expression -> ID .)
    GREATER         reduce using rule 38 (expression -> ID .)
    LESS_EQUAL      reduce using rule 38 (expression -> ID .)
    GREATER_EQUAL   reduce using rule 38 (expression -> ID .)
    MOD             reduce using rule 38 (expression -> ID .)
    DIV             reduce using rule 38 (expression -> ID .)
    MUL             reduce using rule 38 (expression -> ID .)
    N_DIV           reduce using rule 38 (expression -> ID .)
    PLUS            reduce using rule 38 (expression -> ID .)
    MINUS           reduce using rule 38 (expression -> ID .)
    CONNECT         reduce using rule 38 (expression -> ID .)
    DOT             reduce using rule 38 (expression -> ID .)
    LEFT_SQUARE     shift and go to state 43
    LEFT_PAREN      shift and go to state 44
    COLON           shift and go to state 211


state 171

    (78) statement -> PROCEDURE ID LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (65) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 212
    COMMA           shift and go to state 213


state 172

    (66) declare_parameters -> declare_parameter .

    RIGHT_PAREN     reduce using rule 66 (declare_parameters -> declare_parameter .)
    COMMA           reduce using rule 66 (declare_parameters -> declare_parameter .)


state 173

    (69) declare_parameter -> BYREF . ID COLON ID
    (70) declare_parameter -> BYREF . ID COLON ARRAY
    (74) declare_parameter -> BYREF . ID COLON ARRAY OF ID

    ID              shift and go to state 214


state 174

    (71) declare_parameter -> BYVAL . ID COLON ID
    (72) declare_parameter -> BYVAL . ID COLON ARRAY
    (75) declare_parameter -> BYVAL . ID COLON ARRAY OF ID

    ID              shift and go to state 215


state 175

    (80) statement -> PROCEDURE ID statements ENDPROCEDURE .

    DELETE          reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    DECLARE         reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INPUT           reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    IF              reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CASE            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FOR             reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REPEAT          reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    WHILE           reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CALL            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    RETURN          reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    READFILE        reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    SEEK            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    TYPE            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PASS            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    IMPORT          reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CLASS           reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ID              reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NOT             reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    MINUS           reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    PLUS            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    DATE            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    CHAR            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    STRING          reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    REAL            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    INTEGER         reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    POINTER         reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NEW             reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    $end            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    UNTIL           reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ELSE            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDIF           reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)
    NEXT            reduce using rule 80 (statement -> PROCEDURE ID statements ENDPROCEDURE .)


state 176

    (79) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters . RIGHT_PAREN statements ENDPROCEDURE
    (65) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 216
    COMMA           shift and go to state 213


state 177

    (81) statement -> PROCEDURE NEW statements ENDPROCEDURE .

    DELETE          reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    DECLARE         reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    INPUT           reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    IF              reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    CASE            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    FOR             reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    REPEAT          reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    WHILE           reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    CALL            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    RETURN          reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    READFILE        reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    SEEK            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    TYPE            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    PASS            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    IMPORT          reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    CLASS           reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ID              reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    NOT             reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    MINUS           reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    PLUS            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    DATE            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    CHAR            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    STRING          reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    REAL            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    INTEGER         reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    POINTER         reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    NEW             reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    $end            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    UNTIL           reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ELSE            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ENDIF           reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)
    NEXT            reduce using rule 81 (statement -> PROCEDURE NEW statements ENDPROCEDURE .)


state 178

    (114) expression -> NEW ID LEFT_PAREN parameters . RIGHT_PAREN
    (76) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 217
    COMMA           shift and go to state 149


state 179

    (82) statement -> CALL ID LEFT_PAREN parameters . RIGHT_PAREN
    (76) parameters -> parameters . COMMA expression

    RIGHT_PAREN     shift and go to state 218
    COMMA           shift and go to state 149


state 180

    (67) declare_parameter -> ID . COLON ID
    (68) declare_parameter -> ID . COLON ARRAY
    (73) declare_parameter -> ID . COLON ARRAY OF ID

    COLON           shift and go to state 211


state 181

    (84) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters . RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (65) declare_parameters -> declare_parameters . COMMA declare_parameter

    RIGHT_PAREN     shift and go to state 219
    COMMA           shift and go to state 213


state 182

    (86) statement -> FUNCTION ID RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 220
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 183

    (87) statement -> FUNCTION ID RETURNS ARRAY . statements ENDFUNCTION
    (89) statement -> FUNCTION ID RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 222
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 221
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 184

    (93) statement -> OPENFILE expression FOR READ .

    DELETE          reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    DECLARE         reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    CONSTANT        reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    INPUT           reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    OUTPUT          reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    IF              reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    CASE            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    FOR             reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    REPEAT          reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    WHILE           reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    PROCEDURE       reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    CALL            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    FUNCTION        reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    RETURN          reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    OPENFILE        reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    READFILE        reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    WRITEFILE       reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    CLOSEFILE       reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    SEEK            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    TYPE            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    PASS            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    IMPORT          reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    CLASS           reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    LEFT_SQUARE     reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ID              reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    NOT             reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    MINUS           reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    PLUS            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    LEFT_PAREN      reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    DATE            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    BOOLEAN         reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    CHAR            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    STRING          reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    REAL            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    INTEGER         reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    POINTER         reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    NEW             reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    $end            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    UNTIL           reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ENDWHILE        reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ENDPROCEDURE    reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ENDTYPE         reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ENDCLASS        reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ELSE            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ENDIF           reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    ENDFUNCTION     reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    SEMICOLON       reduce using rule 93 (statement -> OPENFILE expression FOR READ .)
    NEXT            reduce using rule 93 (statement -> OPENFILE expression FOR READ .)


state 185

    (94) statement -> OPENFILE expression FOR WRITE .

    DELETE          reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    DECLARE         reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    CONSTANT        reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    INPUT           reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    OUTPUT          reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    IF              reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    CASE            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    FOR             reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    REPEAT          reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    WHILE           reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    PROCEDURE       reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    CALL            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    FUNCTION        reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    RETURN          reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    OPENFILE        reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    READFILE        reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    WRITEFILE       reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    CLOSEFILE       reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    SEEK            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    TYPE            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    PASS            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    IMPORT          reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    CLASS           reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    LEFT_SQUARE     reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ID              reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    NOT             reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    MINUS           reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    PLUS            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    LEFT_PAREN      reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    DATE            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    BOOLEAN         reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    CHAR            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    STRING          reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    REAL            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    INTEGER         reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    POINTER         reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    NEW             reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    $end            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    UNTIL           reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ENDWHILE        reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ENDPROCEDURE    reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ENDTYPE         reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ENDCLASS        reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ELSE            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ENDIF           reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    ENDFUNCTION     reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    SEMICOLON       reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)
    NEXT            reduce using rule 94 (statement -> OPENFILE expression FOR WRITE .)


state 186

    (95) statement -> OPENFILE expression FOR APPEND .

    DELETE          reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    DECLARE         reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    CONSTANT        reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    INPUT           reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    OUTPUT          reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    IF              reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    CASE            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    FOR             reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    REPEAT          reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    WHILE           reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    PROCEDURE       reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    CALL            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    FUNCTION        reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    RETURN          reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    OPENFILE        reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    READFILE        reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    WRITEFILE       reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    CLOSEFILE       reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    SEEK            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    TYPE            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    PASS            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    IMPORT          reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    CLASS           reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    LEFT_SQUARE     reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ID              reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    NOT             reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    MINUS           reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    PLUS            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    LEFT_PAREN      reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    DATE            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    BOOLEAN         reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    CHAR            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    STRING          reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    REAL            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    INTEGER         reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    POINTER         reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    NEW             reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    $end            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    UNTIL           reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ENDWHILE        reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ENDPROCEDURE    reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ENDTYPE         reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ENDCLASS        reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ELSE            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ENDIF           reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    ENDFUNCTION     reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    SEMICOLON       reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)
    NEXT            reduce using rule 95 (statement -> OPENFILE expression FOR APPEND .)


state 187

    (96) statement -> OPENFILE expression FOR RANDOM .

    DELETE          reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    DECLARE         reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    CONSTANT        reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    INPUT           reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    OUTPUT          reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    IF              reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    CASE            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    FOR             reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    REPEAT          reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    WHILE           reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    PROCEDURE       reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    CALL            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    FUNCTION        reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    RETURN          reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    OPENFILE        reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    READFILE        reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    WRITEFILE       reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    CLOSEFILE       reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    SEEK            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    TYPE            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    PASS            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    IMPORT          reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    CLASS           reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    LEFT_SQUARE     reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ID              reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    NOT             reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    MINUS           reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    PLUS            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    LEFT_PAREN      reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    DATE            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    BOOLEAN         reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    CHAR            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    STRING          reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    REAL            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    INTEGER         reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    POINTER         reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    NEW             reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    $end            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    UNTIL           reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ENDWHILE        reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ENDPROCEDURE    reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ENDTYPE         reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ENDCLASS        reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ELSE            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ENDIF           reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    ENDFUNCTION     reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    SEMICOLON       reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)
    NEXT            reduce using rule 96 (statement -> OPENFILE expression FOR RANDOM .)


state 188

    (97) statement -> READFILE expression COMMA ID . LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> READFILE expression COMMA ID .

  ! shift/reduce conflict for LEFT_SQUARE resolved as shift
    LEFT_SQUARE     shift and go to state 223
    DELETE          reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    DECLARE         reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    CONSTANT        reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    INPUT           reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    OUTPUT          reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    IF              reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    CASE            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    FOR             reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    REPEAT          reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    WHILE           reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    PROCEDURE       reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    CALL            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    FUNCTION        reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    RETURN          reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    OPENFILE        reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    READFILE        reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    WRITEFILE       reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    CLOSEFILE       reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    SEEK            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    TYPE            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    PASS            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    IMPORT          reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    CLASS           reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ID              reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    NOT             reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    MINUS           reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    PLUS            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    LEFT_PAREN      reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    DATE            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    BOOLEAN         reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    CHAR            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    STRING          reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    REAL            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    INTEGER         reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    POINTER         reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    NEW             reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    $end            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    UNTIL           reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ENDWHILE        reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ENDPROCEDURE    reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ENDTYPE         reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ENDCLASS        reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ELSE            reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ENDIF           reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    ENDFUNCTION     reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    SEMICOLON       reduce using rule 98 (statement -> READFILE expression COMMA ID .)
    NEXT            reduce using rule 98 (statement -> READFILE expression COMMA ID .)

  ! LEFT_SQUARE     [ reduce using rule 98 (statement -> READFILE expression COMMA ID .) ]


state 189

    (99) statement -> WRITEFILE expression COMMA expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    DECLARE         reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    CONSTANT        reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    INPUT           reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    OUTPUT          reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    IF              reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    CASE            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    FOR             reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    REPEAT          reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    WHILE           reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    PROCEDURE       reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    CALL            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    FUNCTION        reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    RETURN          reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    OPENFILE        reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    READFILE        reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    WRITEFILE       reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    CLOSEFILE       reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    SEEK            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    TYPE            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    PASS            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    IMPORT          reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    CLASS           reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    LEFT_SQUARE     reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ID              reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    NOT             reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    LEFT_PAREN      reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    DATE            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    BOOLEAN         reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    CHAR            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    STRING          reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    REAL            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    INTEGER         reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    POINTER         reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    NEW             reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    $end            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    UNTIL           reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ENDWHILE        reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ENDTYPE         reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ENDCLASS        reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ELSE            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ENDIF           reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    ENDFUNCTION     reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    SEMICOLON       reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    NEXT            reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 99 (statement -> WRITEFILE expression COMMA expression .) ]


state 190

    (101) statement -> SEEK expression COMMA expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    DELETE          reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    DECLARE         reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    CONSTANT        reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    INPUT           reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    OUTPUT          reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    IF              reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    CASE            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    FOR             reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    REPEAT          reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    WHILE           reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    PROCEDURE       reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    CALL            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    FUNCTION        reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    RETURN          reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    OPENFILE        reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    READFILE        reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    WRITEFILE       reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    CLOSEFILE       reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    SEEK            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    TYPE            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    PASS            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    IMPORT          reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    CLASS           reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    LEFT_SQUARE     reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ID              reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    NOT             reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    LEFT_PAREN      reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    DATE            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    BOOLEAN         reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    CHAR            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    STRING          reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    REAL            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    INTEGER         reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    POINTER         reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    NEW             reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    $end            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    UNTIL           reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ENDWHILE        reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ENDPROCEDURE    reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ENDTYPE         reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ENDCLASS        reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ELSE            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ENDIF           reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    ENDFUNCTION     reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    SEMICOLON       reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    NEXT            reduce using rule 101 (statement -> SEEK expression COMMA expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! MINUS           [ reduce using rule 101 (statement -> SEEK expression COMMA expression .) ]
  ! PLUS            [ reduce using rule 101 (statement -> SEEK expression COMMA expression .) ]


state 191

    (102) statement -> TYPE ID statements ENDTYPE .

    DELETE          reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    DECLARE         reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    CONSTANT        reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    INPUT           reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    OUTPUT          reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    IF              reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    CASE            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    FOR             reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    REPEAT          reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    WHILE           reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    PROCEDURE       reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    CALL            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    FUNCTION        reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    RETURN          reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    OPENFILE        reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    READFILE        reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    WRITEFILE       reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    CLOSEFILE       reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    SEEK            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    TYPE            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    PASS            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    IMPORT          reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    CLASS           reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    LEFT_SQUARE     reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ID              reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    NOT             reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    MINUS           reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    PLUS            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    LEFT_PAREN      reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    DATE            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    BOOLEAN         reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    CHAR            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    STRING          reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    REAL            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    INTEGER         reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    POINTER         reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    NEW             reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    $end            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    UNTIL           reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ENDWHILE        reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ENDPROCEDURE    reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ENDTYPE         reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ENDCLASS        reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ELSE            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ENDIF           reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    ENDFUNCTION     reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    SEMICOLON       reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)
    NEXT            reduce using rule 102 (statement -> TYPE ID statements ENDTYPE .)


state 192

    (104) statement -> TYPE ID EQUAL LEFT_PAREN . enumerate_items RIGHT_PAREN
    (105) enumerate_items -> . enumerate_items COMMA ID
    (106) enumerate_items -> . ID

    ID              shift and go to state 224

    enumerate_items                shift and go to state 225

state 193

    (108) statement -> TYPE ID EQUAL POINTER . ID

    ID              shift and go to state 226


state 194

    (112) statement -> CLASS ID statements ENDCLASS .

    DELETE          reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    DECLARE         reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    CONSTANT        reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    INPUT           reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    OUTPUT          reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    IF              reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    CASE            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    FOR             reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    REPEAT          reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    WHILE           reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    PROCEDURE       reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    CALL            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    FUNCTION        reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    RETURN          reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    OPENFILE        reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    READFILE        reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    WRITEFILE       reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    CLOSEFILE       reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    SEEK            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    TYPE            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    PASS            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    IMPORT          reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    CLASS           reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    LEFT_SQUARE     reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ID              reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    NOT             reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    MINUS           reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    PLUS            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    LEFT_PAREN      reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    DATE            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    BOOLEAN         reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    CHAR            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    STRING          reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    REAL            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    INTEGER         reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    POINTER         reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    NEW             reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    $end            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    UNTIL           reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ENDWHILE        reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ENDPROCEDURE    reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ENDTYPE         reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ENDCLASS        reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ELSE            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ENDIF           reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    ENDFUNCTION     reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    SEMICOLON       reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)
    NEXT            reduce using rule 112 (statement -> CLASS ID statements ENDCLASS .)


state 195

    (10) indexes -> indexes COMMA expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 10 (indexes -> indexes COMMA expression .)
    COMMA           reduce using rule 10 (indexes -> indexes COMMA expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 196

    (76) parameters -> parameters COMMA expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_PAREN     reduce using rule 76 (parameters -> parameters COMMA expression .)
    COMMA           reduce using rule 76 (parameters -> parameters COMMA expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 197

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE . dimensions RIGHT_SQUARE OF ID
    (7) dimensions -> . dimensions COMMA dimension
    (8) dimensions -> . dimension
    (9) dimension -> . expression COLON expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    dimensions                     shift and go to state 227
    dimension                      shift and go to state 228
    expression                     shift and go to state 229

state 198

    (17) statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DELETE          reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLASS           reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    POINTER         reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEW             reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 17 (statement -> INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 199

    (21) statement -> IF expression THEN statements ELSE . statements ENDIF
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statements                     shift and go to state 230
    statement                      shift and go to state 2

state 200

    (22) statement -> IF expression THEN statements ENDIF .

    DELETE          reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    DECLARE         reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    CONSTANT        reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    INPUT           reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    OUTPUT          reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    IF              reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    CASE            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    FOR             reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    REPEAT          reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    WHILE           reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    PROCEDURE       reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    CALL            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    FUNCTION        reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    RETURN          reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    OPENFILE        reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    READFILE        reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    WRITEFILE       reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    CLOSEFILE       reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    SEEK            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    TYPE            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    PASS            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    IMPORT          reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    CLASS           reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    LEFT_SQUARE     reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ID              reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    NOT             reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    MINUS           reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    PLUS            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    LEFT_PAREN      reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    DATE            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    BOOLEAN         reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    CHAR            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    STRING          reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    REAL            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    INTEGER         reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    POINTER         reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    NEW             reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    $end            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    UNTIL           reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ENDWHILE        reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ENDPROCEDURE    reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ENDTYPE         reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ENDCLASS        reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ELSE            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ENDIF           reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    ENDFUNCTION     reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    SEMICOLON       reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)
    NEXT            reduce using rule 22 (statement -> IF expression THEN statements ENDIF .)


state 201

    (23) statement -> CASE OF ID cases ENDCASE .

    DELETE          reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    DECLARE         reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    CONSTANT        reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    INPUT           reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    OUTPUT          reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    IF              reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    CASE            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    FOR             reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    REPEAT          reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    WHILE           reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    PROCEDURE       reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    CALL            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    FUNCTION        reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    RETURN          reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    OPENFILE        reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    READFILE        reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    WRITEFILE       reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    CLOSEFILE       reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    SEEK            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    TYPE            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    PASS            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    IMPORT          reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    CLASS           reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    LEFT_SQUARE     reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ID              reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    NOT             reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    MINUS           reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    PLUS            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    LEFT_PAREN      reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    DATE            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    BOOLEAN         reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    CHAR            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    STRING          reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    REAL            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    INTEGER         reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    POINTER         reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    NEW             reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    $end            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    UNTIL           reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ENDWHILE        reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ENDTYPE         reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ENDCLASS        reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ELSE            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ENDIF           reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    ENDFUNCTION     reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    SEMICOLON       reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)
    NEXT            reduce using rule 23 (statement -> CASE OF ID cases ENDCASE .)


state 202

    (25) cases -> cases case .

    ENDCASE         reduce using rule 25 (cases -> cases case .)
    OTHERWISE       reduce using rule 25 (cases -> cases case .)
    LEFT_SQUARE     reduce using rule 25 (cases -> cases case .)
    ID              reduce using rule 25 (cases -> cases case .)
    NOT             reduce using rule 25 (cases -> cases case .)
    MINUS           reduce using rule 25 (cases -> cases case .)
    PLUS            reduce using rule 25 (cases -> cases case .)
    LEFT_PAREN      reduce using rule 25 (cases -> cases case .)
    DATE            reduce using rule 25 (cases -> cases case .)
    BOOLEAN         reduce using rule 25 (cases -> cases case .)
    CHAR            reduce using rule 25 (cases -> cases case .)
    STRING          reduce using rule 25 (cases -> cases case .)
    REAL            reduce using rule 25 (cases -> cases case .)
    INTEGER         reduce using rule 25 (cases -> cases case .)
    POINTER         reduce using rule 25 (cases -> cases case .)
    NEW             reduce using rule 25 (cases -> cases case .)


state 203

    (24) statement -> CASE OF ID LEFT_SQUARE indexes . RIGHT_SQUARE cases ENDCASE
    (10) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 231
    COMMA           shift and go to state 147


state 204

    (11) indexes -> expression .
    (15) array_items -> expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

  ! reduce/reduce conflict for RIGHT_SQUARE resolved using rule 11 (indexes -> expression .)
  ! reduce/reduce conflict for COMMA resolved using rule 11 (indexes -> expression .)
    RIGHT_SQUARE    reduce using rule 11 (indexes -> expression .)
    COMMA           reduce using rule 11 (indexes -> expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63

  ! RIGHT_SQUARE    [ reduce using rule 15 (array_items -> expression .) ]
  ! COMMA           [ reduce using rule 15 (array_items -> expression .) ]


state 205

    (27) case -> case_expression COLON . statements SEMICOLON
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 232
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 206

    (28) case -> otherwise_statement SEMICOLON .

    ENDCASE         reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    OTHERWISE       reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    LEFT_SQUARE     reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    ID              reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    NOT             reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    MINUS           reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    PLUS            reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    LEFT_PAREN      reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    DATE            reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    BOOLEAN         reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    CHAR            reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    STRING          reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    REAL            reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    INTEGER         reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    POINTER         reduce using rule 28 (case -> otherwise_statement SEMICOLON .)
    NEW             reduce using rule 28 (case -> otherwise_statement SEMICOLON .)


state 207

    (29) case_expression -> expression TO . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 233

state 208

    (31) otherwise_statement -> OTHERWISE COLON . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 234
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 209

    (32) statement -> FOR ID ASSIGN expression TO . expression STEP expression statements NEXT ID
    (33) statement -> FOR ID ASSIGN expression TO . expression statements NEXT ID
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 235

state 210

    (35) statement -> WHILE expression DO statements ENDWHILE .

    DELETE          reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    DECLARE         reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    CONSTANT        reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    INPUT           reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    OUTPUT          reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    IF              reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    CASE            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    FOR             reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    REPEAT          reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    WHILE           reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    PROCEDURE       reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    CALL            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    FUNCTION        reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    RETURN          reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    OPENFILE        reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    READFILE        reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    WRITEFILE       reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    CLOSEFILE       reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    SEEK            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    TYPE            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    PASS            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    IMPORT          reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    CLASS           reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    LEFT_SQUARE     reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ID              reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    NOT             reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    MINUS           reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    PLUS            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    LEFT_PAREN      reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    DATE            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    BOOLEAN         reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    CHAR            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    STRING          reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    REAL            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    INTEGER         reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    POINTER         reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    NEW             reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    $end            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    UNTIL           reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDWHILE        reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDPROCEDURE    reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDTYPE         reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDCLASS        reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ELSE            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDIF           reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    ENDFUNCTION     reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    SEMICOLON       reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)
    NEXT            reduce using rule 35 (statement -> WHILE expression DO statements ENDWHILE .)


state 211

    (67) declare_parameter -> ID COLON . ID
    (68) declare_parameter -> ID COLON . ARRAY
    (73) declare_parameter -> ID COLON . ARRAY OF ID

    ID              shift and go to state 236
    ARRAY           shift and go to state 237


state 212

    (78) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 238
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 213

    (65) declare_parameters -> declare_parameters COMMA . declare_parameter
    (67) declare_parameter -> . ID COLON ID
    (68) declare_parameter -> . ID COLON ARRAY
    (69) declare_parameter -> . BYREF ID COLON ID
    (70) declare_parameter -> . BYREF ID COLON ARRAY
    (71) declare_parameter -> . BYVAL ID COLON ID
    (72) declare_parameter -> . BYVAL ID COLON ARRAY
    (73) declare_parameter -> . ID COLON ARRAY OF ID
    (74) declare_parameter -> . BYREF ID COLON ARRAY OF ID
    (75) declare_parameter -> . BYVAL ID COLON ARRAY OF ID

    ID              shift and go to state 180
    BYREF           shift and go to state 173
    BYVAL           shift and go to state 174

    declare_parameter              shift and go to state 239

state 214

    (69) declare_parameter -> BYREF ID . COLON ID
    (70) declare_parameter -> BYREF ID . COLON ARRAY
    (74) declare_parameter -> BYREF ID . COLON ARRAY OF ID

    COLON           shift and go to state 240


state 215

    (71) declare_parameter -> BYVAL ID . COLON ID
    (72) declare_parameter -> BYVAL ID . COLON ARRAY
    (75) declare_parameter -> BYVAL ID . COLON ARRAY OF ID

    COLON           shift and go to state 241


state 216

    (79) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN . statements ENDPROCEDURE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 242
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 217

    (114) expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .

    ASSIGN          reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    OR              reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    AND             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    EQUAL           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT_EQUAL       reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER         reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LESS_EQUAL      reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    GREATER_EQUAL   reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    MOD             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DIV             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    MUL             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    N_DIV           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONNECT         reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DOT             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DELETE          reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_SQUARE    reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    COMMA           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    THEN            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    DO              reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    RIGHT_PAREN     reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    TO              reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    COLON           reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)
    STEP            reduce using rule 114 (expression -> NEW ID LEFT_PAREN parameters RIGHT_PAREN .)


state 218

    (82) statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .

    DELETE          reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    DECLARE         reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CONSTANT        reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INPUT           reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OUTPUT          reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IF              reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CASE            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FOR             reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REPEAT          reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WHILE           reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PROCEDURE       reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CALL            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    FUNCTION        reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    RETURN          reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    OPENFILE        reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    READFILE        reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    WRITEFILE       reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEEK            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    TYPE            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PASS            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    IMPORT          reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CLASS           reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ID              reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NOT             reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    MINUS           reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    PLUS            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    DATE            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    BOOLEAN         reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    CHAR            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    STRING          reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    REAL            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    INTEGER         reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    POINTER         reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEW             reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    $end            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    UNTIL           reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDWHILE        reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDTYPE         reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDCLASS        reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ELSE            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDIF           reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    SEMICOLON       reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)
    NEXT            reduce using rule 82 (statement -> CALL ID LEFT_PAREN parameters RIGHT_PAREN .)


state 219

    (84) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ID statements ENDFUNCTION
    (85) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN . RETURNS ARRAY OF ID statements ENDFUNCTION

    RETURNS         shift and go to state 243


state 220

    (86) statement -> FUNCTION ID RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 244
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 221

    (87) statement -> FUNCTION ID RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 245
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 222

    (89) statement -> FUNCTION ID RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 246


state 223

    (97) statement -> READFILE expression COMMA ID LEFT_SQUARE . indexes RIGHT_SQUARE
    (10) indexes -> . indexes COMMA expression
    (11) indexes -> . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 95
    indexes                        shift and go to state 247

state 224

    (106) enumerate_items -> ID .

    RIGHT_PAREN     reduce using rule 106 (enumerate_items -> ID .)
    COMMA           reduce using rule 106 (enumerate_items -> ID .)


state 225

    (104) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items . RIGHT_PAREN
    (105) enumerate_items -> enumerate_items . COMMA ID

    RIGHT_PAREN     shift and go to state 248
    COMMA           shift and go to state 249


state 226

    (108) statement -> TYPE ID EQUAL POINTER ID .

    DELETE          reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    DECLARE         reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    CONSTANT        reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    INPUT           reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    OUTPUT          reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    IF              reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    CASE            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    FOR             reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    REPEAT          reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    WHILE           reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    PROCEDURE       reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    CALL            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    FUNCTION        reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    RETURN          reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    OPENFILE        reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    READFILE        reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    WRITEFILE       reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    CLOSEFILE       reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    SEEK            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    TYPE            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    PASS            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    IMPORT          reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    CLASS           reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    LEFT_SQUARE     reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ID              reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    NOT             reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    MINUS           reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    PLUS            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    LEFT_PAREN      reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    DATE            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    BOOLEAN         reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    CHAR            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    STRING          reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    REAL            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    INTEGER         reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    POINTER         reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    NEW             reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    $end            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    UNTIL           reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDWHILE        reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDPROCEDURE    reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDTYPE         reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDCLASS        reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ELSE            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDIF           reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    ENDFUNCTION     reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    SEMICOLON       reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)
    NEXT            reduce using rule 108 (statement -> TYPE ID EQUAL POINTER ID .)


state 227

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions . RIGHT_SQUARE OF ID
    (7) dimensions -> dimensions . COMMA dimension

    RIGHT_SQUARE    shift and go to state 250
    COMMA           shift and go to state 251


state 228

    (8) dimensions -> dimension .

    RIGHT_SQUARE    reduce using rule 8 (dimensions -> dimension .)
    COMMA           reduce using rule 8 (dimensions -> dimension .)


state 229

    (9) dimension -> expression . COLON expression
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    COLON           shift and go to state 252
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 230

    (21) statement -> IF expression THEN statements ELSE statements . ENDIF
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDIF           shift and go to state 253
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 41

state 231

    (24) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE . cases ENDCASE
    (25) cases -> . cases case
    (26) cases -> . case
    (27) case -> . case_expression COLON statements SEMICOLON
    (28) case -> . otherwise_statement SEMICOLON
    (29) case_expression -> . expression TO expression
    (30) case_expression -> . expression
    (31) otherwise_statement -> . OTHERWISE COLON statements
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OTHERWISE       shift and go to state 163
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    cases                          shift and go to state 254
    case                           shift and go to state 159
    case_expression                shift and go to state 160
    otherwise_statement            shift and go to state 161
    expression                     shift and go to state 162

state 232

    (27) case -> case_expression COLON statements . SEMICOLON
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    SEMICOLON       shift and go to state 255
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 233

    (29) case_expression -> expression TO expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    COLON           reduce using rule 29 (case_expression -> expression TO expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 234

    (31) otherwise_statement -> OTHERWISE COLON statements .
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    SEMICOLON       reduce using rule 31 (otherwise_statement -> OTHERWISE COLON statements .)
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 235

    (32) statement -> FOR ID ASSIGN expression TO expression . STEP expression statements NEXT ID
    (33) statement -> FOR ID ASSIGN expression TO expression . statements NEXT ID
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    STEP            shift and go to state 256
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statements                     shift and go to state 257
    statement                      shift and go to state 2

state 236

    (67) declare_parameter -> ID COLON ID .

    RIGHT_PAREN     reduce using rule 67 (declare_parameter -> ID COLON ID .)
    COMMA           reduce using rule 67 (declare_parameter -> ID COLON ID .)


state 237

    (68) declare_parameter -> ID COLON ARRAY .
    (73) declare_parameter -> ID COLON ARRAY . OF ID

    RIGHT_PAREN     reduce using rule 68 (declare_parameter -> ID COLON ARRAY .)
    COMMA           reduce using rule 68 (declare_parameter -> ID COLON ARRAY .)
    OF              shift and go to state 258


state 238

    (78) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 259
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 239

    (65) declare_parameters -> declare_parameters COMMA declare_parameter .

    RIGHT_PAREN     reduce using rule 65 (declare_parameters -> declare_parameters COMMA declare_parameter .)
    COMMA           reduce using rule 65 (declare_parameters -> declare_parameters COMMA declare_parameter .)


state 240

    (69) declare_parameter -> BYREF ID COLON . ID
    (70) declare_parameter -> BYREF ID COLON . ARRAY
    (74) declare_parameter -> BYREF ID COLON . ARRAY OF ID

    ID              shift and go to state 260
    ARRAY           shift and go to state 261


state 241

    (71) declare_parameter -> BYVAL ID COLON . ID
    (72) declare_parameter -> BYVAL ID COLON . ARRAY
    (75) declare_parameter -> BYVAL ID COLON . ARRAY OF ID

    ID              shift and go to state 262
    ARRAY           shift and go to state 263


state 242

    (79) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements . ENDPROCEDURE
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDPROCEDURE    shift and go to state 264
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 243

    (84) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ID statements ENDFUNCTION
    (85) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY statements ENDFUNCTION
    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS . ARRAY OF ID statements ENDFUNCTION

    ID              shift and go to state 265
    ARRAY           shift and go to state 266


state 244

    (86) statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 86 (statement -> FUNCTION ID RETURNS ID statements ENDFUNCTION .)


state 245

    (87) statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 87 (statement -> FUNCTION ID RETURNS ARRAY statements ENDFUNCTION .)


state 246

    (89) statement -> FUNCTION ID RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 267
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 247

    (97) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes . RIGHT_SQUARE
    (10) indexes -> indexes . COMMA expression

    RIGHT_SQUARE    shift and go to state 268
    COMMA           shift and go to state 147


state 248

    (104) statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .

    DELETE          reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    DECLARE         reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CONSTANT        reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INPUT           reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OUTPUT          reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    IF              reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CASE            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FOR             reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REPEAT          reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WHILE           reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PROCEDURE       reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CALL            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    FUNCTION        reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    RETURN          reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    OPENFILE        reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    READFILE        reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    WRITEFILE       reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CLOSEFILE       reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEEK            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    TYPE            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PASS            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    IMPORT          reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CLASS           reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    LEFT_SQUARE     reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ID              reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NOT             reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    MINUS           reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    PLUS            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    LEFT_PAREN      reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    DATE            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    BOOLEAN         reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    CHAR            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    STRING          reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    REAL            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    INTEGER         reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    POINTER         reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NEW             reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    $end            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    UNTIL           reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDWHILE        reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDPROCEDURE    reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDTYPE         reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDCLASS        reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ELSE            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDIF           reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    ENDFUNCTION     reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    SEMICOLON       reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)
    NEXT            reduce using rule 104 (statement -> TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN .)


state 249

    (105) enumerate_items -> enumerate_items COMMA . ID

    ID              shift and go to state 269


state 250

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE . OF ID

    OF              shift and go to state 270


state 251

    (7) dimensions -> dimensions COMMA . dimension
    (9) dimension -> . expression COLON expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    dimension                      shift and go to state 271
    expression                     shift and go to state 229

state 252

    (9) dimension -> expression COLON . expression
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 272

state 253

    (21) statement -> IF expression THEN statements ELSE statements ENDIF .

    DELETE          reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    DECLARE         reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CONSTANT        reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INPUT           reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OUTPUT          reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IF              reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CASE            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FOR             reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REPEAT          reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WHILE           reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PROCEDURE       reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CALL            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    FUNCTION        reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    RETURN          reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    OPENFILE        reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    READFILE        reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    WRITEFILE       reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CLOSEFILE       reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEEK            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    TYPE            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PASS            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    IMPORT          reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CLASS           reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_SQUARE     reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ID              reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NOT             reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    MINUS           reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    PLUS            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    LEFT_PAREN      reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    DATE            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    BOOLEAN         reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    CHAR            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    STRING          reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    REAL            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    INTEGER         reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    POINTER         reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEW             reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    $end            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    UNTIL           reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDWHILE        reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDPROCEDURE    reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDTYPE         reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDCLASS        reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ELSE            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDIF           reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    ENDFUNCTION     reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    SEMICOLON       reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)
    NEXT            reduce using rule 21 (statement -> IF expression THEN statements ELSE statements ENDIF .)


state 254

    (24) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases . ENDCASE
    (25) cases -> cases . case
    (27) case -> . case_expression COLON statements SEMICOLON
    (28) case -> . otherwise_statement SEMICOLON
    (29) case_expression -> . expression TO expression
    (30) case_expression -> . expression
    (31) otherwise_statement -> . OTHERWISE COLON statements
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDCASE         shift and go to state 273
    OTHERWISE       shift and go to state 163
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    case                           shift and go to state 202
    case_expression                shift and go to state 160
    otherwise_statement            shift and go to state 161
    expression                     shift and go to state 162

state 255

    (27) case -> case_expression COLON statements SEMICOLON .

    ENDCASE         reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    OTHERWISE       reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    LEFT_SQUARE     reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    ID              reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    NOT             reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    MINUS           reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    PLUS            reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    LEFT_PAREN      reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    DATE            reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    BOOLEAN         reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    CHAR            reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    STRING          reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    REAL            reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    INTEGER         reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    POINTER         reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)
    NEW             reduce using rule 27 (case -> case_expression COLON statements SEMICOLON .)


state 256

    (32) statement -> FOR ID ASSIGN expression TO expression STEP . expression statements NEXT ID
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 274

state 257

    (33) statement -> FOR ID ASSIGN expression TO expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    NEXT            shift and go to state 275
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 41

state 258

    (73) declare_parameter -> ID COLON ARRAY OF . ID

    ID              shift and go to state 276


state 259

    (78) statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 78 (statement -> PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 260

    (69) declare_parameter -> BYREF ID COLON ID .

    RIGHT_PAREN     reduce using rule 69 (declare_parameter -> BYREF ID COLON ID .)
    COMMA           reduce using rule 69 (declare_parameter -> BYREF ID COLON ID .)


state 261

    (70) declare_parameter -> BYREF ID COLON ARRAY .
    (74) declare_parameter -> BYREF ID COLON ARRAY . OF ID

    RIGHT_PAREN     reduce using rule 70 (declare_parameter -> BYREF ID COLON ARRAY .)
    COMMA           reduce using rule 70 (declare_parameter -> BYREF ID COLON ARRAY .)
    OF              shift and go to state 277


state 262

    (71) declare_parameter -> BYVAL ID COLON ID .

    RIGHT_PAREN     reduce using rule 71 (declare_parameter -> BYVAL ID COLON ID .)
    COMMA           reduce using rule 71 (declare_parameter -> BYVAL ID COLON ID .)


state 263

    (72) declare_parameter -> BYVAL ID COLON ARRAY .
    (75) declare_parameter -> BYVAL ID COLON ARRAY . OF ID

    RIGHT_PAREN     reduce using rule 72 (declare_parameter -> BYVAL ID COLON ARRAY .)
    COMMA           reduce using rule 72 (declare_parameter -> BYVAL ID COLON ARRAY .)
    OF              shift and go to state 278


state 264

    (79) statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .

    DELETE          reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DECLARE         reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CONSTANT        reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INPUT           reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OUTPUT          reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IF              reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CASE            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FOR             reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REPEAT          reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WHILE           reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PROCEDURE       reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CALL            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    FUNCTION        reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    RETURN          reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    OPENFILE        reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    READFILE        reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    WRITEFILE       reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLOSEFILE       reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEEK            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    TYPE            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PASS            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    IMPORT          reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CLASS           reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_SQUARE     reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ID              reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NOT             reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    MINUS           reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    PLUS            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    LEFT_PAREN      reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    DATE            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    BOOLEAN         reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    CHAR            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    STRING          reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    REAL            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    INTEGER         reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    POINTER         reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEW             reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    $end            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    UNTIL           reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDWHILE        reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDPROCEDURE    reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDTYPE         reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDCLASS        reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ELSE            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDIF           reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    ENDFUNCTION     reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    SEMICOLON       reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)
    NEXT            reduce using rule 79 (statement -> PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE .)


state 265

    (84) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 279
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 266

    (85) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . statements ENDFUNCTION
    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY . OF ID statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OF              shift and go to state 281
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 280
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 267

    (89) statement -> FUNCTION ID RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 282
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 268

    (97) statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .

    DELETE          reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DECLARE         reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CONSTANT        reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INPUT           reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OUTPUT          reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IF              reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CASE            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FOR             reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REPEAT          reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WHILE           reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PROCEDURE       reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CALL            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    FUNCTION        reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    RETURN          reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    OPENFILE        reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    READFILE        reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    WRITEFILE       reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLOSEFILE       reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEEK            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    TYPE            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PASS            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    IMPORT          reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CLASS           reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_SQUARE     reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ID              reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NOT             reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    MINUS           reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    PLUS            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    LEFT_PAREN      reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    DATE            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    BOOLEAN         reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    CHAR            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    STRING          reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    REAL            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    INTEGER         reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    POINTER         reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEW             reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    $end            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    UNTIL           reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDWHILE        reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDPROCEDURE    reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDTYPE         reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDCLASS        reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ELSE            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDIF           reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    ENDFUNCTION     reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    SEMICOLON       reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)
    NEXT            reduce using rule 97 (statement -> READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE .)


state 269

    (105) enumerate_items -> enumerate_items COMMA ID .

    RIGHT_PAREN     reduce using rule 105 (enumerate_items -> enumerate_items COMMA ID .)
    COMMA           reduce using rule 105 (enumerate_items -> enumerate_items COMMA ID .)


state 270

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF . ID

    ID              shift and go to state 283


state 271

    (7) dimensions -> dimensions COMMA dimension .

    RIGHT_SQUARE    reduce using rule 7 (dimensions -> dimensions COMMA dimension .)
    COMMA           reduce using rule 7 (dimensions -> dimensions COMMA dimension .)


state 272

    (9) dimension -> expression COLON expression .
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression

    RIGHT_SQUARE    reduce using rule 9 (dimension -> expression COLON expression .)
    COMMA           reduce using rule 9 (dimension -> expression COLON expression .)
    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63


state 273

    (24) statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .

    DELETE          reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    DECLARE         reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CONSTANT        reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    INPUT           reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    OUTPUT          reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    IF              reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CASE            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    FOR             reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    REPEAT          reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    WHILE           reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PROCEDURE       reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CALL            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    FUNCTION        reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    RETURN          reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    OPENFILE        reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    READFILE        reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    WRITEFILE       reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CLOSEFILE       reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    SEEK            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    TYPE            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PASS            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    IMPORT          reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CLASS           reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    LEFT_SQUARE     reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ID              reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    NOT             reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    MINUS           reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    PLUS            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    LEFT_PAREN      reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    DATE            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    BOOLEAN         reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    CHAR            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    STRING          reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    REAL            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    INTEGER         reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    POINTER         reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    NEW             reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    $end            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    UNTIL           reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDWHILE        reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDPROCEDURE    reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDTYPE         reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDCLASS        reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ELSE            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDIF           reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    ENDFUNCTION     reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    SEMICOLON       reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)
    NEXT            reduce using rule 24 (statement -> CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE .)


state 274

    (32) statement -> FOR ID ASSIGN expression TO expression STEP expression . statements NEXT ID
    (40) expression -> expression . OR expression
    (41) expression -> expression . AND expression
    (43) expression -> expression . EQUAL expression
    (44) expression -> expression . NOT_EQUAL expression
    (45) expression -> expression . LESS expression
    (46) expression -> expression . GREATER expression
    (47) expression -> expression . LESS_EQUAL expression
    (48) expression -> expression . GREATER_EQUAL expression
    (49) expression -> expression . MOD expression
    (50) expression -> expression . DIV expression
    (51) expression -> expression . MUL expression
    (52) expression -> expression . N_DIV expression
    (55) expression -> expression . PLUS expression
    (56) expression -> expression . MINUS expression
    (57) expression -> expression . CONNECT expression
    (103) expression -> expression . DOT expression
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    OR              shift and go to state 48
    AND             shift and go to state 49
    EQUAL           shift and go to state 50
    NOT_EQUAL       shift and go to state 51
    LESS            shift and go to state 52
    GREATER         shift and go to state 53
    LESS_EQUAL      shift and go to state 54
    GREATER_EQUAL   shift and go to state 55
    MOD             shift and go to state 56
    DIV             shift and go to state 57
    MUL             shift and go to state 58
    N_DIV           shift and go to state 59
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129
    CONNECT         shift and go to state 62
    DOT             shift and go to state 63
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statements                     shift and go to state 284
    statement                      shift and go to state 2

state 275

    (33) statement -> FOR ID ASSIGN expression TO expression statements NEXT . ID

    ID              shift and go to state 285


state 276

    (73) declare_parameter -> ID COLON ARRAY OF ID .

    RIGHT_PAREN     reduce using rule 73 (declare_parameter -> ID COLON ARRAY OF ID .)
    COMMA           reduce using rule 73 (declare_parameter -> ID COLON ARRAY OF ID .)


state 277

    (74) declare_parameter -> BYREF ID COLON ARRAY OF . ID

    ID              shift and go to state 286


state 278

    (75) declare_parameter -> BYVAL ID COLON ARRAY OF . ID

    ID              shift and go to state 287


state 279

    (84) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 288
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 280

    (85) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 289
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 281

    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF . ID statements ENDFUNCTION

    ID              shift and go to state 290


state 282

    (89) statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 89 (statement -> FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION .)


state 283

    (6) statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .

    DELETE          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DECLARE         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CONSTANT        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INPUT           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OUTPUT          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IF              reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CASE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FOR             reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REPEAT          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WHILE           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PROCEDURE       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CALL            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    FUNCTION        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    RETURN          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    OPENFILE        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    READFILE        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    WRITEFILE       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLOSEFILE       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEEK            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    TYPE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PASS            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    IMPORT          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CLASS           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_SQUARE     reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ID              reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NOT             reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    MINUS           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    PLUS            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    LEFT_PAREN      reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    DATE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    BOOLEAN         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    CHAR            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    STRING          reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    REAL            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    INTEGER         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    POINTER         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEW             reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    $end            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    UNTIL           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDWHILE        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDPROCEDURE    reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDTYPE         reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDCLASS        reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ELSE            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDIF           reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    ENDFUNCTION     reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    SEMICOLON       reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)
    NEXT            reduce using rule 6 (statement -> DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID .)


state 284

    (32) statement -> FOR ID ASSIGN expression TO expression STEP expression statements . NEXT ID
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    NEXT            shift and go to state 291
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    expression                     shift and go to state 7
    statement                      shift and go to state 41

state 285

    (33) statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .

    DELETE          reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    DECLARE         reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CONSTANT        reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INPUT           reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OUTPUT          reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IF              reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CASE            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FOR             reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REPEAT          reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WHILE           reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PROCEDURE       reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CALL            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    FUNCTION        reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    RETURN          reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    OPENFILE        reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    READFILE        reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    WRITEFILE       reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEEK            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    TYPE            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PASS            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    IMPORT          reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CLASS           reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_SQUARE     reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ID              reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NOT             reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    MINUS           reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    PLUS            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    DATE            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    BOOLEAN         reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    CHAR            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    STRING          reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    REAL            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    INTEGER         reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    POINTER         reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEW             reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    $end            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    UNTIL           reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDWHILE        reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDTYPE         reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDCLASS        reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ELSE            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDIF           reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    SEMICOLON       reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)
    NEXT            reduce using rule 33 (statement -> FOR ID ASSIGN expression TO expression statements NEXT ID .)


state 286

    (74) declare_parameter -> BYREF ID COLON ARRAY OF ID .

    RIGHT_PAREN     reduce using rule 74 (declare_parameter -> BYREF ID COLON ARRAY OF ID .)
    COMMA           reduce using rule 74 (declare_parameter -> BYREF ID COLON ARRAY OF ID .)


state 287

    (75) declare_parameter -> BYVAL ID COLON ARRAY OF ID .

    RIGHT_PAREN     reduce using rule 75 (declare_parameter -> BYVAL ID COLON ARRAY OF ID .)
    COMMA           reduce using rule 75 (declare_parameter -> BYVAL ID COLON ARRAY OF ID .)


state 288

    (84) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .

    DELETE          reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INPUT           reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IF              reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CASE            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FOR             reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WHILE           reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CALL            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    RETURN          reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    READFILE        reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEEK            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    TYPE            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PASS            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CLASS           reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ID              reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NOT             reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    MINUS           reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    PLUS            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    DATE            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    CHAR            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    STRING          reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    REAL            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    POINTER         reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEW             reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    $end            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ELSE            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)
    NEXT            reduce using rule 84 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION .)


state 289

    (85) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .

    DELETE          reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DECLARE         reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CONSTANT        reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INPUT           reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OUTPUT          reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IF              reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CASE            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FOR             reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REPEAT          reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WHILE           reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CALL            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    FUNCTION        reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    RETURN          reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    OPENFILE        reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    READFILE        reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEEK            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    TYPE            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PASS            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    IMPORT          reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CLASS           reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ID              reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NOT             reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    MINUS           reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    PLUS            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    DATE            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    CHAR            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    STRING          reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    REAL            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    INTEGER         reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    POINTER         reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEW             reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    $end            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    UNTIL           reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ELSE            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDIF           reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)
    NEXT            reduce using rule 85 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION .)


state 290

    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID . statements ENDFUNCTION
    (1) statements -> . statements statement
    (2) statements -> . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statements                     shift and go to state 292
    statement                      shift and go to state 2
    expression                     shift and go to state 7

state 291

    (32) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT . ID

    ID              shift and go to state 293


state 292

    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements . ENDFUNCTION
    (1) statements -> statements . statement
    (3) statement -> . DELETE ID
    (4) statement -> . DECLARE ID COLON ID
    (5) statement -> . CONSTANT ID EQUAL expression
    (6) statement -> . DECLARE ID COLON ARRAY LEFT_SQUARE dimensions RIGHT_SQUARE OF ID
    (16) statement -> . INPUT ID
    (17) statement -> . INPUT ID LEFT_SQUARE indexes RIGHT_SQUARE
    (18) statement -> . OUTPUT output_expression
    (21) statement -> . IF expression THEN statements ELSE statements ENDIF
    (22) statement -> . IF expression THEN statements ENDIF
    (23) statement -> . CASE OF ID cases ENDCASE
    (24) statement -> . CASE OF ID LEFT_SQUARE indexes RIGHT_SQUARE cases ENDCASE
    (32) statement -> . FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID
    (33) statement -> . FOR ID ASSIGN expression TO expression statements NEXT ID
    (34) statement -> . REPEAT statements UNTIL expression
    (35) statement -> . WHILE expression DO statements ENDWHILE
    (36) statement -> . WHILE expression statements ENDWHILE
    (37) statement -> . expression
    (78) statement -> . PROCEDURE ID LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (79) statement -> . PROCEDURE NEW LEFT_PAREN declare_parameters RIGHT_PAREN statements ENDPROCEDURE
    (80) statement -> . PROCEDURE ID statements ENDPROCEDURE
    (81) statement -> . PROCEDURE NEW statements ENDPROCEDURE
    (82) statement -> . CALL ID LEFT_PAREN parameters RIGHT_PAREN
    (83) statement -> . CALL ID
    (84) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ID statements ENDFUNCTION
    (85) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY statements ENDFUNCTION
    (86) statement -> . FUNCTION ID RETURNS ID statements ENDFUNCTION
    (87) statement -> . FUNCTION ID RETURNS ARRAY statements ENDFUNCTION
    (88) statement -> . FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION
    (89) statement -> . FUNCTION ID RETURNS ARRAY OF ID statements ENDFUNCTION
    (92) statement -> . RETURN expression
    (93) statement -> . OPENFILE expression FOR READ
    (94) statement -> . OPENFILE expression FOR WRITE
    (95) statement -> . OPENFILE expression FOR APPEND
    (96) statement -> . OPENFILE expression FOR RANDOM
    (97) statement -> . READFILE expression COMMA ID LEFT_SQUARE indexes RIGHT_SQUARE
    (98) statement -> . READFILE expression COMMA ID
    (99) statement -> . WRITEFILE expression COMMA expression
    (100) statement -> . CLOSEFILE expression
    (101) statement -> . SEEK expression COMMA expression
    (102) statement -> . TYPE ID statements ENDTYPE
    (104) statement -> . TYPE ID EQUAL LEFT_PAREN enumerate_items RIGHT_PAREN
    (108) statement -> . TYPE ID EQUAL POINTER ID
    (109) statement -> . PASS
    (110) statement -> . IMPORT expression
    (111) statement -> . expression ASSIGN expression
    (112) statement -> . CLASS ID statements ENDCLASS
    (12) expression -> . LEFT_SQUARE array_items RIGHT_SQUARE
    (13) expression -> . LEFT_SQUARE RIGHT_SQUARE
    (38) expression -> . ID
    (39) expression -> . ID LEFT_SQUARE indexes RIGHT_SQUARE
    (40) expression -> . expression OR expression
    (41) expression -> . expression AND expression
    (42) expression -> . NOT expression
    (43) expression -> . expression EQUAL expression
    (44) expression -> . expression NOT_EQUAL expression
    (45) expression -> . expression LESS expression
    (46) expression -> . expression GREATER expression
    (47) expression -> . expression LESS_EQUAL expression
    (48) expression -> . expression GREATER_EQUAL expression
    (49) expression -> . expression MOD expression
    (50) expression -> . expression DIV expression
    (51) expression -> . expression MUL expression
    (52) expression -> . expression N_DIV expression
    (53) expression -> . MINUS expression
    (54) expression -> . PLUS expression
    (55) expression -> . expression PLUS expression
    (56) expression -> . expression MINUS expression
    (57) expression -> . expression CONNECT expression
    (58) expression -> . LEFT_PAREN expression RIGHT_PAREN
    (59) expression -> . DATE
    (60) expression -> . BOOLEAN
    (61) expression -> . CHAR
    (62) expression -> . STRING
    (63) expression -> . REAL
    (64) expression -> . INTEGER
    (90) expression -> . ID LEFT_PAREN parameters RIGHT_PAREN
    (91) expression -> . ID LEFT_PAREN RIGHT_PAREN
    (103) expression -> . expression DOT expression
    (107) expression -> . POINTER expression
    (113) expression -> . NEW ID
    (114) expression -> . NEW ID LEFT_PAREN parameters RIGHT_PAREN

    ENDFUNCTION     shift and go to state 294
    DELETE          shift and go to state 3
    DECLARE         shift and go to state 5
    CONSTANT        shift and go to state 6
    INPUT           shift and go to state 9
    OUTPUT          shift and go to state 10
    IF              shift and go to state 11
    CASE            shift and go to state 12
    FOR             shift and go to state 13
    REPEAT          shift and go to state 14
    WHILE           shift and go to state 15
    PROCEDURE       shift and go to state 16
    CALL            shift and go to state 19
    FUNCTION        shift and go to state 20
    RETURN          shift and go to state 21
    OPENFILE        shift and go to state 22
    READFILE        shift and go to state 23
    WRITEFILE       shift and go to state 24
    CLOSEFILE       shift and go to state 25
    SEEK            shift and go to state 26
    TYPE            shift and go to state 27
    PASS            shift and go to state 29
    IMPORT          shift and go to state 30
    CLASS           shift and go to state 31
    LEFT_SQUARE     shift and go to state 8
    ID              shift and go to state 4
    NOT             shift and go to state 32
    MINUS           shift and go to state 33
    PLUS            shift and go to state 34
    LEFT_PAREN      shift and go to state 17
    DATE            shift and go to state 35
    BOOLEAN         shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 38
    REAL            shift and go to state 39
    INTEGER         shift and go to state 40
    POINTER         shift and go to state 28
    NEW             shift and go to state 18

    statement                      shift and go to state 41
    expression                     shift and go to state 7

state 293

    (32) statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .

    DELETE          reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    DECLARE         reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CONSTANT        reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INPUT           reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OUTPUT          reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    IF              reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CASE            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FOR             reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REPEAT          reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WHILE           reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PROCEDURE       reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CALL            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    FUNCTION        reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    RETURN          reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    OPENFILE        reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    READFILE        reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    WRITEFILE       reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CLOSEFILE       reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEEK            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    TYPE            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PASS            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    IMPORT          reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CLASS           reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    LEFT_SQUARE     reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ID              reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NOT             reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    MINUS           reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    PLUS            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    LEFT_PAREN      reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    DATE            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    BOOLEAN         reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    CHAR            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    STRING          reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    REAL            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    INTEGER         reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    POINTER         reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NEW             reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    $end            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    UNTIL           reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDWHILE        reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDPROCEDURE    reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDTYPE         reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDCLASS        reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ELSE            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDIF           reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    ENDFUNCTION     reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    SEMICOLON       reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)
    NEXT            reduce using rule 32 (statement -> FOR ID ASSIGN expression TO expression STEP expression statements NEXT ID .)


state 294

    (88) statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .

    DELETE          reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DECLARE         reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CONSTANT        reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INPUT           reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OUTPUT          reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IF              reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CASE            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FOR             reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REPEAT          reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WHILE           reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PROCEDURE       reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CALL            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    FUNCTION        reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    RETURN          reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    OPENFILE        reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    READFILE        reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    WRITEFILE       reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLOSEFILE       reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEEK            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    TYPE            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PASS            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    IMPORT          reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CLASS           reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_SQUARE     reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ID              reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NOT             reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    MINUS           reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    PLUS            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    LEFT_PAREN      reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    DATE            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    BOOLEAN         reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    CHAR            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    STRING          reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    REAL            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    INTEGER         reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    POINTER         reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEW             reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    $end            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    UNTIL           reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDWHILE        reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDPROCEDURE    reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDTYPE         reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDCLASS        reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ELSE            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDIF           reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    ENDFUNCTION     reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    SEMICOLON       reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)
    NEXT            reduce using rule 88 (statement -> FUNCTION ID LEFT_PAREN declare_parameters RIGHT_PAREN RETURNS ARRAY OF ID statements ENDFUNCTION .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFT_SQUARE in state 4 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 7 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 7 resolved as shift
WARNING: shift/reduce conflict for LEFT_SQUARE in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAREN in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 88 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for LESS in state 88 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 88 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for MOD in state 88 resolved as shift
WARNING: shift/reduce conflict for DIV in state 88 resolved as shift
WARNING: shift/reduce conflict for MUL in state 88 resolved as shift
WARNING: shift/reduce conflict for N_DIV in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 88 resolved as shift
WARNING: shift/reduce conflict for DOT in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for LESS in state 116 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 116 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MOD in state 116 resolved as shift
WARNING: shift/reduce conflict for DIV in state 116 resolved as shift
WARNING: shift/reduce conflict for MUL in state 116 resolved as shift
WARNING: shift/reduce conflict for N_DIV in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 116 resolved as shift
WARNING: shift/reduce conflict for DOT in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for LESS in state 117 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 117 resolved as shift
WARNING: shift/reduce conflict for LESS_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for GREATER_EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MOD in state 117 resolved as shift
WARNING: shift/reduce conflict for DIV in state 117 resolved as shift
WARNING: shift/reduce conflict for MUL in state 117 resolved as shift
WARNING: shift/reduce conflict for N_DIV in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for CONNECT in state 117 resolved as shift
WARNING: shift/reduce conflict for DOT in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 155 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for LEFT_SQUARE in state 188 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 189 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 189 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 190 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 190 resolved as shift
WARNING: reduce/reduce conflict in state 168 resolved using rule (expression -> PLUS expression)
WARNING: rejected rule (expression -> expression PLUS expression) in state 168
WARNING: reduce/reduce conflict in state 169 resolved using rule (expression -> MINUS expression)
WARNING: rejected rule (expression -> expression MINUS expression) in state 169
WARNING: reduce/reduce conflict in state 204 resolved using rule (indexes -> expression)
WARNING: rejected rule (array_items -> expression) in state 204
